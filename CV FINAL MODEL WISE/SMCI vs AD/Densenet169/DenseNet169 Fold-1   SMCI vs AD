{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"cUJl8Mw0QXoP","executionInfo":{"status":"ok","timestamp":1649667560676,"user_tz":-240,"elapsed":6278,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["import torch\n","import os\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import roc_curve\n","from sklearn.metrics import roc_auc_score\n","from sklearn.metrics import classification_report\n"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4148,"status":"ok","timestamp":1649667564811,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"NYznFz4FMRll","outputId":"749b6729-f3f8-4d8c-ce2f-c8321f3a9c64"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting monai\n","  Downloading monai-0.8.1-202202162213-py3-none-any.whl (721 kB)\n","\u001b[?25l\r\u001b[K     |▌                               | 10 kB 34.0 MB/s eta 0:00:01\r\u001b[K     |█                               | 20 kB 9.8 MB/s eta 0:00:01\r\u001b[K     |█▍                              | 30 kB 8.3 MB/s eta 0:00:01\r\u001b[K     |█▉                              | 40 kB 3.6 MB/s eta 0:00:01\r\u001b[K     |██▎                             | 51 kB 3.7 MB/s eta 0:00:01\r\u001b[K     |██▊                             | 61 kB 4.4 MB/s eta 0:00:01\r\u001b[K     |███▏                            | 71 kB 4.5 MB/s eta 0:00:01\r\u001b[K     |███▋                            | 81 kB 4.8 MB/s eta 0:00:01\r\u001b[K     |████                            | 92 kB 5.4 MB/s eta 0:00:01\r\u001b[K     |████▌                           | 102 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████                           | 112 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████▌                          | 122 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████                          | 133 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████▍                         | 143 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████▉                         | 153 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████▎                        | 163 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████▊                        | 174 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████▏                       | 184 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████▋                       | 194 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████                       | 204 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████▌                      | 215 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████                      | 225 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████▍                     | 235 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████                     | 245 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████▍                    | 256 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████▉                    | 266 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████▎                   | 276 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 286 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████▏                  | 296 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████▋                  | 307 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 317 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████▌                 | 327 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 337 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████▍                | 348 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████▉                | 358 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████▍               | 368 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████▉               | 378 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████▎              | 389 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 399 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████▏             | 409 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████▋             | 419 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 430 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 440 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 450 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████▍           | 460 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████▉           | 471 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 481 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▉          | 491 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▎         | 501 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▊         | 512 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 522 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▋        | 532 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 542 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▌       | 552 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 563 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 573 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▉      | 583 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▎     | 593 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▉     | 604 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▎    | 614 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▊    | 624 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 634 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▋   | 645 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 655 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▌  | 665 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 675 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 686 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▉ | 696 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▎| 706 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▊| 716 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 721 kB 4.2 MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from monai) (1.21.5)\n","Requirement already satisfied: torch>=1.6 in /usr/local/lib/python3.7/dist-packages (from monai) (1.10.0+cu111)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.6->monai) (3.10.0.2)\n","Installing collected packages: monai\n","Successfully installed monai-0.8.1\n"]}],"source":["!pip install monai"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"FlUxE75HMNqI","executionInfo":{"status":"ok","timestamp":1649667566111,"user_tz":-240,"elapsed":1327,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["import monai\n","from monai.data import decollate_batch\n","from monai.metrics import ROCAUCMetric\n","from monai.transforms import ToTensord,EnsureType,LoadImaged\n","from monai.transforms import RandAffined,RandRotated,RandGaussianNoised,Activations, AddChanneld, AsDiscrete, Compose,RandRotate90d, Resized, ScaleIntensityd, EnsureTyped"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"P0aSwEwmleyT","executionInfo":{"status":"ok","timestamp":1649667566113,"user_tz":-240,"elapsed":18,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(160,1) # 1 means AD 160 processes MRI for Training"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2129,"status":"ok","timestamp":1649667568227,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"_Via2mzzs85z","outputId":"95f36caf-4c21-4a38-e5ae-1d80f84ca6b5"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/\n"]}],"source":["train_files={}\n","for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/'):\n","  if files:\n","    print(path)    "]},{"cell_type":"code","execution_count":6,"metadata":{"id":"92KqzjRQgnJX","executionInfo":{"status":"ok","timestamp":1649667568227,"user_tz":-240,"elapsed":44,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":[" images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD', f]) for f in files] "]},{"cell_type":"code","execution_count":7,"metadata":{"id":"ZIUb-4BxmS4J","executionInfo":{"status":"ok","timestamp":1649667568228,"user_tz":-240,"elapsed":43,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":[" train_files = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":42,"status":"ok","timestamp":1649667568229,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"2xRqG2ROpU2h","outputId":"0e7b27fa-ada8-4a36-9339-db7c2aefc51b"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/\n"]}],"source":["train_files_sMCI={}\n","for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/'):\n","  if files:\n","    print(path)\n","   "]},{"cell_type":"code","execution_count":9,"metadata":{"id":"9ezb_wKbpcLb","executionInfo":{"status":"ok","timestamp":1649667568229,"user_tz":-240,"elapsed":34,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images_sMCI = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI', f]) for f in files]\n"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"o5Ic7GYbl99W","executionInfo":{"status":"ok","timestamp":1649667568230,"user_tz":-240,"elapsed":31,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["y=np.full(160,0) # o means stable MCI "]},{"cell_type":"code","execution_count":11,"metadata":{"id":"A2Wmvm0VqGvC","executionInfo":{"status":"ok","timestamp":1649667568230,"user_tz":-240,"elapsed":30,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["train_files_sMCI = [{\"img\": img, \"label\": label} for img, label in zip(images_sMCI, y)]"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"nu56u0jmn99m","executionInfo":{"status":"ok","timestamp":1649667568231,"user_tz":-240,"elapsed":29,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["train_files.extend(train_files_sMCI)"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":28,"status":"ok","timestamp":1649667568232,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"nXXjXi8moEfu","outputId":"f410fbde-e16b-480a-e87a-02fecf8156bb"},"outputs":[{"output_type":"stream","name":"stdout","text":["[{'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_0266_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007095334102_S12381_I119390.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_0266_MR_MPR__GradWarp__N3__Scaled_Br_20070819154701884_S12381_I68898.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_0272_MR_MPR__GradWarp__N3__Scaled_Br_20070819160811308_S12394_I68927.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_0310_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007095729372_S12468_I119395.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_0310_MR_MPR__GradWarp__N3__Scaled_Br_20070819162315993_S12468_I68944.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_0517_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007100124596_S15001_I119399.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_0517_MR_MPR__GradWarp__N3__Scaled_Br_20070819165258579_S15001_I68976.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_0528_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007100403336_S14629_I119401.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_0528_MR_MPR__GradWarp__N3__Scaled_Br_20070821191602878_S14629_I69679.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_0740_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007101045669_S17472_I119406.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_0740_MR_MPR__GradWarp__N3__Scaled_Br_20070819180306941_S17472_I69048.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_1409_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070821114304781_S33787_I69400.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_128_S_1430_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20071030174634532_S39199_I79857.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_130_S_0956_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070210221002388_S20667_I39185.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_130_S_1201_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070801182711594_S25082_I63757.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_130_S_1290_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070801183629045_S26038_I63766.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_130_S_1337_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070801184528226_S27584_I63775.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_131_S_0319_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070403131044669_S12322_I47984.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_131_S_0457_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080225093858034_S13976_I92406.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_131_S_0497_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070403140455408_S15315_I48038.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_131_S_0691_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070403141449754_S17266_I48047.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_133_S_0493_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081007152542589_S14156_I119503.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_133_S_1055_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008100559240_S22386_I119646.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_133_S_1170_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008101107947_S24674_I119651.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_133_S_1170_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080207174424754_S24674_I89957.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_136_S_0194_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008133147404_S13178_I119717.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_136_S_0194_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070215183625381_S13178_I40239.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_136_S_0299_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008133944436_S13839_I119726.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_136_S_0299_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070215202408595_S13839_I40312.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_136_S_0300_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008134134874_S14136_I119728.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_136_S_0300_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070215205110923_S14136_I40328.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_136_S_0426_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008134327484_S14581_I119730.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_136_S_0426_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070215211810806_S14581_I40356.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_137_S_0366_MR_MPR__GradWarp__N3__Scaled_Br_20070323161105797_S14199_I46608.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_137_S_0438_MR_MPR__GradWarp__N3__Scaled_Br_20070323162337393_S13764_I46615.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_137_S_0796_MR_MPR__GradWarp__N3__Scaled_Br_20080207175303986_S18077_I89979.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_137_S_0841_MR_MPR__GradWarp__N3__Scaled_Br_20070419175857278_S19351_I49776.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_137_S_1041_MR_MPR-R__GradWarp__N3__Scaled_Br_20070306190902216_S22310_I43071.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_141_S_0696_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20071119104836717_S18373_I82738.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_141_S_0790_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080220165919265_S18766_I91253.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_002_S_0619_MR_MPR-R__GradWarp__N3__Scaled_2_Br_20081001115218896_S15145_I118678.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_002_S_0619_MR_MPR-R__GradWarp__N3__Scaled_Br_20070411125458928_S15145_I48617.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_002_S_0816_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002102135862_S18402_I118984.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_002_S_0816_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217005829488_S18402_I40731.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_002_S_0938_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001115856421_S19852_I118685.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_002_S_0938_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070219175406282_S19852_I40980.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_002_S_0955_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001120235839_S20004_I118689.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_002_S_0955_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217013411002_S20004_I40754.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217030439623_S23128_I40817.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_003_S_0931_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070503165327269_S20051_I53390.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_003_S_1059_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070501173720913_S22300_I52816.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_003_S_1257_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070501172255698_S27340_I52790.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_005_S_0221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070910164745994_S11958_I72128.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_005_S_0814_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070923123111793_S18390_I74591.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_005_S_0929_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070923124929945_S19669_I74609.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070717180348670_S27673_I60417.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_006_S_0547_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070926110116880_S19779_I75279.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_006_S_0653_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070605122642054_S23255_I55948.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_007_S_0316_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001120625745_S12583_I118693.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_007_S_0316_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070118030943701_S12583_I36573.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_007_S_1248_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070713113209876_S25568_I59950.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_007_S_1304_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070713111105724_S26475_I59910.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070607134807952_S27414_I56319.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_009_S_1334_MR_MPR-R__GradWarp__N3__Scaled_Br_20070717182244238_S27423_I60434.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_009_S_1354_MR_MPR__GradWarp__N3__Scaled_Br_20070717183309825_S27634_I60443.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_2_Br_20081002102855696_S19638_I118990.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20070807153633938_S19638_I65597.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_2_Br_20081001122514861_S26117_I118707.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20070731163202385_S26117_I63349.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_011_S_0002_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070108225928642_S9107_I35475.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_011_S_0003_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061208111300610_S9127_I32237.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_011_S_0010_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061208114538147_S8800_I32270.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_011_S_0053_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070108231357675_S10064_I35486.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_011_S_0183_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061206183315171_S12000_I32003.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_012_S_0689_MR_MPR-R____N3__Scaled_2_Br_20081001123144447_S16392_I118713.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_012_S_0689_MR_MPR-R____N3__Scaled_Br_20080225093300703_S16392_I92398.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_012_S_0712_MR_MPR____N3__Scaled_2_Br_20081001123034709_S16704_I118712.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_012_S_0712_MR_MPR____N3__Scaled_Br_20080225093529482_S16704_I92401.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_012_S_0720_MR_MPR____N3__Scaled_2_Br_20081001123253253_S17682_I118714.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_012_S_0720_MR_MPR____N3__Scaled_Br_20080225174150688_S17682_I92529.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_012_S_0803_MR_MPR____N3__Scaled_2_Br_20081001123507114_S19197_I118716.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_012_S_0803_MR_MPR____N3__Scaled_Br_20070711172746366_S19197_I59250.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_013_S_0592_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20071028192251104_S18419_I79144.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_013_S_0699_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070727182856171_S18366_I62650.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_013_S_0996_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426092308209_S22240_I51183.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_013_S_1161_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426171211057_S24399_I51485.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_013_S_1205_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426173828172_S25024_I51542.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070212231950856_S12402_I39620.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_014_S_1095_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070320181218511_S23323_I45740.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_016_S_0991_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070217023139686_S21737_I40794.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_016_S_1263_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070804134033886_S27303_I64622.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_018_S_0286_MR_MPR____N3__Scaled_2_Br_20081001135113951_S12435_I118779.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_018_S_0286_MR_MPR____N3__Scaled_Br_20070120013124801_S12435_I37007.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_018_S_0335_MR_MPR____N3__Scaled_2_Br_20081008153133922_S14586_I119801.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_018_S_0335_MR_MPR____N3__Scaled_Br_20070101214204431_S14586_I35009.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_018_S_0633_MR_MPR-R____N3__Scaled_2_Br_20081010112443772_S15573_I120057.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_018_S_0633_MR_MPR-R____N3__Scaled_Br_20070101222816515_S15573_I35036.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_018_S_0682_MR_MPR____N3__Scaled_2_Br_20081008153234434_S16293_I119802.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_018_S_0682_MR_MPR____N3__Scaled_Br_20070101224115510_S16293_I35044.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_020_S_0213_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070718120158728_S12386_I60600.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20061217125152228_S12836_I33444.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_021_S_0642_MR_MPR__GradWarp__N3__Scaled_Br_20061217130526879_S15935_I33452.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20061217132116005_S17580_I33461.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_021_S_1109_MR_MPR__GradWarp__N3__Scaled_Br_20070727185946236_S23446_I62695.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_022_S_0007_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712142439074_S9024_I59366.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712152611314_S11485_I59484.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_022_S_0219_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712154620604_S12375_I59533.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_022_S_0543_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712155153926_S14849_I59543.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_0083_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001153941224_S10568_I118874.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_0083_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061130194138457_S10568_I31143.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_0084_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100834283_S10764_I118970.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_0084_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061201102044695_S10764_I31205.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_0093_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100757991_S10736_I118969.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_0139_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100910505_S11079_I118971.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_0139_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061201144502375_S11079_I31300.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_0916_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001154252419_S19228_I118879.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_0916_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061203142844438_S19228_I31533.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001160410209_S26314_I118923.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070727133707675_S26314_I62433.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_1289_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001160534628_S26374_I118925.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_023_S_1289_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080207172946284_S26374_I89938.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_024_S_1171_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731172208570_S24659_I63406.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_024_S_1307_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731173131780_S27061_I63415.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_027_S_0404_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061222194841960_S13866_I34204.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_027_S_0850_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070412191003564_S18554_I48996.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_027_S_1081_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070327152141858_S25357_I47168.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_027_S_1082_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070327161431010_S22938_I47204.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070327165452524_S25764_I47228.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_027_S_1385_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070330094058546_S28133_I47574.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_029_S_0836_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070806122937449_S18151_I65013.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_029_S_0999_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070805144703422_S23248_I64898.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070718151433161_S22977_I60741.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_029_S_1184_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070812143109046_S25463_I67210.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_031_S_0321_MR_MPR__GradWarp__N3__Scaled_Br_20070807093706127_S12365_I65383.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_031_S_0554_MR_MPR-R__GradWarp__N3__Scaled_Br_20070804144512116_S14904_I64711.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_031_S_1209_MR_MPR__GradWarp__N3__Scaled_Br_20070813153725713_S25028_I67441.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_2_Br_20081003100226549_S11186_I119079.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20070123192754258_S11186_I37210.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_032_S_0400_MR_MPR____N3__Scaled_2_Br_20081003101339687_S13238_I119087.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_032_S_0400_MR_MPR____N3__Scaled_Br_20070118000329335_S13238_I36459.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_032_S_1037_MR_MPR____N3__Scaled_2_Br_20081003104216708_S22208_I119114.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_032_S_1101_MR_MPR____N3__Scaled_2_Br_20081003104506735_S22783_I119116.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_032_S_1101_MR_MPR____N3__Scaled_Br_20070731180142730_S22783_I63442.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003121149525_S17337_I119128.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070303125222238_S17337_I42400.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_033_S_0733_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003121546031_S16932_I119132.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_033_S_0733_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070303133222445_S16932_I42425.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003121834902_S16956_I119135.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070304110859078_S16956_I42441.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_033_S_0889_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070426183239887_S19296_I51629.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_033_S_1281_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070517161803030_S26136_I54780.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070517162231894_S26144_I54785.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_033_S_1285_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426175923899_S26128_I51588.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_033_S_1308_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070517160021095_S26600_I54752.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_035_S_0341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070319175003745_S12952_I45213.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_036_S_0577_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070119233126708_S14974_I36914.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_036_S_0759_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070120004026768_S18094_I36969.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070209144410346_S18264_I38652.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_036_S_1001_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070209145840163_S22691_I38661.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/AD/ADNI_037_S_0627_MR_MPR__GradWarp__N3__Scaled_Br_20071030172722998_S16313_I79831.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_123_S_4780_MR_MT1__GradWarp__N3m_Br_20120626162853899_S155005_I312845.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_099_S_4463_MR_MT1__GradWarp__N3m_Br_20120212192535853_S139377_I283954.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_109_S_1114_MR_MPR__GradWarp__B1_Correction__N3_Br_20070731184540222_S24702_I63488.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_109_S_4594_MR_MT1__GradWarp__N3m_Br_20120424140212439_S147922_I300259.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_100_S_0006_MR_MPR____N3__Scaled_Br_20091214141413429_S66586_I160861.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_099_S_2063_MR_MT1__GradWarp__N3m_Br_20120409163816931_S93362_I296532.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_099_S_4498_MR_MT1__GradWarp__N3m_Br_20120319162928405_S143906_I291051.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_109_S_1183_MR_MPR__GradWarp__B1_Correction__N3_Br_20070808202230702_S24718_I66166.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_109_S_4531_MR_MT1__GradWarp__N3m_Br_20120322162946257_S144105_I291870.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_109_S_0950_MR_MPR__GradWarp__B1_Correction__N3_Br_20080313120543591_S21164_I97195.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_109_S_4455_MR_MT1__GradWarp__N3m_Br_20120221111520881_S140738_I285905.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_094_S_1417_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070918133138011_S35042_I73651.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_094_S_4630_MR_MT1__GradWarp__N3m_Br_20170503085644464_S146117_I846730.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_4311_MR_MT1__GradWarp__N3m_Br_20111030164151647_S125503_I263680.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_4443_MR_MT1__GradWarp__N3m_Br_20111228151717862_S134935_I274669.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_4986_MR_MT1__GradWarp__N3m_Br_20121009174853195_S169690_I339187.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_094_S_0921_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070418083303012_S19581_I49518.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_4312_MR_MT1__GradWarp__N3m_Br_20120308100024377_S141217_I288869.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_094_S_1314_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070731123416880_S27487_I63201.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_4360_MR_MT1__GradWarp__N3m_Br_20111121113105970_S130051_I267765.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_094_S_4858_MR_MT1__GradWarp__N3m_Br_20170502151943862_S167122_I846437.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_4394_MR_MT1__GradWarp__N3m_Br_20120106140625480_S135022_I275764.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_4522_MR_MT1__GradWarp__N3m_Br_20120222111556151_S141099_I286083.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_4465_MR_MT1__GradWarp__N3m_Br_20120217144924410_S140703_I285486.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_4383_MR_MT1__GradWarp__N3m_Br_20111216164220883_S132298_I272712.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_4871_MR_MT1__GradWarp__N3m_Br_20120828084311101_S160411_I326503.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_4613_MR_MT1__GradWarp__N3m_Br_20120405185306701_S146058_I296329.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_4941_MR_MT1__GradWarp__N3m_Br_20121016173414073_S170468_I340527.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_4390_MR_MT1__GradWarp__N3m_Br_20111216164432636_S132268_I272714.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_4300_MR_MT1__GradWarp__N3m_Br_20111030165146839_S125190_I263690.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_4539_MR_MT1__GradWarp__N3m_Br_20120405190041648_S142560_I296336.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_041_S_4989_MR_MT1__GradWarp__N3m_Br_20121025121610142_S171438_I342390.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_067_S_0607_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070111020708708_S15893_I35942.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_036_S_4736_MR_MT1__N3m_Br_20120626142007341_S151992_I312653.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_053_S_0621_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070802191244427_S15441_I64193.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_057_S_0464_MR_MPR__GradWarp__B1_Correction__N3_Br_20061229151447223_S14736_I34706.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_067_S_0290_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20061229183726441_S12592_I34845.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_037_S_1421_MR_MPR-R__GradWarp__N3_Br_20071031140637215_S38601_I79950.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_062_S_1182_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070424131220294_S25165_I50570.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_041_S_1260_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070806164614177_S25805_I65243.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_052_S_4626_MR_MT1__GradWarp__N3m_Br_20120406134745265_S146349_I296423.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_031_S_4476_MR_MT1__N3m_Br_20120201114333350_S138754_I281842.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_036_S_0656_MR_MPR__GradWarp__B1_Correction__N3_Br_20070119234340991_S16286_I36923.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_031_S_0351_MR_MPR__GradWarp__N3_Br_20070807100037630_S13460_I65396.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_029_S_2376_MR_MT1__GradWarp__N3m_Br_20120808150736028_S140231_I322525.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_035_S_0033_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070319171138269_S10395_I45169.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_032_S_0718_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20081026162151955_S56614_I123878.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_033_S_1284_MR_MPR__GradWarp__B1_Correction__N3_Br_20070517163002017_S26686_I54798.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_036_S_0673_MR_MPR__GradWarp__B1_Correction__N3_Br_20070120001040042_S17157_I36948.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_031_S_4590_MR_MT1__N3m_Br_20120322172837106_S144046_I291927.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_029_S_1384_MR_MPR__GradWarp__B1_Correction__N3_Br_20070805145102556_S29082_I64902.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_012_S_4987_MR_MT1__N3m_Br_20121213150551136_S173242_I351339.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_021_S_0273_MR_MPR-R__GradWarp__N3_Br_20061217142914418_S12169_I33497.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_027_S_4966_MR_MT1__N3m_Br_20121016163944343_S170704_I340506.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_022_S_0961_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070712161347149_S20711_I59600.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_016_S_2031_MR_MT1__GradWarp__N3m_Br_20110308082338608_S99346_I222772.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_022_S_0004_MR_MPR__GradWarp__B1_Correction__N3_Br_20070804134258805_S9233_I64626.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_012_S_0634_MR_MPR____N3_Br_20100114155947906_S71018_I163688.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_029_S_1218_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070813144946904_S25477_I67393.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_012_S_4849_MR_MT1__N3m_Br_20130801183718097_S192305_I384088.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_018_S_4809_MR_MT1__N3m_Br_20120626164020476_S154963_I312863.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_007_S_4611_MR_MT1__GradWarp__N3m_Br_20120405104126984_S145205_I295877.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_002_S_0782_MR_MPR__GradWarp__B1_Correction__N3_Br_20070217003330133_S17835_I40716.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_006_S_4679_MR_MT1__N3m_Br_20121213154052681_S176759_I351387.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_007_S_4467_MR_MT1__GradWarp__N3m_Br_20120130094717221_S138180_I281397.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_005_S_0324_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20061212171807772_S12599_I32892.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_009_S_5000_MR_MT1__GradWarp__N3m_Br_20121205123642241_S172474_I349550.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_002_S_4447_MR_MT1__N3m_Br_20120521111700811_S148198_I305503.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_137_S_4536_MR_MT1__GradWarp__N3m_Br_20120308101908754_S141541_I288887.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_137_S_4299_MR_MT1__GradWarp__N3m_Br_20111108160313152_S127896_I265267.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_141_S_2333_MR_MT1__GradWarp__N3m_Br_20111008153347377_S122675_I260253.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_137_S_0800_MR_MPR__GradWarp__N3_Br_20070306181953188_S17822_I43033.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_137_S_1414_MR_MPR-R__GradWarp__N3_Br_20070922113057694_S36839_I74560.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_136_S_0107_MR_MPR__GradWarp__B1_Correction__N3_Br_20070215231412938_S11707_I40444.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_941_S_4036_MR_MT1__GradWarp__N3m_Br_20110524152255814_S109397_I236984.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_141_S_1378_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20080220172008524_S28926_I91308.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_141_S_1052_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070402174638512_S22922_I47726.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_141_S_4160_MR_MT1__GradWarp__N3m_Br_20110928090732094_S121753_I258664.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_135_S_4356_MR_MT1__GradWarp__N3m_Br_20111121111949549_S128879_I267753.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_135_S_4722_MR_MT1__GradWarp__N3m_Br_20120521161520372_S150596_I305615.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_130_S_4817_MR_MT1__N3m_Br_20120809141858031_S156603_I322951.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_135_S_4489_MR_MT1__GradWarp__N3m_Br_20120212191136852_S139411_I283942.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_135_S_4309_MR_MT1__GradWarp__N3m_Br_20111030175833673_S126435_I263754.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_130_S_4405_MR_MT1__N3m_Br_20120125125546237_S137367_I280550.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_130_S_4417_MR_MT1__N3m_Br_20120125131409065_S137433_I280572.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_135_S_4281_MR_MT1__GradWarp__N3m_Br_20111030164458283_S125351_I263683.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_135_S_4723_MR_MT1__GradWarp__N3m_Br_20120521161754452_S150582_I305621.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_130_S_2391_MR_MT1__N3m_Br_20120125132038603_S133690_I280580.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_128_S_0715_MR_MPR-R__GradWarp__N3_Br_20080207104831657_S16987_I89787.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_128_S_0200_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20080318144750476_S18927_I98870.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_129_S_4287_MR_MT1__GradWarp__N3m_Br_20111030172838553_S125945_I263726.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_130_S_0505_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070210232353031_S17291_I39234.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_128_S_2045_MR_MT1__GradWarp__N3m_Br_20120424140520790_S134312_I300262.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_128_S_4742_MR_MT1__GradWarp__N3m_Br_20120626142518996_S152151_I312658.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_127_S_4301_MR_MT1__GradWarp__N3m_Br_20111030174313463_S126224_I263740.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_129_S_1246_MR_MPR-R__GradWarp__N3_Br_20070821200112689_S26514_I69736.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_128_S_2220_MR_MT1__GradWarp__N3m_Br_20110310113450742_S96842_I223525.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_128_S_0770_MR_MPR-R__GradWarp__N3_Br_20070828145553713_S17429_I70862.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_126_S_0709_MR_MPR-R__GradWarp__B1_Correction_Br_20070209202341745_S17325_I38976.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_126_S_2407_MR_MT1__GradWarp__N3m_Br_20120629154745562_S151633_I313676.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_127_S_4210_MR_MT1__GradWarp__N3m_Br_20110910141826708_S121468_I255431.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_126_S_2405_MR_MT1__GradWarp__N3m_Br_20120521112730328_S148312_I305515.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_123_S_4170_MR_MT1__GradWarp__N3m_Br_20110906122701006_S120532_I254811.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_123_S_4127_MR_MT1__GradWarp__N3m_Br_20110816090718108_S117357_I250621.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_126_S_4896_MR_MT1__GradWarp__N3m_Br_20120828085114550_S160096_I326506.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_126_S_2360_MR_MT1__GradWarp__N3m_Br_20111216190951330_S130277_I272846.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_126_S_1187_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070412184413054_S25142_I48963.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_126_S_4514_MR_MT1__GradWarp__N3m_Br_20120216104047811_S140403_I285133.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_114_S_5047_MR_MT1__GradWarp__N3m_Br_20130313092855363_S183939_I362908.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_099_S_4205_MR_MT1__GradWarp__N3m_Br_20111015082201943_S124692_I261079.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_114_S_1118_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070419175538297_S23802_I49772.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_099_S_1034_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070403125208679_S21758_I47957.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_123_S_1300_MR_MPR____N3__Scaled_Br_20070809134209477_S27689_I66305.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_109_S_4380_MR_MT1__GradWarp__N3m_Br_20120109091019426_S135424_I276573.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_100_S_0296_MR_MPR____N3_Br_20091214142150532_S67603_I160870.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_114_S_2392_MR_MT1__GradWarp__N3m_Br_20120227123246523_S141141_I286648.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_109_S_2200_MR_MT1__GradWarp__N3m_Br_20110310092425329_S95177_I223482.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_123_S_2363_MR_MT1__GradWarp__N3m_Br_20120416131710652_S130016_I297591.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_2191_MR_MT1__GradWarp__N3m_Br_20120405190146021_S114075_I296337.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_4614_MR_MT1__GradWarp__N3m_Br_20120322173005753_S144053_I291929.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_082_S_2121_MR_MT1__GradWarp__N3m_Br_20110524152518970_S109355_I236988.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_4216_MR_MT1__GradWarp__N3m_Br_20110906123920455_S120793_I254822.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_098_S_2079_MR_MT1__GradWarp__N3m_Br_20110330133916097_S101840_I225424.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_2225_MR_MT1__GradWarp__N3m_Br_20110816094939060_S117924_I250655.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_2264_MR_MT1__GradWarp__N3m_Br_20110804072727719_S115755_I248640.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_094_S_2238_MR_MT1__GradWarp__N3m_Br_20110816094007204_S117425_I250645.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_098_S_2052_MR_MT1__GradWarp__N3m_Br_20110330133151519_S101955_I225422.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_099_S_0291_MR_MPR__GradWarp__B1_Correction__N3_Br_20061228141150177_S12065_I34523.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_2037_MR_MT1__GradWarp__N3m_Br_20110309100955306_S100019_I223249.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_2164_MR_MT1__GradWarp__N3m_Br_20110511153145581_S107939_I234641.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_068_S_2168_MR_MT1__GradWarp__N3m_Br_20120405184628180_S112655_I296323.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_2182_MR_MT1__GradWarp__N3m_Br_20120216105951294_S140093_I285151.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_068_S_4431_MR_MT1__GradWarp__N3m_Br_20120227123037012_S139909_I286646.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_2116_MR_MT1__GradWarp__N3m_Br_20110504104730615_S105119_I232859.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_073_S_0746_MR_MPR__GradWarp__B1_Correction__N3_Br_20070731112157142_S23285_I63117.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_2072_MR_MT1__GradWarp__N3m_Br_20110331135217019_S102455_I225564.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_2093_MR_MT1__GradWarp__N3m_Br_20110427150449440_S104401_I229290.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_072_S_4063_MR_MT1__GradWarp__N3m_Br_20110623113553803_S112302_I241403.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_052_S_4944_MR_MT1__GradWarp__N3m_Br_20121211123518900_S171597_I350690.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_053_S_0919_MR_MPR-R__GradWarp__B1_Correction_Br_20070807172214763_S20422_I65690.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_052_S_0989_MR_MPR__GradWarp__B1_Correction__N3_Br_20070802185834638_S22476_I64178.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_052_S_2249_MR_MT1__GradWarp__N3m_Br_20110715130616290_S114222_I244945.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_067_S_2196_MR_MT1__GradWarp__N3m_Br_20110623110504418_S110848_I241362.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_053_S_2396_MR_MT1__N3m_Br_20120216105823309_S140046_I285149.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_053_S_2357_MR_MT1__N3m_Br_20111216182408911_S127922_I272802.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_053_S_4557_MR_MT1__N3m_Br_20120319155645998_S143365_I291000.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_057_S_1269_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070818134602732_S25879_I68549.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_068_S_0802_MR_MT1__GradWarp__N3m_Br_20150618232937107_S259814_I498019.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_037_S_0377_MR_MPR__GradWarp__N3_Br_20071125141317504_S13873_I83093.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_029_S_2395_MR_MT1__GradWarp__N3m_Br_20140529174354404_S141416_I427978.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_041_S_4510_MR_MT1__GradWarp__N3m_Br_20120217143926674_S140538_I285452.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_041_S_4876_MR_MT1__GradWarp__N3m_Br_20120828112536527_S161044_I326580.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_041_S_1418_MR_MPR__GradWarp__B1_Correction__N3_Br_20070918131937079_S36523_I73637.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_037_S_4302_MR_MT1__GradWarp__N3m_Br_20111030175629148_S126426_I263752.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_032_S_2119_MR_MT1__GradWarp__N3m_Br_20110505162723467_S107270_I233454.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_032_S_2247_MR_MT1__GradWarp__N3m_Br_20110906115344208_S119042_I254762.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_031_S_0867_MR_MPR__GradWarp__N3_Br_20070813150816080_S19256_I67404.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_035_S_2061_MR_MT1__GradWarp__N3m_Br_20110427152327109_S103446_I229323.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_027_S_1045_MR_MPR__GradWarp__B1_Correction__N3_Br_20070327162204232_S22174_I47208.nii', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Train/SMCI/ADNI_027_S_4869_MR_MT1__GradWarp__N3m_Br_20120828114122398_S161647_I326588.nii', 'label': 0}]\n"]}],"source":["print(train_files)"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"_-tQmulsLAFi","executionInfo":{"status":"ok","timestamp":1649667568232,"user_tz":-240,"elapsed":17,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["  train_transforms = Compose(\n","        [\n","            LoadImaged(keys=[\"img\"]),\n","            #AddChanneld(keys=[\"img\"]),\n","            #RandAffined(keys=['img'], prob=0.5, translate_range=10), \n","            #RandRotated(keys=['img'], prob=0.6, range_x=10.0),\n","            #RandGaussianNoised(keys='img', prob=0.5),\n","            #ToTensord(keys=[\"img\"]),\n","        ]\n","    )"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"w2dtOA-uRVYG","executionInfo":{"status":"ok","timestamp":1649667568233,"user_tz":-240,"elapsed":16,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["post_pred = Compose([EnsureType(), Activations(softmax=True)])\n","post_label = Compose([EnsureType(), AsDiscrete(to_onehot=2)])\n"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"LwPcqiDsUBkD","executionInfo":{"status":"ok","timestamp":1649667568233,"user_tz":-240,"elapsed":16,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["from torch.utils.data import DataLoader\n","from torch.utils.tensorboard import SummaryWriter"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"N4Mqm0grS1EO","executionInfo":{"status":"ok","timestamp":1649667568234,"user_tz":-240,"elapsed":16,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["#check_ds = monai.data.Dataset(data=train_files, transform=train_transforms)\n","#check_loader = DataLoader(check_ds, batch_size=4, num_workers=4, pin_memory=torch.cuda.is_available())\n","#check_data = monai.utils.misc.first(check_loader)\n","#print(check_data[\"img\"].shape, check_data[\"label\"])\n"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"iVsZ9Mx6oeN7","executionInfo":{"status":"ok","timestamp":1649667568759,"user_tz":-240,"elapsed":11,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a training data loader\n","train_ds = monai.data.Dataset(data=train_files, transform=train_transforms)\n","train_loader = DataLoader(train_ds, batch_size=2, shuffle=True, num_workers=4, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":524,"status":"ok","timestamp":1649667569275,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"coRjr9lk0pip","outputId":"0df7e8c8-501e-40e8-fa2d-6a555a26db24"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Valid/AD/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Valid/AD/'):\n","  if files:\n","    print(path)    "]},{"cell_type":"code","execution_count":20,"metadata":{"id":"Bb1UmOqp2Mzo","executionInfo":{"status":"ok","timestamp":1649667569276,"user_tz":-240,"elapsed":25,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(40,1)"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"U1t6ApKc3z3C","executionInfo":{"status":"ok","timestamp":1649667569277,"user_tz":-240,"elapsed":25,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Valid/AD', f]) for f in files] "]},{"cell_type":"code","execution_count":22,"metadata":{"id":"cZFZIBmE4diO","executionInfo":{"status":"ok","timestamp":1649667569277,"user_tz":-240,"elapsed":23,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":23,"status":"ok","timestamp":1649667569278,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"j3ruNdWQ6efP","outputId":"5d78bb22-03af-4c09-c734-71e2d5618391"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Valid/SMCI/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Valid/SMCI/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"CPeztrsB6k-V","executionInfo":{"status":"ok","timestamp":1649667569279,"user_tz":-240,"elapsed":16,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(40,0)"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"Zwshfucp6pey","executionInfo":{"status":"ok","timestamp":1649667569280,"user_tz":-240,"elapsed":15,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Valid/SMCI', f]) for f in files] "]},{"cell_type":"code","execution_count":26,"metadata":{"id":"tTnjUbZW6yuZ","executionInfo":{"status":"ok","timestamp":1649667569280,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files_sMCI = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"ZxDNtMH97eOE","executionInfo":{"status":"ok","timestamp":1649667569281,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files.extend(valid_files_sMCI)"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"U5VuoLnM7pfM","executionInfo":{"status":"ok","timestamp":1649667569282,"user_tz":-240,"elapsed":15,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["#check_ds = monai.data.Dataset(data=valid_files, transform=train_transforms)\n","#check_loader = DataLoader(check_ds, batch_size=8, num_workers=4, pin_memory=torch.cuda.is_available())\n","#check_data = monai.utils.misc.first(check_loader)\n","#print(check_data[\"img\"].shape, check_data[\"label\"])"]},{"cell_type":"code","execution_count":29,"metadata":{"id":"qVKSOKbw7296","executionInfo":{"status":"ok","timestamp":1649667569282,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a validation data loader\n","valid_ds = monai.data.Dataset(data=valid_files, transform=train_transforms)\n","valid_loader = DataLoader(valid_ds, batch_size=2,shuffle=True,num_workers=4, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1181,"status":"ok","timestamp":1649667570449,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"w59RYjFHM4s9","outputId":"107920ea-cd11-499a-e83e-9aa05851e033"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"PxrcqmvMNAi9","executionInfo":{"status":"ok","timestamp":1649667570449,"user_tz":-240,"elapsed":52,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(29,1)"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"50fO8lN-NNXk","executionInfo":{"status":"ok","timestamp":1649667570450,"user_tz":-240,"elapsed":50,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29', f]) for f in files] "]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":48,"status":"ok","timestamp":1649667570450,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"BhuE2IwePDBJ","outputId":"381857ef-ea5f-4aa7-9c52-cbd87443bd64"},"outputs":[{"output_type":"stream","name":"stdout","text":["['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_002_S_0938_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081104151647760_S58211_I125155.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081224104711856_S60832_I132197.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_005_S_0221_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080501163219594_S49279_I104489.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090701135215664_S65452_I147406.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721101114129_S67376_I149749.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20100105142259322_S58426_I162100.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20090227152103934_S62987_I137223.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080516095357795_S49746_I105878.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_016_S_0991_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721103719643_S66595_I149771.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20080515114721734_S49511_I105737.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20090127130302490_S57137_I134624.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080229153509900_S45881_I94405.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_023_S_0084_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080224132527438_S44784_I92169.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090512151630340_S64537_I143676.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_027_S_1082_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081229144920056_S60862_I132368.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090316152042654_S63689_I139062.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090223154912775_S61415_I136737.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20080421171040104_S47745_I103333.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081023111433234_S55321_I123024.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081026130730923_S56031_I123722.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317134835050_S63547_I139235.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_033_S_1308_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317140629096_S63613_I139266.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081028132916623_S57028_I124258.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090513123110219_S64654_I143723.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514101747514_S66427_I143792.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_057_S_1379_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514103130382_S66419_I143815.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702154348870_S51763_I112301.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_062_S_0730_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081023151703543_S54793_I123220.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081230153105872_S60719_I132424.nii']\n"]}],"source":["print(images)"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"UbezDmYZNdU-","executionInfo":{"status":"ok","timestamp":1649667570451,"user_tz":-240,"elapsed":41,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files= [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":39,"status":"ok","timestamp":1649667570451,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"bBuIqGtpnS8V","outputId":"2029b8d1-6362-4b93-e793-63375a04cd52"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_002_S_0938_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081104151647760_S58211_I125155.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081224104711856_S60832_I132197.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_005_S_0221_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080501163219594_S49279_I104489.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090701135215664_S65452_I147406.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721101114129_S67376_I149749.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20100105142259322_S58426_I162100.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20090227152103934_S62987_I137223.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080516095357795_S49746_I105878.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_016_S_0991_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721103719643_S66595_I149771.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20080515114721734_S49511_I105737.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20090127130302490_S57137_I134624.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080229153509900_S45881_I94405.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_023_S_0084_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080224132527438_S44784_I92169.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090512151630340_S64537_I143676.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_027_S_1082_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081229144920056_S60862_I132368.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090316152042654_S63689_I139062.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090223154912775_S61415_I136737.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20080421171040104_S47745_I103333.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081023111433234_S55321_I123024.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081026130730923_S56031_I123722.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317134835050_S63547_I139235.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_033_S_1308_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317140629096_S63613_I139266.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081028132916623_S57028_I124258.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090513123110219_S64654_I143723.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514101747514_S66427_I143792.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_057_S_1379_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514103130382_S66419_I143815.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702154348870_S51763_I112301.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_062_S_0730_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081023151703543_S54793_I123220.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD-29/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081230153105872_S60719_I132424.nii',\n","  'label': 1}]"]},"metadata":{},"execution_count":35}],"source":["test_files"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":28,"status":"ok","timestamp":1649667570452,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"BTX-NshNN67U","outputId":"086ccb6e-b352-4c59-f3bc-e159791331a3"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":37,"metadata":{"id":"V3Mx0BFpOgxK","executionInfo":{"status":"ok","timestamp":1649667570452,"user_tz":-240,"elapsed":16,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(29,0)"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"WNTSkpIjOj2w","executionInfo":{"status":"ok","timestamp":1649667570453,"user_tz":-240,"elapsed":16,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI', f]) for f in files] "]},{"cell_type":"markdown","metadata":{"id":"vTGEiVvEJADY"},"source":[""]},{"cell_type":"code","execution_count":39,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1649667570453,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"Ozj2euWTPdpY","outputId":"30431c06-2331-4cb2-f75a-336d92a2463d"},"outputs":[{"output_type":"stream","name":"stdout","text":["['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_137_S_0158_MR_MPR-R__GradWarp__N3_Br_20070321171006007_S11647_I45874.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_137_S_0481_MR_MPR-R__GradWarp__N3_Br_20070327121645055_S14293_I47057.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_137_S_4678_MR_MT1__GradWarp__N3m_Br_20120521101224968_S149048_I305449.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_133_S_1031_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070213234237752_S21551_I40023.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_941_S_4764_MR_MT1__GradWarp__N3m_Br_20120626140700552_S152506_I312638.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_136_S_1227_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070801195111849_S26398_I63842.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_133_S_0912_MR_MPR__GradWarp__B1_Correction__N3_Br_20070213230413512_S19884_I39999.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_141_S_0851_MR_MPR__GradWarp__B1_Correction__N3_Br_20070403112630435_S19364_I47869.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_153_S_4838_MR_MT1__GradWarp__N3m_Br_20120809145424299_S157969_I323002.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_153_S_4621_MR_MT1__GradWarp__N3m_Br_20120405104451820_S144994_I295881.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_128_S_4553_MR_MT1__GradWarp__N3m_Br_20120227121945054_S141277_I286635.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_130_S_0449_MR_MPR__GradWarp__B1_Correction__N3_Br_20081016170726910_S15123_I121507.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_133_S_0792_MR_MPR__GradWarp__B1_Correction__N3_Br_20070809144104560_S18306_I66371.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_128_S_4571_MR_MT1__GradWarp__N3m_Br_20120319143204480_S143575_I290959.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_130_S_0102_MR_MPR__GradWarp__B1_Correction__N3_Br_20070212203515208_S10746_I39459.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_133_S_0771_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20080224144832352_S18575_I92285.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_130_S_0783_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070210233557237_S18022_I39251.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_128_S_5066_MR_MT1__GradWarp__N3m_Br_20130208125517584_S181649_I358509.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_128_S_4653_MR_MT1__GradWarp__N3m_Br_20120424135432430_S147791_I300250.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_128_S_4636_MR_MT1__GradWarp__N3m_Br_20120405102704694_S144951_I295861.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_127_S_1140_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070731210730314_S24277_I63641.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_128_S_0608_MR_MPR__GradWarp__N3_Br_20070819173116210_S15211_I69015.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_123_S_4806_MR_MT1__GradWarp__N3m_Br_20120626163302938_S154998_I312849.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_128_S_1088_MR_MPR__GradWarp__B1_Correction__N3_Br_20070819183840416_S23786_I69099.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_116_S_4635_MR_MT1__GradWarp__N3m_Br_20121025150702194_S159504_I342605.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_128_S_2123_MR_MT1__GradWarp__N3m_Br_20120416132356262_S134342_I297597.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_128_S_0225_MR_MPR-R__GradWarp__N3_Br_20070819150427437_S11678_I68845.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_128_S_1408_MR_MPR-R__GradWarp__B1_Correction__N3_Br_20070820165411633_S36472_I69288.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/SMCI/ADNI_116_S_4898_MR_MT1__GradWarp__N3m_Br_20120828085908613_S160168_I326508.nii']\n"]}],"source":["print(images)"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"l-fmwiL9Pmdt","executionInfo":{"status":"ok","timestamp":1649667570454,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files_sMCI= [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":41,"metadata":{"id":"OU_zrGhaPwJF","executionInfo":{"status":"ok","timestamp":1649667570454,"user_tz":-240,"elapsed":13,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files.extend(test_files_sMCI)"]},{"cell_type":"code","execution_count":42,"metadata":{"id":"BSkM4T7KP_9_","executionInfo":{"status":"ok","timestamp":1649667570455,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a test data loader\n","test_ds = monai.data.Dataset(data=test_files, transform=train_transforms)\n","test_loader = DataLoader(test_ds, batch_size=1, shuffle=True, num_workers=1, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":43,"metadata":{"id":"0jRFNQcxJUOf","executionInfo":{"status":"ok","timestamp":1649667580436,"user_tz":-240,"elapsed":9994,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["  #from monai.networks.nets.efficientnet import EfficientNetBN\n","  device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","  #model=EfficientNetBN(\"efficientnet-b1\",spatial_dims=3, in_channels=1, num_classes=2).to(device)\n","  model = monai.networks.nets.DenseNet169(spatial_dims=3, in_channels=1, out_channels=2).to(device)\n","  loss_function = torch.nn.CrossEntropyLoss()\n","  optimizer = torch.optim.Adam(model.parameters(), 1e-4)\n","  auc_metric = ROCAUCMetric()"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1649667580437,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"rfTuqU6DJbqG","outputId":"df0292f2-71f9-46bd-89d7-837727174976"},"outputs":[{"output_type":"stream","name":"stdout","text":["<bound method Module.parameters of DenseNet169(\n","  (features): Sequential(\n","    (conv0): Conv3d(1, 64, kernel_size=(7, 7, 7), stride=(2, 2, 2), padding=(3, 3, 3), bias=False)\n","    (norm0): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    (relu0): ReLU(inplace=True)\n","    (pool0): MaxPool3d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n","    (denseblock1): _DenseBlock(\n","      (denselayer1): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(64, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer2): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(96, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer3): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(128, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer4): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(160, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer5): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(192, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer6): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(224, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","    )\n","    (transition1): _Transition(\n","      (norm): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv): Conv3d(256, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","      (pool): AvgPool3d(kernel_size=2, stride=2, padding=0)\n","    )\n","    (denseblock2): _DenseBlock(\n","      (denselayer1): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(128, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer2): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(160, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer3): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(192, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer4): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(224, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer5): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(256, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer6): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(288, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer7): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(320, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer8): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(352, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer9): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(384, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer10): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(416, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer11): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(448, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer12): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(480, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","    )\n","    (transition2): _Transition(\n","      (norm): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv): Conv3d(512, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","      (pool): AvgPool3d(kernel_size=2, stride=2, padding=0)\n","    )\n","    (denseblock3): _DenseBlock(\n","      (denselayer1): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(256, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer2): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(288, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer3): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(320, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer4): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(352, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer5): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(384, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer6): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(416, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer7): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(448, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer8): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(480, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer9): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer10): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(544, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer11): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(576, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer12): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(608, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer13): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(640, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer14): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(672, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer15): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(704, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer16): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(736, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer17): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(768, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer18): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(800, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer19): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(832, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer20): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(864, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer21): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(896, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer22): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(928, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer23): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(960, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer24): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(992, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer25): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer26): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1056, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1056, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer27): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1088, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1088, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer28): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1120, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer29): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1152, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer30): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1184, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1184, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer31): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1216, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer32): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1248, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","    )\n","    (transition3): _Transition(\n","      (norm): BatchNorm3d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv): Conv3d(1280, 640, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","      (pool): AvgPool3d(kernel_size=2, stride=2, padding=0)\n","    )\n","    (denseblock4): _DenseBlock(\n","      (denselayer1): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(640, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer2): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(672, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer3): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(704, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer4): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(736, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer5): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(768, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer6): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(800, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer7): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(832, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer8): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(864, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer9): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(896, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer10): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(928, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer11): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(960, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer12): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(992, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer13): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer14): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1056, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1056, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer15): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1088, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1088, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer16): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1120, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer17): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1152, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer18): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1184, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1184, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer19): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1216, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer20): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1248, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer21): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1280, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer22): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1312, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1312, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer23): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1344, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1344, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer24): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1376, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1376, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer25): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1408, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1408, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer26): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1440, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1440, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer27): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1472, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1472, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer28): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1504, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1504, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer29): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1536, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer30): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1568, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1568, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer31): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1600, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer32): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1632, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1632, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","    )\n","    (norm5): BatchNorm3d(1664, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","  )\n","  (class_layers): Sequential(\n","    (relu): ReLU(inplace=True)\n","    (pool): AdaptiveAvgPool3d(output_size=1)\n","    (flatten): Flatten(start_dim=1, end_dim=-1)\n","    (out): Linear(in_features=1664, out_features=2, bias=True)\n","  )\n",")>\n"]}],"source":["print(model.parameters)"]},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ve31g7LaVSGl","outputId":"87bbb441-62c3-4b39-eb2a-3f6ae9f5f90f","executionInfo":{"status":"ok","timestamp":1649677034022,"user_tz":-240,"elapsed":9453592,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["----------\n","epoch 1 average loss: 0.7340\n","----------\n","epoch 2 average loss: 0.6798\n","saved new best metric model\n","current epoch: 2 current accuracy: 0.4625 current AUC: 0.2369 best accuracy: 0.4625 at epoch 2\n","----------\n","epoch 3 average loss: 0.6905\n","----------\n","epoch 4 average loss: 0.6507\n","current epoch: 4 current accuracy: 0.3125 current AUC: 0.2656 best accuracy: 0.4625 at epoch 2\n","----------\n","epoch 5 average loss: 0.5941\n","----------\n","epoch 6 average loss: 0.5767\n","saved new best metric model\n","current epoch: 6 current accuracy: 0.6375 current AUC: 0.6569 best accuracy: 0.6375 at epoch 6\n","----------\n","epoch 7 average loss: 0.5553\n","----------\n","epoch 8 average loss: 0.5059\n","current epoch: 8 current accuracy: 0.5500 current AUC: 0.5387 best accuracy: 0.6375 at epoch 6\n","----------\n","epoch 9 average loss: 0.5390\n","----------\n","epoch 10 average loss: 0.4897\n","current epoch: 10 current accuracy: 0.5375 current AUC: 0.7744 best accuracy: 0.6375 at epoch 6\n","----------\n","epoch 11 average loss: 0.4688\n","----------\n","epoch 12 average loss: 0.4152\n","current epoch: 12 current accuracy: 0.5000 current AUC: 0.8394 best accuracy: 0.6375 at epoch 6\n","----------\n","epoch 13 average loss: 0.4074\n","----------\n","epoch 14 average loss: 0.3864\n","current epoch: 14 current accuracy: 0.5000 current AUC: 0.8988 best accuracy: 0.6375 at epoch 6\n","----------\n","epoch 15 average loss: 0.4185\n","----------\n","epoch 16 average loss: 0.3807\n","current epoch: 16 current accuracy: 0.5125 current AUC: 0.9225 best accuracy: 0.6375 at epoch 6\n","----------\n","epoch 17 average loss: 0.3509\n","----------\n","epoch 18 average loss: 0.3110\n","current epoch: 18 current accuracy: 0.5250 current AUC: 0.9156 best accuracy: 0.6375 at epoch 6\n","----------\n","epoch 19 average loss: 0.2850\n","----------\n","epoch 20 average loss: 0.3451\n","current epoch: 20 current accuracy: 0.5000 current AUC: 0.8681 best accuracy: 0.6375 at epoch 6\n","----------\n","epoch 21 average loss: 0.3243\n","----------\n","epoch 22 average loss: 0.2444\n","current epoch: 22 current accuracy: 0.5000 current AUC: 0.6144 best accuracy: 0.6375 at epoch 6\n","----------\n","epoch 23 average loss: 0.2792\n","----------\n","epoch 24 average loss: 0.2926\n","current epoch: 24 current accuracy: 0.5000 current AUC: 0.9231 best accuracy: 0.6375 at epoch 6\n","----------\n","epoch 25 average loss: 0.2136\n","----------\n","epoch 26 average loss: 0.2388\n","saved new best metric model\n","current epoch: 26 current accuracy: 0.6625 current AUC: 0.9387 best accuracy: 0.6625 at epoch 26\n","----------\n","epoch 27 average loss: 0.1994\n","----------\n","epoch 28 average loss: 0.2206\n","saved new best metric model\n","current epoch: 28 current accuracy: 0.7125 current AUC: 0.9056 best accuracy: 0.7125 at epoch 28\n","----------\n","epoch 29 average loss: 0.2415\n","----------\n","epoch 30 average loss: 0.1806\n","current epoch: 30 current accuracy: 0.6750 current AUC: 0.8906 best accuracy: 0.7125 at epoch 28\n","----------\n","epoch 31 average loss: 0.1587\n","----------\n","epoch 32 average loss: 0.1838\n","current epoch: 32 current accuracy: 0.5500 current AUC: 0.8638 best accuracy: 0.7125 at epoch 28\n","----------\n","epoch 33 average loss: 0.1486\n","----------\n","epoch 34 average loss: 0.0976\n","current epoch: 34 current accuracy: 0.6250 current AUC: 0.9169 best accuracy: 0.7125 at epoch 28\n","----------\n","epoch 35 average loss: 0.0891\n","----------\n","epoch 36 average loss: 0.1784\n","current epoch: 36 current accuracy: 0.5250 current AUC: 0.8525 best accuracy: 0.7125 at epoch 28\n","----------\n","epoch 37 average loss: 0.1286\n","----------\n","epoch 38 average loss: 0.1166\n","current epoch: 38 current accuracy: 0.5875 current AUC: 0.9012 best accuracy: 0.7125 at epoch 28\n","----------\n","epoch 39 average loss: 0.1360\n","----------\n","epoch 40 average loss: 0.1349\n","current epoch: 40 current accuracy: 0.6500 current AUC: 0.8975 best accuracy: 0.7125 at epoch 28\n","----------\n","epoch 41 average loss: 0.0474\n","----------\n","epoch 42 average loss: 0.0564\n","current epoch: 42 current accuracy: 0.5375 current AUC: 0.8612 best accuracy: 0.7125 at epoch 28\n","----------\n","epoch 43 average loss: 0.0747\n","----------\n","epoch 44 average loss: 0.1833\n","current epoch: 44 current accuracy: 0.5625 current AUC: 0.8650 best accuracy: 0.7125 at epoch 28\n","----------\n","epoch 45 average loss: 0.1211\n","----------\n","epoch 46 average loss: 0.0733\n","saved new best metric model\n","current epoch: 46 current accuracy: 0.7625 current AUC: 0.9062 best accuracy: 0.7625 at epoch 46\n","----------\n","epoch 47 average loss: 0.0655\n","----------\n","epoch 48 average loss: 0.0169\n","current epoch: 48 current accuracy: 0.6875 current AUC: 0.9031 best accuracy: 0.7625 at epoch 46\n","----------\n","epoch 49 average loss: 0.0611\n","----------\n","epoch 50 average loss: 0.0697\n","current epoch: 50 current accuracy: 0.6750 current AUC: 0.9156 best accuracy: 0.7625 at epoch 46\n","train completed, best_metric: 0.7625 at epoch: 46\n","              precision    recall  f1-score   support\n","\n","        SMCI     0.6842    0.9750    0.8041        40\n","          AD     0.9565    0.5500    0.6984        40\n","\n","    accuracy                         0.7625        80\n","   macro avg     0.8204    0.7625    0.7513        80\n","weighted avg     0.8204    0.7625    0.7513        80\n","\n"]}],"source":["# start a typical PyTorch training\n","val_interval = 2\n","best_metric = -1\n","best_metric_epoch = -1\n","writer = SummaryWriter()\n","for epoch in range(50):\n","    print(\"-\" * 10)\n","    #print(f\"epoch {epoch + 1}/{5}\")\n","    model.train()\n","    epoch_loss = 0\n","    step = 0\n","    for batch_data in train_loader:\n","        step += 1\n","        inputs, labels = batch_data[\"img\"].to(device), batch_data[\"label\"].to(device)\n","        optimizer.zero_grad()\n","        outputs = model(inputs.unsqueeze(1))\n","        loss = loss_function(outputs, labels)\n","        loss.backward()\n","        optimizer.step()\n","        epoch_loss += loss.item()\n","        epoch_len = len(train_ds) // train_loader.batch_size\n","        #print(f\"{step}/{epoch_len}, train_loss: {loss.item():.4f}\")\n","        writer.add_scalar(\"train_loss\", loss.item(), epoch_len * epoch + step)\n","    epoch_loss /= step\n","    print(f\"epoch {epoch + 1} average loss: {epoch_loss:.4f}\")\n","    #epoch_loss_values.append(epoch_loss)\n","    \n","    if (epoch + 1) % val_interval == 0:\n","        model.eval()\n","        with torch.no_grad():\n","            y_pred = torch.tensor([], dtype=torch.float32, device=device)\n","            y = torch.tensor([], dtype=torch.long, device=device)\n","            for val_data in valid_loader:\n","                val_images, val_labels = val_data[\"img\"].to(device), val_data[\"label\"].to(device)\n","                y_pred = torch.cat([y_pred, model(val_images.unsqueeze(1))], dim=0)\n","                y = torch.cat([y, val_labels], dim=0)\n","\n","            acc_value = torch.eq(y_pred.argmax(dim=1), y)\n","            acc_metric = acc_value.sum().item() / len(acc_value)\n","            y_onehot = [post_label(i) for i in decollate_batch(y)]\n","            y_pred_act = [post_pred(i) for i in decollate_batch(y_pred)]\n","            auc_metric(y_pred_act, y_onehot)\n","            auc_result = auc_metric.aggregate()\n","            auc_metric.reset()\n","            del y_pred_act, y_onehot\n","            if acc_metric > best_metric:\n","                A=y\n","                B=y_pred.argmax(dim=1)\n","                best_metric = acc_metric\n","                best_metric_epoch = epoch + 1\n","                torch.save(model.state_dict(), \"/content/drive/MyDrive/DENSENET121SMCIvsADbest_metric_model_classification3d_dict.pth\")\n","                print(\"saved new best metric model\")\n","            print(\n","                \"current epoch: {} current accuracy: {:.4f} current AUC: {:.4f} best accuracy: {:.4f} at epoch {}\".format(\n","                    epoch + 1, acc_metric, auc_result, best_metric, best_metric_epoch\n","                )\n","            )\n","            writer.add_scalar(\"val_accuracy\", acc_metric, epoch + 1)\n","print(f\"train completed, best_metric: {best_metric:.4f} at epoch: {best_metric_epoch}\")\n","target_names = [\"SMCI\",\"AD\"]\n","print(classification_report(A.cpu(),B.cpu() ,target_names=target_names,digits=4))\n","writer.close()"]},{"cell_type":"code","execution_count":46,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1LD5Doaqqonh","outputId":"d7eec954-f158-4c53-cec5-f79e6a8abfca","executionInfo":{"status":"ok","timestamp":1649677034023,"user_tz":-240,"elapsed":23,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Mon Apr 11 08:44:44 2022       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   76C    P0    41W /  70W |   9930MiB / 15109MiB |     72%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","+-----------------------------------------------------------------------------+\n"]}],"source":["!nvidia-smi "]},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pn5KWnRv7nhh","outputId":"3196251e-2b07-4449-b2c9-bee2a20bd5e7","executionInfo":{"status":"ok","timestamp":1649677034791,"user_tz":-240,"elapsed":776,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["DenseNet169(\n","  (features): Sequential(\n","    (conv0): Conv3d(1, 64, kernel_size=(7, 7, 7), stride=(2, 2, 2), padding=(3, 3, 3), bias=False)\n","    (norm0): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    (relu0): ReLU(inplace=True)\n","    (pool0): MaxPool3d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n","    (denseblock1): _DenseBlock(\n","      (denselayer1): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(64, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer2): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(96, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer3): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(128, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer4): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(160, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer5): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(192, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer6): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(224, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","    )\n","    (transition1): _Transition(\n","      (norm): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv): Conv3d(256, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","      (pool): AvgPool3d(kernel_size=2, stride=2, padding=0)\n","    )\n","    (denseblock2): _DenseBlock(\n","      (denselayer1): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(128, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer2): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(160, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer3): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(192, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer4): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(224, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer5): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(256, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer6): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(288, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer7): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(320, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer8): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(352, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer9): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(384, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer10): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(416, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer11): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(448, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer12): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(480, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","    )\n","    (transition2): _Transition(\n","      (norm): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv): Conv3d(512, 256, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","      (pool): AvgPool3d(kernel_size=2, stride=2, padding=0)\n","    )\n","    (denseblock3): _DenseBlock(\n","      (denselayer1): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(256, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer2): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(288, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer3): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(320, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer4): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(352, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer5): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(384, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer6): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(416, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer7): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(448, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer8): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(480, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer9): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(512, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer10): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(544, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer11): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(576, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer12): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(608, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer13): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(640, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer14): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(672, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer15): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(704, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer16): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(736, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer17): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(768, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer18): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(800, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer19): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(832, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer20): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(864, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer21): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(896, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer22): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(928, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer23): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(960, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer24): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(992, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer25): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer26): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1056, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1056, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer27): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1088, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1088, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer28): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1120, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer29): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1152, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer30): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1184, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1184, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer31): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1216, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer32): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1248, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","    )\n","    (transition3): _Transition(\n","      (norm): BatchNorm3d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv): Conv3d(1280, 640, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","      (pool): AvgPool3d(kernel_size=2, stride=2, padding=0)\n","    )\n","    (denseblock4): _DenseBlock(\n","      (denselayer1): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(640, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer2): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(672, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer3): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(704, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer4): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(736, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer5): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(768, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer6): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(800, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer7): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(832, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer8): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(864, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer9): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(896, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer10): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(928, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer11): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(960, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer12): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(992, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer13): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1024, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer14): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1056, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1056, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer15): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1088, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1088, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer16): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1120, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer17): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1152, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1152, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer18): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1184, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1184, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer19): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1216, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer20): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1248, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer21): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1280, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer22): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1312, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1312, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer23): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1344, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1344, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer24): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1376, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1376, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer25): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1408, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1408, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer26): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1440, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1440, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer27): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1472, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1472, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer28): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1504, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1504, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer29): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1536, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer30): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1568, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1568, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer31): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1600, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","      (denselayer32): _DenseLayer(\n","        (layers): Sequential(\n","          (norm1): BatchNorm3d(1632, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu1): ReLU(inplace=True)\n","          (conv1): Conv3d(1632, 128, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","          (norm2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","          (relu2): ReLU(inplace=True)\n","          (conv2): Conv3d(128, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)\n","        )\n","      )\n","    )\n","    (norm5): BatchNorm3d(1664, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","  )\n","  (class_layers): Sequential(\n","    (relu): ReLU(inplace=True)\n","    (pool): AdaptiveAvgPool3d(output_size=1)\n","    (flatten): Flatten(start_dim=1, end_dim=-1)\n","    (out): Linear(in_features=1664, out_features=2, bias=True)\n","  )\n",")"]},"metadata":{},"execution_count":47}],"source":["model.load_state_dict(torch.load('/content/drive/MyDrive/DENSENET121SMCIvsADbest_metric_model_classification3d_dict.pth'))\n","model.eval()"]},{"cell_type":"code","execution_count":48,"metadata":{"id":"KW5rFKe3eOHg","executionInfo":{"status":"ok","timestamp":1649677135520,"user_tz":-240,"elapsed":100755,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["y_true = list()\n","y_pred = list()\n","\n","with torch.no_grad():\n","    for test_data in test_loader:\n","        test_images, test_labels = test_data[\"img\"].to(device), test_data[\"label\"].to(device)\n","        pred = model(test_images.unsqueeze(1)).argmax(dim=1)\n","        y_true.append(test_labels.item())\n","        y_pred.append(pred.item())"]},{"cell_type":"code","execution_count":49,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tOKuCe3dg9T4","outputId":"1f44f8f4-a043-4257-b0f6-2518f369c146","executionInfo":{"status":"ok","timestamp":1649677135527,"user_tz":-240,"elapsed":38,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","        SMCI     0.8000    0.8276    0.8136        29\n","          AD     0.8214    0.7931    0.8070        29\n","\n","    accuracy                         0.8103        58\n","   macro avg     0.8107    0.8103    0.8103        58\n","weighted avg     0.8107    0.8103    0.8103        58\n","\n"]}],"source":["from sklearn.metrics import classification_report\n","target_names = [\"SMCI\",\"AD\"]\n","print(classification_report(y_true, y_pred,target_names=target_names,digits=4))"]},{"cell_type":"code","execution_count":50,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":54},"id":"DvQSxBgIhIrO","outputId":"b2d9b921-aefb-4a50-eee7-968f868b6821","executionInfo":{"status":"ok","timestamp":1649677135529,"user_tz":-240,"elapsed":28,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["fpr, tpr, _ = roc_curve(y_true, y_pred)\n","roc_auc = roc_auc_score(y_true, y_pred)\n","\n","plt.figure(1)\n","plt.plot([0, 1], [0, 1])\n","plt.plot(fpr, tpr, label=\"(Densenet121 area = {:.3f})\".format(roc_auc))\n","plt.xlabel(\"False positive rate\")\n","plt.ylabel(\"True positive rate\")\n","plt.title(\"ROC curve\")\n","plt.legend(loc=\"best\")\n","plt.show()"]},{"cell_type":"code","execution_count":51,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":54},"id":"_Abw0aPbosFy","outputId":"a8de742c-ec51-43fd-f856-8ddb0889a5bf","executionInfo":{"status":"ok","timestamp":1649677136680,"user_tz":-240,"elapsed":1169,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix\n","cmat = confusion_matrix(y_true, y_pred)\n","\n","import seaborn as sns\n","\n","ax = sns.heatmap(cmat, annot=True, cmap='Blues')\n","\n","ax.set_title('Confusion Matrix Stable MCI-29[Label 0],AD-29[Label 1] \\n\\n');\n","ax.set_xlabel('\\nPredicted Values')\n","ax.set_ylabel('Actual Values ');\n","\n","## Ticket labels - List must be in alphabetical order\n","ax.xaxis.set_ticklabels(['False','True'])\n","ax.yaxis.set_ticklabels(['False','True'])\n","\n","## Display the visualization of the Confusion Matrix.\n","plt.show()\n"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":[],"machine_shape":"hm","name":"DenseNet169 Fold-1   SMCI vs AD","provenance":[{"file_id":"1ZLY40Int_s0D6KtZNH_kXBnV_lS9wuj2","timestamp":1649666970937},{"file_id":"1Uz9WP-CrrnkXZEy_tARR5eySNxhYP1UD","timestamp":1649618624015},{"file_id":"1yl08D9WJda9cSY1v3qJEwoqmjVzMGDVK","timestamp":1648382303992},{"file_id":"1W_VhzdsW0ev4YXUdlgWGQVc8FDui_-ti","timestamp":1648355843901},{"file_id":"1WwLS7IvoVpwP2K0cG9HF3BCfim5lWeE-","timestamp":1648347425085},{"file_id":"1aeCVSDGh-GOkorZ5Bl2btjFC2p_kK_k8","timestamp":1648314735073},{"file_id":"1BTjj-YH44tZrTF7rG6y4vREOqyiL3u5W","timestamp":1648302511310},{"file_id":"1jG_r7VUlaeHdfoqDiC5T--PwdnOGDpX7","timestamp":1648292499522},{"file_id":"15j8pYQmvG_UNAnP8JuGzfD8ex_6hxRns","timestamp":1648283104327},{"file_id":"1NE32ZVaen7rQzttzj3osZe7_nXN9QMOy","timestamp":1648201474639},{"file_id":"1TgopIX2tPaVjnXLqi3W4-d6UhVK8nPEJ","timestamp":1648127135930},{"file_id":"1-T7dnfNb8Ib2zGQgpjLivEO2VwMdetwr","timestamp":1648121625144},{"file_id":"1r1lUfWnsJxZnUUPhf_ThH0HE9YscvYcQ","timestamp":1648111248098},{"file_id":"1HYazkOl83bLXhAFo_z0e9UhhR7KIhCdV","timestamp":1648061718205},{"file_id":"10mbf3ronNevgSGamc8CjNo5VuCqaUpgz","timestamp":1648055036787},{"file_id":"1luKbRAAUC-f03yc4j610EoiAHppb68BS","timestamp":1648031793067},{"file_id":"1zP4rEG5G6l4zAqoJ_IZtldeR-Rf9vIAn","timestamp":1644428204089},{"file_id":"11yTaxC3PAGGBVoJ2ggBXxzwKfysLiMF3","timestamp":1644392976089},{"file_id":"1RWGGIVivPPJdbKNKUT_E241L8JQ5spxx","timestamp":1643956276368}],"mount_file_id":"1TkCe01YkufBb8bB6a94wM1jq5tIxyoTT","authorship_tag":"ABX9TyPzy44WLl0m7KyWC7n4by0W"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}