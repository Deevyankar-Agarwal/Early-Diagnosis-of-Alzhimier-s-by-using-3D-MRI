{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"cUJl8Mw0QXoP","executionInfo":{"status":"ok","timestamp":1650276504543,"user_tz":-240,"elapsed":5987,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["import torch\n","import os\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import roc_curve\n","from sklearn.metrics import roc_auc_score\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","import seaborn as sns\n"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4282,"status":"ok","timestamp":1650276508821,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"NYznFz4FMRll","outputId":"f5f573f5-69bd-475c-bdea-0b0e9c28ccc0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting monai\n","  Downloading monai-0.8.1-202202162213-py3-none-any.whl (721 kB)\n","\u001b[?25l\r\u001b[K     |▌                               | 10 kB 34.0 MB/s eta 0:00:01\r\u001b[K     |█                               | 20 kB 8.7 MB/s eta 0:00:01\r\u001b[K     |█▍                              | 30 kB 7.4 MB/s eta 0:00:01\r\u001b[K     |█▉                              | 40 kB 3.5 MB/s eta 0:00:01\r\u001b[K     |██▎                             | 51 kB 3.5 MB/s eta 0:00:01\r\u001b[K     |██▊                             | 61 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███▏                            | 71 kB 4.4 MB/s eta 0:00:01\r\u001b[K     |███▋                            | 81 kB 4.4 MB/s eta 0:00:01\r\u001b[K     |████                            | 92 kB 4.9 MB/s eta 0:00:01\r\u001b[K     |████▌                           | 102 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████                           | 112 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████▌                          | 122 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████                          | 133 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████▍                         | 143 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████▉                         | 153 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████▎                        | 163 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████▊                        | 174 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████▏                       | 184 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████▋                       | 194 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████                       | 204 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████▌                      | 215 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████                      | 225 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████▍                     | 235 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████                     | 245 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████▍                    | 256 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████▉                    | 266 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████▎                   | 276 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 286 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████████▏                  | 296 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████████▋                  | 307 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 317 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████████▌                 | 327 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 337 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████████▍                | 348 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████████▉                | 358 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████████▍               | 368 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████████▉               | 378 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████████████▎              | 389 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 399 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████████████▏             | 409 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████████████▋             | 419 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 430 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 440 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 450 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████████████▍           | 460 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████████████▉           | 471 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 481 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▉          | 491 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▎         | 501 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▊         | 512 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 522 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▋        | 532 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 542 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▌       | 552 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 563 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 573 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▉      | 583 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▎     | 593 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▉     | 604 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▎    | 614 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▊    | 624 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 634 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▋   | 645 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 655 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▌  | 665 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 675 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 686 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▉ | 696 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▎| 706 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▊| 716 kB 4.1 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 721 kB 4.1 MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from monai) (1.21.5)\n","Requirement already satisfied: torch>=1.6 in /usr/local/lib/python3.7/dist-packages (from monai) (1.10.0+cu111)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.6->monai) (4.1.1)\n","Installing collected packages: monai\n","Successfully installed monai-0.8.1\n"]}],"source":["!pip install monai"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"FlUxE75HMNqI","executionInfo":{"status":"ok","timestamp":1650276510691,"user_tz":-240,"elapsed":1874,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["import monai\n","from monai.data import decollate_batch\n","from monai.metrics import ROCAUCMetric\n","from monai.transforms import ToTensord,EnsureType,LoadImaged\n","from monai.transforms import RandAffined,RandRotated,RandGaussianNoised,Activations, AddChanneld, AsDiscrete, Compose,RandRotate90d, Resized, ScaleIntensityd, EnsureTyped"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"P0aSwEwmleyT","executionInfo":{"status":"ok","timestamp":1650276510691,"user_tz":-240,"elapsed":3,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(160,1) # 1 means AD 160 processes MRI for Training"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1036,"status":"ok","timestamp":1650276511724,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"_Via2mzzs85z","outputId":"8ee5fbfd-66b2-43ab-d9be-1e978823a11b"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/\n"]}],"source":["train_files={}\n","for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/'):\n","  if files:\n","    print(path)    "]},{"cell_type":"code","execution_count":6,"metadata":{"id":"92KqzjRQgnJX","executionInfo":{"status":"ok","timestamp":1650276511725,"user_tz":-240,"elapsed":4,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":[" images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD', f]) for f in files] "]},{"cell_type":"code","execution_count":7,"metadata":{"id":"ZIUb-4BxmS4J","executionInfo":{"status":"ok","timestamp":1650276511725,"user_tz":-240,"elapsed":3,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":[" train_files = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1389,"status":"ok","timestamp":1650276513111,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"2xRqG2ROpU2h","outputId":"908b341e-d720-4092-d63a-1b9a44899e17"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/\n"]}],"source":["train_files_sMCI={}\n","for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/'):\n","  if files:\n","    print(path)\n","   "]},{"cell_type":"code","execution_count":9,"metadata":{"id":"9ezb_wKbpcLb","executionInfo":{"status":"ok","timestamp":1650276513112,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images_sMCI = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN', f]) for f in files]\n"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"o5Ic7GYbl99W","executionInfo":{"status":"ok","timestamp":1650276513112,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["y=np.full(160,0) # o means stable MCI "]},{"cell_type":"code","execution_count":11,"metadata":{"id":"A2Wmvm0VqGvC","executionInfo":{"status":"ok","timestamp":1650276513113,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["train_files_sMCI = [{\"img\": img, \"label\": label} for img, label in zip(images_sMCI, y)]"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"nu56u0jmn99m","executionInfo":{"status":"ok","timestamp":1650276513113,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["train_files.extend(train_files_sMCI)"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1650276513113,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"nXXjXi8moEfu","outputId":"5bf7e16a-4e70-42e9-c1c5-e1ad5dfb1995"},"outputs":[{"output_type":"stream","name":"stdout","text":["[{'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0619_MR_MPR-R__GradWarp__N3__Scaled_2_Br_20081001115218896_S15145_I118678.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0619_MR_MPR-R__GradWarp__N3__Scaled_Br_20070411125458928_S15145_I48617.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0816_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002102135862_S18402_I118984.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0816_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217005829488_S18402_I40731.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0938_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001115856421_S19852_I118685.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0938_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070219175406282_S19852_I40980.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0955_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001120235839_S20004_I118689.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0955_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217013411002_S20004_I40754.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217030439623_S23128_I40817.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_003_S_0931_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070503165327269_S20051_I53390.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_003_S_1059_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070501173720913_S22300_I52816.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_003_S_1257_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070501172255698_S27340_I52790.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_005_S_0221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070910164745994_S11958_I72128.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_005_S_0814_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070923123111793_S18390_I74591.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_005_S_0929_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070923124929945_S19669_I74609.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070717180348670_S27673_I60417.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_006_S_0547_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070926110116880_S19779_I75279.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_006_S_0653_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070605122642054_S23255_I55948.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_007_S_0316_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001120625745_S12583_I118693.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_007_S_0316_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070118030943701_S12583_I36573.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_007_S_1248_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070713113209876_S25568_I59950.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_007_S_1304_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070713111105724_S26475_I59910.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070607134807952_S27414_I56319.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_009_S_1334_MR_MPR-R__GradWarp__N3__Scaled_Br_20070717182244238_S27423_I60434.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_009_S_1354_MR_MPR__GradWarp__N3__Scaled_Br_20070717183309825_S27634_I60443.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_2_Br_20081002102855696_S19638_I118990.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20070807153633938_S19638_I65597.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_2_Br_20081001122514861_S26117_I118707.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20070731163202385_S26117_I63349.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_011_S_0002_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070108225928642_S9107_I35475.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_011_S_0003_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061208111300610_S9127_I32237.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_011_S_0010_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061208114538147_S8800_I32270.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_011_S_0053_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070108231357675_S10064_I35486.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_011_S_0183_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061206183315171_S12000_I32003.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0689_MR_MPR-R____N3__Scaled_2_Br_20081001123144447_S16392_I118713.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0689_MR_MPR-R____N3__Scaled_Br_20080225093300703_S16392_I92398.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0712_MR_MPR____N3__Scaled_2_Br_20081001123034709_S16704_I118712.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0712_MR_MPR____N3__Scaled_Br_20080225093529482_S16704_I92401.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0720_MR_MPR____N3__Scaled_2_Br_20081001123253253_S17682_I118714.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0720_MR_MPR____N3__Scaled_Br_20080225174150688_S17682_I92529.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0803_MR_MPR____N3__Scaled_2_Br_20081001123507114_S19197_I118716.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0803_MR_MPR____N3__Scaled_Br_20070711172746366_S19197_I59250.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_013_S_0592_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20071028192251104_S18419_I79144.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_013_S_0699_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070727182856171_S18366_I62650.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_013_S_0996_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426092308209_S22240_I51183.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_013_S_1161_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426171211057_S24399_I51485.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_013_S_1205_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426173828172_S25024_I51542.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070212231950856_S12402_I39620.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_014_S_1095_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070320181218511_S23323_I45740.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_016_S_0991_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070217023139686_S21737_I40794.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_016_S_1263_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070804134033886_S27303_I64622.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0286_MR_MPR____N3__Scaled_2_Br_20081001135113951_S12435_I118779.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0286_MR_MPR____N3__Scaled_Br_20070120013124801_S12435_I37007.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0335_MR_MPR____N3__Scaled_2_Br_20081008153133922_S14586_I119801.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0335_MR_MPR____N3__Scaled_Br_20070101214204431_S14586_I35009.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0633_MR_MPR-R____N3__Scaled_2_Br_20081010112443772_S15573_I120057.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0633_MR_MPR-R____N3__Scaled_Br_20070101222816515_S15573_I35036.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0682_MR_MPR____N3__Scaled_2_Br_20081008153234434_S16293_I119802.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0682_MR_MPR____N3__Scaled_Br_20070101224115510_S16293_I35044.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_020_S_0213_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070718120158728_S12386_I60600.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20061217125152228_S12836_I33444.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_021_S_0642_MR_MPR__GradWarp__N3__Scaled_Br_20061217130526879_S15935_I33452.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20061217132116005_S17580_I33461.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_021_S_1109_MR_MPR__GradWarp__N3__Scaled_Br_20070727185946236_S23446_I62695.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_022_S_0007_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712142439074_S9024_I59366.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712152611314_S11485_I59484.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_022_S_0219_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712154620604_S12375_I59533.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_022_S_0543_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712155153926_S14849_I59543.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0083_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001153941224_S10568_I118874.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0083_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061130194138457_S10568_I31143.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0084_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100834283_S10764_I118970.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0084_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061201102044695_S10764_I31205.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0093_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100757991_S10736_I118969.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0139_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100910505_S11079_I118971.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0139_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061201144502375_S11079_I31300.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0916_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001154252419_S19228_I118879.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0916_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061203142844438_S19228_I31533.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001160410209_S26314_I118923.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070727133707675_S26314_I62433.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_1289_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001160534628_S26374_I118925.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_1289_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080207172946284_S26374_I89938.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_024_S_1171_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731172208570_S24659_I63406.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_024_S_1307_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731173131780_S27061_I63415.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_0404_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061222194841960_S13866_I34204.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_0850_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070412191003564_S18554_I48996.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_1081_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070327152141858_S25357_I47168.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_1082_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070327161431010_S22938_I47204.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070327165452524_S25764_I47228.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_1385_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070330094058546_S28133_I47574.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_029_S_0836_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070806122937449_S18151_I65013.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_029_S_0999_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070805144703422_S23248_I64898.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070718151433161_S22977_I60741.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_029_S_1184_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070812143109046_S25463_I67210.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_031_S_0321_MR_MPR__GradWarp__N3__Scaled_Br_20070807093706127_S12365_I65383.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_031_S_0554_MR_MPR-R__GradWarp__N3__Scaled_Br_20070804144512116_S14904_I64711.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_031_S_1209_MR_MPR__GradWarp__N3__Scaled_Br_20070813153725713_S25028_I67441.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_2_Br_20081003100226549_S11186_I119079.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20070123192754258_S11186_I37210.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_0400_MR_MPR____N3__Scaled_2_Br_20081003101339687_S13238_I119087.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_0400_MR_MPR____N3__Scaled_Br_20070118000329335_S13238_I36459.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_1037_MR_MPR____N3__Scaled_2_Br_20081003104216708_S22208_I119114.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_1101_MR_MPR____N3__Scaled_2_Br_20081003104506735_S22783_I119116.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_1101_MR_MPR____N3__Scaled_Br_20070731180142730_S22783_I63442.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003121149525_S17337_I119128.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070303125222238_S17337_I42400.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0733_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003121546031_S16932_I119132.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0733_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070303133222445_S16932_I42425.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003121834902_S16956_I119135.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070304110859078_S16956_I42441.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0889_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070426183239887_S19296_I51629.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_1281_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070517161803030_S26136_I54780.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070517162231894_S26144_I54785.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_1285_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426175923899_S26128_I51588.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_1308_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070517160021095_S26600_I54752.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_035_S_0341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070319175003745_S12952_I45213.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_036_S_0577_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070119233126708_S14974_I36914.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_036_S_0759_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070120004026768_S18094_I36969.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070209144410346_S18264_I38652.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_036_S_1001_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070209145840163_S22691_I38661.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_037_S_0627_MR_MPR__GradWarp__N3__Scaled_Br_20071030172722998_S16313_I79831.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070806164945601_S27512_I65248.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_041_S_1391_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070730182830112_S29116_I62933.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_041_S_1435_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20071029192425510_S39186_I79636.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_051_S_1296_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070628165536504_S26431_I58022.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_053_S_1044_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003142251021_S21256_I119175.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_053_S_1044_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070802192148921_S21256_I64203.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_057_S_0474_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061229153747701_S13990_I34720.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070730190858034_S28667_I62998.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_057_S_1373_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070730191448410_S28698_I63008.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_057_S_1379_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070730191813596_S28761_I63014.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424112744977_S14699_I50426.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_062_S_0690_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424115325478_S16924_I50468.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_062_S_0730_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424120556863_S17062_I50487.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424123729148_S18189_I50524.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0029_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003155128312_S9904_I119180.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0029_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070209160613449_S9904_I38717.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0076_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003155813843_S10468_I119190.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0076_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070111012139914_S10468_I35911.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0110_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003160054331_S11177_I119194.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0828_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003161047536_S18532_I119205.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0828_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070807174227674_S18532_I65716.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_1185_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731111102788_S24635_I63104.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_1253_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070522143031075_S27558_I55033.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_2_Br_20081212141712788_S10772_I130231.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20070731181048264_S10772_I63454.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_068_S_1191_MR_MPR____N3__Scaled_Br_20071103125754305_S25451_I80645.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_073_S_0565_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006105531714_S15762_I119234.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_073_S_0565_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070213213329963_S15762_I39919.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_082_S_0304_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006113122746_S12557_I119236.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_082_S_0761_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006113707423_S18119_I119244.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_082_S_1079_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070418082140556_S22650_I49490.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_082_S_1377_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070731115515322_S28495_I63170.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1027_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070418084102408_S21207_I49527.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1090_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731120023063_S23375_I63176.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1102_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731121241229_S22905_I63186.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070812144323362_S23871_I67223.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1397_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080307104443256_S31011_I95662.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1402_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070808191131320_S32102_I66078.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_098_S_0149_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080206083054086_S11021_I89429.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_098_S_0884_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070605153002130_S24183_I56026.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI053-Guys-0727-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI051-HH-1328-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI058-Guys-0726-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI055-Guys-0730-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI054-Guys-0707-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI056-HH-1327-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI057-HH-1342-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI060-Guys-0709-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI062-Guys-0740-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI063-Guys-0742-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI061-Guys-0715-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI059-HH-1284-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI064-Guys-0743-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI065-Guys-0744-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI066-Guys-0731-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI070-Guys-0767-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI067-HH-1356-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI069-Guys-0769-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI072-HH-2324-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI068-Guys-0756-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI073-Guys-0755-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI074-Guys-0771-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI075-Guys-0754-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI076-Guys-0753-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI071-Guys-0770-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI077-Guys-0752-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI085-Guys-0759-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI078-Guys-0751-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI079-HH-1388-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI080-HH-1341-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI081-Guys-0855-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI087-Guys-0768-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI083-HH-1357-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI088-Guys-0758-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI084-Guys-0741-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI086-Guys-0728-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI089-Guys-0757-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI090-Guys-0800-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI091-Guys-0762-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI092-HH-1436-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI136-HH-1452-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI138-Guys-0746-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI137-HH-1472-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI141-Guys-0789-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI139-Guys-0815-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI140-Guys-0787-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI144-Guys-0788-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI145-Guys-0781-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI142-Guys-0786-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI143-Guys-0785-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI146-HH-1389-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI148-HH-1453-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI150-HH-1550-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI151-Guys-0793-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI153-Guys-0782-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI158-Guys-0783-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI154-Guys-0821-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI157-Guys-0816-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI160-HH-1637-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI156-Guys-0837-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI161-HH-2533-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI163-HH-1621-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI159-HH-1549-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI164-Guys-0844-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI162-HH-1548-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI165-HH-1589-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI166-Guys-0846-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI167-HH-1569-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI175-HH-1570-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI176-HH-1604-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI169-Guys-0842-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI172-Guys-0982-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI168-HH-1607-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI170-Guys-0843-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI173-HH-1590-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI174-HH-1571-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI177-Guys-0831-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI178-Guys-0778-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI179-Guys-0777-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI180-HH-1605-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI184-Guys-0794-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI182-Guys-0792-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI189-Guys-0799-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI188-Guys-0798-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI181-Guys-0790-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI186-Guys-0796-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI185-Guys-0795-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI183-Guys-0791-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI191-Guys-0801-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI193-Guys-0810-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI192-Guys-0878-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI194-Guys-0818-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI196-Guys-0805-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI197-Guys-0811-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI198-Guys-0803-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI195-HH-1620-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI201-HH-1588-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI204-HH-1651-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI202-HH-1526-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI199-Guys-0802-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI200-Guys-0812-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI205-HH-1649-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI206-HH-1650-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI207-Guys-0809-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI209-Guys-0804-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI208-Guys-0808-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI210-Guys-0856-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI211-HH-1568-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI214-HH-1636-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI212-HH-1643-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI217-HH-1638-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI216-HH-1635-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI213-HH-1642-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI219-Guys-0894-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI218-HH-1815-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI223-Guys-0830-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI224-Guys-0823-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI221-HH-1606-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI222-Guys-0819-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI225-Guys-0832-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI002-Guys-0828-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI014-HH-1236-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI015-HH-1258-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI012-HH-1211-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI013-HH-1212-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI016-Guys-0697-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI020-Guys-0700-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI019-Guys-0702-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI024-Guys-0705-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI021-Guys-0703-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI017-Guys-0698-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI026-Guys-0696-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI027-Guys-0710-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI025-Guys-0852-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI028-Guys-1038-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI023-Guys-0699-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI029-Guys-0829-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI031-Guys-0797-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI030-Guys-0708-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI034-HH-1260-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI022-Guys-0701-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI035-IOP-0873-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI033-HH-1259-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI037-Guys-0704-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI036-Guys-0736-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI038-Guys-0729-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI039-HH-1261-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI040-Guys-0724-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI041-Guys-0706-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI042-Guys-0725-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI044-Guys-0712-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI043-Guys-0714-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI046-Guys-0824-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI045-Guys-0713-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI050-Guys-0711-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI049-HH-1358-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI052-HH-1343-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI048-HH-1326-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI230-IOP-0869-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI231-IOP-0866-T1.nii.gz', 'label': 0}]\n"]}],"source":["print(train_files)"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"_-tQmulsLAFi","executionInfo":{"status":"ok","timestamp":1650276513114,"user_tz":-240,"elapsed":10,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["  train_transforms = Compose(\n","        [\n","            LoadImaged(keys=[\"img\"]),\n","            #AddChanneld(keys=[\"img\"]),\n","            #RandAffined(keys=['img'], prob=0.5, translate_range=10), \n","            #RandRotated(keys=['img'], prob=0.6, range_x=10.0),\n","            #RandGaussianNoised(keys='img', prob=0.5),\n","            #ToTensord(keys=[\"img\"]),\n","        ]\n","    )"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"w2dtOA-uRVYG","executionInfo":{"status":"ok","timestamp":1650276513114,"user_tz":-240,"elapsed":10,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["post_pred = Compose([EnsureType(), Activations(softmax=True)])\n","post_label = Compose([EnsureType(), AsDiscrete(to_onehot=2)])\n"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"LwPcqiDsUBkD","executionInfo":{"status":"ok","timestamp":1650276513114,"user_tz":-240,"elapsed":10,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["from torch.utils.data import DataLoader\n","from torch.utils.tensorboard import SummaryWriter"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"N4Mqm0grS1EO","executionInfo":{"status":"ok","timestamp":1650276513114,"user_tz":-240,"elapsed":9,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["#check_ds = monai.data.Dataset(data=train_files, transform=train_transforms)\n","#check_loader = DataLoader(check_ds, batch_size=4, num_workers=4, pin_memory=torch.cuda.is_available())\n","#check_data = monai.utils.misc.first(check_loader)\n","#print(check_data[\"img\"].shape, check_data[\"label\"])\n"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"iVsZ9Mx6oeN7","executionInfo":{"status":"ok","timestamp":1650276513115,"user_tz":-240,"elapsed":10,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a training data loader\n","train_ds = monai.data.Dataset(data=train_files, transform=train_transforms)\n","train_loader = DataLoader(train_ds, batch_size=2, shuffle=True, num_workers=4, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1232,"status":"ok","timestamp":1650276514337,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"coRjr9lk0pip","outputId":"7d6f1aa6-568a-477e-e08b-d1e2b1f91725"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/AD/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/AD/'):\n","  if files:\n","    print(path)    "]},{"cell_type":"code","execution_count":20,"metadata":{"id":"Bb1UmOqp2Mzo","executionInfo":{"status":"ok","timestamp":1650276514337,"user_tz":-240,"elapsed":8,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(40,1)"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"U1t6ApKc3z3C","executionInfo":{"status":"ok","timestamp":1650276514338,"user_tz":-240,"elapsed":7,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/AD', f]) for f in files] "]},{"cell_type":"code","execution_count":22,"metadata":{"id":"cZFZIBmE4diO","executionInfo":{"status":"ok","timestamp":1650276514338,"user_tz":-240,"elapsed":7,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1650276514338,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"j3ruNdWQ6efP","outputId":"2dd13389-efed-443a-b0ee-4d545427da38"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/CN/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/CN/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"CPeztrsB6k-V","executionInfo":{"status":"ok","timestamp":1650276514339,"user_tz":-240,"elapsed":5,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(40,0)"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"Zwshfucp6pey","executionInfo":{"status":"ok","timestamp":1650276514339,"user_tz":-240,"elapsed":5,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/CN', f]) for f in files] "]},{"cell_type":"code","execution_count":26,"metadata":{"id":"tTnjUbZW6yuZ","executionInfo":{"status":"ok","timestamp":1650276515057,"user_tz":-240,"elapsed":5,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files_sMCI = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"ZxDNtMH97eOE","executionInfo":{"status":"ok","timestamp":1650276515058,"user_tz":-240,"elapsed":5,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files.extend(valid_files_sMCI)"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"U5VuoLnM7pfM","executionInfo":{"status":"ok","timestamp":1650276515059,"user_tz":-240,"elapsed":6,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["#check_ds = monai.data.Dataset(data=valid_files, transform=train_transforms)\n","#check_loader = DataLoader(check_ds, batch_size=8, num_workers=4, pin_memory=torch.cuda.is_available())\n","#check_data = monai.utils.misc.first(check_loader)\n","#print(check_data[\"img\"].shape, check_data[\"label\"])"]},{"cell_type":"code","execution_count":29,"metadata":{"id":"qVKSOKbw7296","executionInfo":{"status":"ok","timestamp":1650276515059,"user_tz":-240,"elapsed":6,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a validation data loader\n","valid_ds = monai.data.Dataset(data=valid_files, transform=train_transforms)\n","valid_loader = DataLoader(valid_ds, batch_size=2,shuffle=True,num_workers=4, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":647,"status":"ok","timestamp":1650276515700,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"w59RYjFHM4s9","outputId":"2ef0e9ba-56b7-49f8-d496-66eecd2900cb"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"PxrcqmvMNAi9","executionInfo":{"status":"ok","timestamp":1650276515700,"user_tz":-240,"elapsed":9,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(45,1)"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"50fO8lN-NNXk","executionInfo":{"status":"ok","timestamp":1650276515701,"user_tz":-240,"elapsed":9,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD', f]) for f in files] "]},{"cell_type":"markdown","metadata":{"id":"HHl3YGjoqFhG"},"source":[""]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1650276515701,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"BhuE2IwePDBJ","outputId":"e59a26e1-a0e0-4689-db1a-eaafbf007ea7"},"outputs":[{"output_type":"stream","name":"stdout","text":["['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_0938_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081104151647760_S58211_I125155.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081224104711856_S60832_I132197.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_0221_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080501163219594_S49279_I104489.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090701135215664_S65452_I147406.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721101114129_S67376_I149749.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20100105142259322_S58426_I162100.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20090227152103934_S62987_I137223.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080516095357795_S49746_I105878.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_016_S_0991_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721103719643_S66595_I149771.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20080515114721734_S49511_I105737.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20090127130302490_S57137_I134624.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080229153509900_S45881_I94405.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_0084_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080224132527438_S44784_I92169.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090512151630340_S64537_I143676.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1082_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081229144920056_S60862_I132368.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090316152042654_S63689_I139062.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090223154912775_S61415_I136737.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20080421171040104_S47745_I103333.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081023111433234_S55321_I123024.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081026130730923_S56031_I123722.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317134835050_S63547_I139235.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1308_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317140629096_S63613_I139266.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081028132916623_S57028_I124258.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090513123110219_S64654_I143723.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514101747514_S66427_I143792.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1379_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514103130382_S66419_I143815.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702154348870_S51763_I112301.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0730_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081023151703543_S54793_I123220.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081230153105872_S60719_I132424.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_067_S_0076_MR_MPR__GradWarp__N3__Scaled_Br_20090113143434713_S57777_I133486.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20080414160306136_S47738_I102511.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_073_S_0565_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081027091402842_S55114_I123926.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217155439187_S62803_I136220.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_098_S_0149_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080223171535343_S44911_I91891.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_099_S_1144_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090204190508382_S62245_I135299.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_109_S_1157_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20091214142720527_S65805_I160876.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_116_S_0370_MR_MPR__GradWarp__N3__Scaled_Br_20080522134715771_S49840_I106529.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0091_MR_MPR____N3__Scaled_Br_20080223174718151_S44614_I91935.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0094_MR_MPR-R____N3__Scaled_Br_20080223175253233_S44624_I91942.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_0891_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081027142509323_S56885_I124156.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_1221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217161856142_S62792_I136241.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_0844_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081209113459069_S60062_I129620.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_1382_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090721114554064_S66581_I149834.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0457_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702162258576_S51679_I112366.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0497_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081024092147063_S53628_I123416.nii']\n"]}],"source":["print(images)"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"UbezDmYZNdU-","executionInfo":{"status":"ok","timestamp":1650276515701,"user_tz":-240,"elapsed":7,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files= [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1650276515701,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"bBuIqGtpnS8V","outputId":"b4bfe37f-a199-4749-c533-c30f8726a9f0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_0938_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081104151647760_S58211_I125155.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081224104711856_S60832_I132197.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_0221_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080501163219594_S49279_I104489.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090701135215664_S65452_I147406.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721101114129_S67376_I149749.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20100105142259322_S58426_I162100.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20090227152103934_S62987_I137223.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080516095357795_S49746_I105878.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_016_S_0991_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721103719643_S66595_I149771.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20080515114721734_S49511_I105737.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20090127130302490_S57137_I134624.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080229153509900_S45881_I94405.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_0084_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080224132527438_S44784_I92169.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090512151630340_S64537_I143676.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1082_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081229144920056_S60862_I132368.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090316152042654_S63689_I139062.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090223154912775_S61415_I136737.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20080421171040104_S47745_I103333.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081023111433234_S55321_I123024.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081026130730923_S56031_I123722.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317134835050_S63547_I139235.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1308_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317140629096_S63613_I139266.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081028132916623_S57028_I124258.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090513123110219_S64654_I143723.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514101747514_S66427_I143792.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1379_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514103130382_S66419_I143815.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702154348870_S51763_I112301.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0730_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081023151703543_S54793_I123220.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081230153105872_S60719_I132424.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_067_S_0076_MR_MPR__GradWarp__N3__Scaled_Br_20090113143434713_S57777_I133486.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20080414160306136_S47738_I102511.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_073_S_0565_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081027091402842_S55114_I123926.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217155439187_S62803_I136220.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_098_S_0149_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080223171535343_S44911_I91891.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_099_S_1144_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090204190508382_S62245_I135299.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_109_S_1157_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20091214142720527_S65805_I160876.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_116_S_0370_MR_MPR__GradWarp__N3__Scaled_Br_20080522134715771_S49840_I106529.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0091_MR_MPR____N3__Scaled_Br_20080223174718151_S44614_I91935.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0094_MR_MPR-R____N3__Scaled_Br_20080223175253233_S44624_I91942.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_0891_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081027142509323_S56885_I124156.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_1221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217161856142_S62792_I136241.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_0844_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081209113459069_S60062_I129620.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_1382_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090721114554064_S66581_I149834.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0457_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702162258576_S51679_I112366.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0497_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081024092147063_S53628_I123416.nii',\n","  'label': 1}]"]},"metadata":{},"execution_count":35}],"source":["test_files"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":492,"status":"ok","timestamp":1650276516190,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"BTX-NshNN67U","outputId":"b820fab8-6af8-418d-d1d5-13bc38ceb68c"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":37,"metadata":{"id":"V3Mx0BFpOgxK","executionInfo":{"status":"ok","timestamp":1650276516191,"user_tz":-240,"elapsed":6,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(45,0)"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"WNTSkpIjOj2w","executionInfo":{"status":"ok","timestamp":1650276516191,"user_tz":-240,"elapsed":6,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN', f]) for f in files] "]},{"cell_type":"markdown","metadata":{"id":"vTGEiVvEJADY"},"source":[""]},{"cell_type":"code","execution_count":39,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1650276516191,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"Ozj2euWTPdpY","outputId":"4b5f4951-df2f-4c91-9bbb-697a3ef253fe"},"outputs":[{"output_type":"stream","name":"stdout","text":["['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI286-Guys-0859-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI287-Guys-0863-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI288-Guys-0879-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI289-Guys-0864-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI290-IOP-0874-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI291-IOP-0882-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI292-IOP-0877-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI293-IOP-0876-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI294-IOP-0868-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI295-HH-1814-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI296-HH-1970-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI297-Guys-0886-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI298-Guys-0861-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI299-Guys-0893-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI300-Guys-0880-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI302-HH-1883-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI303-IOP-0968-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI304-Guys-0862-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI305-IOP-0871-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI306-IOP-0867-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI307-IOP-0872-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI308-Guys-0884-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI309-IOP-0897-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI310-IOP-0890-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI311-Guys-0885-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI312-Guys-0887-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI313-HH-2241-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI314-IOP-0889-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI315-IOP-0888-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI316-HH-1862-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI317-Guys-0896-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI318-Guys-0895-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI319-Guys-0901-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI320-Guys-0902-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI321-Guys-0903-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI322-IOP-0891-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI324-Guys-0922-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI325-Guys-0911-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI326-Guys-0907-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI327-HH-1999-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI328-HH-2295-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI329-HH-1908-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI330-Guys-0881-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI332-IOP-1134-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI333-IOP-0926-T1.nii.gz']\n"]}],"source":["print(images)"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"l-fmwiL9Pmdt","executionInfo":{"status":"ok","timestamp":1650276516192,"user_tz":-240,"elapsed":5,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files_sMCI= [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":41,"metadata":{"id":"OU_zrGhaPwJF","executionInfo":{"status":"ok","timestamp":1650276516192,"user_tz":-240,"elapsed":5,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files.extend(test_files_sMCI)"]},{"cell_type":"code","execution_count":42,"metadata":{"id":"BSkM4T7KP_9_","executionInfo":{"status":"ok","timestamp":1650276516192,"user_tz":-240,"elapsed":4,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a test data loader\n","test_ds = monai.data.Dataset(data=test_files, transform=train_transforms)\n","test_loader = DataLoader(test_ds, batch_size=1, shuffle=True, num_workers=1, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":43,"metadata":{"id":"0jRFNQcxJUOf","executionInfo":{"status":"ok","timestamp":1650276526153,"user_tz":-240,"elapsed":9965,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["  from monai.networks.nets.efficientnet import EfficientNetBN\n","  device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","  model=EfficientNetBN(\"efficientnet-b1\",spatial_dims=3, in_channels=1, num_classes=2).to(device)\n","  #model = monai.networks.nets.DenseNet264(spatial_dims=3, in_channels=1, out_channels=2).to(device)\n","  loss_function = torch.nn.CrossEntropyLoss()\n","  optimizer = torch.optim.Adam(model.parameters(), 1e-4)\n","  auc_metric = ROCAUCMetric()"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1650276526154,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"rfTuqU6DJbqG","outputId":"00236237-1a40-49ba-ad56-56fd63c055dd"},"outputs":[{"output_type":"stream","name":"stdout","text":["<bound method Module.parameters of EfficientNetBN(\n","  (_conv_stem): Conv3d(1, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), bias=False)\n","  (_conv_stem_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","  (_bn0): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_blocks): Sequential(\n","    (0): Sequential(\n","      (0): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=32, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(32, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(32, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (1): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=16, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(16, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(4, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(16, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (1): Sequential(\n","      (2): MBConvBlock(\n","        (_expand_conv): Conv3d(16, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=96, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(96, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(4, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(96, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (3): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (4): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (2): Sequential(\n","      (5): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 2, 1, 2, 1, 2), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 40, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (6): MBConvBlock(\n","        (_expand_conv): Conv3d(40, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(240, 240, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=240, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(240, 10, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(10, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(240, 40, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (7): MBConvBlock(\n","        (_expand_conv): Conv3d(40, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(240, 240, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=240, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(240, 10, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(10, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(240, 40, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (3): Sequential(\n","      (8): MBConvBlock(\n","        (_expand_conv): Conv3d(40, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(240, 240, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=240, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(240, 10, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(10, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(240, 80, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (9): MBConvBlock(\n","        (_expand_conv): Conv3d(80, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(480, 480, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=480, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(480, 20, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(20, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(480, 80, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (10): MBConvBlock(\n","        (_expand_conv): Conv3d(80, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(480, 480, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=480, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(480, 20, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(20, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(480, 80, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (11): MBConvBlock(\n","        (_expand_conv): Conv3d(80, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(480, 480, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=480, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(480, 20, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(20, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(480, 80, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (4): Sequential(\n","      (12): MBConvBlock(\n","        (_expand_conv): Conv3d(80, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(480, 480, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=480, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(480, 20, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(20, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(480, 112, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (13): MBConvBlock(\n","        (_expand_conv): Conv3d(112, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(672, 672, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=672, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(672, 28, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(28, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(672, 112, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (14): MBConvBlock(\n","        (_expand_conv): Conv3d(112, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(672, 672, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=672, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(672, 28, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(28, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(672, 112, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (15): MBConvBlock(\n","        (_expand_conv): Conv3d(112, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(672, 672, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=672, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(672, 28, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(28, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(672, 112, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (5): Sequential(\n","      (16): MBConvBlock(\n","        (_expand_conv): Conv3d(112, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(672, 672, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=672, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(672, 28, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(28, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(672, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (17): MBConvBlock(\n","        (_expand_conv): Conv3d(192, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1152, 1152, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1152, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1152, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(48, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1152, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (18): MBConvBlock(\n","        (_expand_conv): Conv3d(192, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1152, 1152, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1152, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1152, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(48, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1152, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (19): MBConvBlock(\n","        (_expand_conv): Conv3d(192, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1152, 1152, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1152, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1152, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(48, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1152, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (20): MBConvBlock(\n","        (_expand_conv): Conv3d(192, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1152, 1152, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1152, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1152, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(48, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1152, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (6): Sequential(\n","      (21): MBConvBlock(\n","        (_expand_conv): Conv3d(192, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1152, 1152, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=1152, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1152, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(48, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1152, 320, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(320, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (22): MBConvBlock(\n","        (_expand_conv): Conv3d(320, 1920, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1920, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1920, 1920, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=1920, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(1920, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1920, 80, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(80, 1920, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1920, 320, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(320, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","  )\n","  (_conv_head): Conv3d(320, 1280, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","  (_conv_head_padding): Identity()\n","  (_bn1): BatchNorm3d(1280, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_avg_pooling): AdaptiveAvgPool3d(output_size=1)\n","  (_dropout): Dropout(p=0.2, inplace=False)\n","  (_fc): Linear(in_features=1280, out_features=2, bias=True)\n","  (_swish): MemoryEfficientSwish()\n",")>\n"]}],"source":["print(model.parameters)"]},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ve31g7LaVSGl","outputId":"4ef94cf0-769d-4673-a61e-f634542e0715","executionInfo":{"status":"ok","timestamp":1650284111211,"user_tz":-240,"elapsed":7585060,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["----------\n","epoch 1 average loss: 2.1180\n","----------\n","epoch 2 average loss: 1.6750\n","saved new best metric model\n","current epoch: 2 current accuracy: 0.5000 current AUC: 0.8458 best accuracy: 0.5000 at epoch 2\n","----------\n","epoch 3 average loss: 0.8453\n","----------\n","epoch 4 average loss: 0.4474\n","current epoch: 4 current accuracy: 0.5000 current AUC: 0.8781 best accuracy: 0.5000 at epoch 2\n","----------\n","epoch 5 average loss: 0.4112\n","----------\n","epoch 6 average loss: 0.4964\n","saved new best metric model\n","current epoch: 6 current accuracy: 0.6125 current AUC: 0.6914 best accuracy: 0.6125 at epoch 6\n","----------\n","epoch 7 average loss: 0.2404\n","----------\n","epoch 8 average loss: 0.2177\n","saved new best metric model\n","current epoch: 8 current accuracy: 0.8625 current AUC: 0.9906 best accuracy: 0.8625 at epoch 8\n","----------\n","epoch 9 average loss: 0.1750\n","----------\n","epoch 10 average loss: 0.1396\n","saved new best metric model\n","current epoch: 10 current accuracy: 0.9625 current AUC: 0.9884 best accuracy: 0.9625 at epoch 10\n","----------\n","epoch 11 average loss: 0.0649\n","----------\n","epoch 12 average loss: 0.0533\n","saved new best metric model\n","current epoch: 12 current accuracy: 0.9750 current AUC: 0.9744 best accuracy: 0.9750 at epoch 12\n","----------\n","epoch 13 average loss: 0.0139\n","----------\n","epoch 14 average loss: 0.1414\n","current epoch: 14 current accuracy: 0.9750 current AUC: 0.9800 best accuracy: 0.9750 at epoch 12\n","----------\n","epoch 15 average loss: 0.0605\n","----------\n","epoch 16 average loss: 0.1419\n","current epoch: 16 current accuracy: 0.9750 current AUC: 0.9850 best accuracy: 0.9750 at epoch 12\n","----------\n","epoch 17 average loss: 0.1493\n","----------\n","epoch 18 average loss: 0.0575\n","current epoch: 18 current accuracy: 0.9375 current AUC: 0.9788 best accuracy: 0.9750 at epoch 12\n","----------\n","epoch 19 average loss: 0.1782\n","----------\n","epoch 20 average loss: 0.0318\n","current epoch: 20 current accuracy: 0.9750 current AUC: 0.9898 best accuracy: 0.9750 at epoch 12\n","----------\n","epoch 21 average loss: 0.0674\n","----------\n","epoch 22 average loss: 0.2532\n","current epoch: 22 current accuracy: 0.8125 current AUC: 0.9625 best accuracy: 0.9750 at epoch 12\n","----------\n","epoch 23 average loss: 0.1274\n","----------\n","epoch 24 average loss: 0.0543\n","current epoch: 24 current accuracy: 0.9625 current AUC: 0.9725 best accuracy: 0.9750 at epoch 12\n","----------\n","epoch 25 average loss: 0.0470\n","----------\n","epoch 26 average loss: 0.0084\n","saved new best metric model\n","current epoch: 26 current accuracy: 0.9875 current AUC: 0.9923 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 27 average loss: 0.1145\n","----------\n","epoch 28 average loss: 0.0230\n","current epoch: 28 current accuracy: 0.9875 current AUC: 0.9894 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 29 average loss: 0.0469\n","----------\n","epoch 30 average loss: 0.0021\n","current epoch: 30 current accuracy: 0.9750 current AUC: 0.9800 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 31 average loss: 0.0465\n","----------\n","epoch 32 average loss: 0.0060\n","current epoch: 32 current accuracy: 0.9250 current AUC: 0.9731 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 33 average loss: 0.0024\n","----------\n","epoch 34 average loss: 0.0009\n","current epoch: 34 current accuracy: 0.9750 current AUC: 0.9820 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 35 average loss: 0.0016\n","----------\n","epoch 36 average loss: 0.0392\n","current epoch: 36 current accuracy: 0.6625 current AUC: 0.6422 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 37 average loss: 0.0623\n","----------\n","epoch 38 average loss: 0.0637\n","current epoch: 38 current accuracy: 0.9125 current AUC: 0.9869 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 39 average loss: 0.0560\n","----------\n","epoch 40 average loss: 0.0690\n","current epoch: 40 current accuracy: 0.9625 current AUC: 0.9881 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 41 average loss: 0.0803\n","----------\n","epoch 42 average loss: 0.0611\n","current epoch: 42 current accuracy: 0.6750 current AUC: 0.9806 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 43 average loss: 0.0690\n","----------\n","epoch 44 average loss: 0.1631\n","current epoch: 44 current accuracy: 0.9750 current AUC: 0.9756 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 45 average loss: 0.0026\n","----------\n","epoch 46 average loss: 0.0014\n","current epoch: 46 current accuracy: 0.9750 current AUC: 0.9825 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 47 average loss: 0.0026\n","----------\n","epoch 48 average loss: 0.0013\n","current epoch: 48 current accuracy: 0.9750 current AUC: 0.9836 best accuracy: 0.9875 at epoch 26\n","----------\n","epoch 49 average loss: 0.0007\n","----------\n","epoch 50 average loss: 0.0007\n","current epoch: 50 current accuracy: 0.9750 current AUC: 0.9806 best accuracy: 0.9875 at epoch 26\n","train completed, best_metric: 0.9875 at epoch: 26\n","              precision    recall  f1-score   support\n","\n","        SMCI     0.9756    1.0000    0.9877        40\n","          AD     1.0000    0.9750    0.9873        40\n","\n","    accuracy                         0.9875        80\n","   macro avg     0.9878    0.9875    0.9875        80\n","weighted avg     0.9878    0.9875    0.9875        80\n","\n"]}],"source":["# start a typical PyTorch training\n","val_interval = 2\n","best_metric = -1\n","best_metric_epoch = -1\n","writer = SummaryWriter()\n","for epoch in range(50):\n","    print(\"-\" * 10)\n","    #print(f\"epoch {epoch + 1}/{5}\")\n","    model.train()\n","    epoch_loss = 0\n","    step = 0\n","    for batch_data in train_loader:\n","        step += 1\n","        inputs, labels = batch_data[\"img\"].to(device), batch_data[\"label\"].to(device)\n","        optimizer.zero_grad()\n","        outputs = model(inputs.unsqueeze(1))\n","        loss = loss_function(outputs, labels)\n","        loss.backward()\n","        optimizer.step()\n","        epoch_loss += loss.item()\n","        epoch_len = len(train_ds) // train_loader.batch_size\n","        #print(f\"{step}/{epoch_len}, train_loss: {loss.item():.4f}\")\n","        writer.add_scalar(\"train_loss\", loss.item(), epoch_len * epoch + step)\n","    epoch_loss /= step\n","    print(f\"epoch {epoch + 1} average loss: {epoch_loss:.4f}\")\n","    #epoch_loss_values.append(epoch_loss)\n","    \n","    if (epoch + 1) % val_interval == 0:\n","        model.eval()\n","        with torch.no_grad():\n","            y_pred = torch.tensor([], dtype=torch.float32, device=device)\n","            y = torch.tensor([], dtype=torch.long, device=device)\n","            for val_data in valid_loader:\n","                val_images, val_labels = val_data[\"img\"].to(device), val_data[\"label\"].to(device)\n","                y_pred = torch.cat([y_pred, model(val_images.unsqueeze(1))], dim=0)\n","                y = torch.cat([y, val_labels], dim=0)\n","\n","            acc_value = torch.eq(y_pred.argmax(dim=1), y)\n","            acc_metric = acc_value.sum().item() / len(acc_value)\n","            y_onehot = [post_label(i) for i in decollate_batch(y)]\n","            y_pred_act = [post_pred(i) for i in decollate_batch(y_pred)]\n","            auc_metric(y_pred_act, y_onehot)\n","            auc_result = auc_metric.aggregate()\n","            auc_metric.reset()\n","            del y_pred_act, y_onehot\n","            if acc_metric > best_metric:\n","                A=y\n","                B=y_pred.argmax(dim=1)\n","                best_metric = acc_metric\n","                best_metric_epoch = epoch + 1\n","                torch.save(model.state_dict(), \"/content/drive/MyDrive/F2ENB1ADvsCNbest_metric_model_classification3d_dict.pth\")\n","                print(\"saved new best metric model\")\n","            print(\n","                \"current epoch: {} current accuracy: {:.4f} current AUC: {:.4f} best accuracy: {:.4f} at epoch {}\".format(\n","                    epoch + 1, acc_metric, auc_result, best_metric, best_metric_epoch\n","                )\n","            )\n","            writer.add_scalar(\"val_accuracy\", acc_metric, epoch + 1)\n","print(f\"train completed, best_metric: {best_metric:.4f} at epoch: {best_metric_epoch}\")\n","target_names = [\"SMCI\",\"AD\"]\n","print(classification_report(A.cpu(),B.cpu() ,target_names=target_names,digits=4))\n","writer.close()"]},{"cell_type":"code","execution_count":46,"metadata":{"id":"mpDXFptC5nzb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650284111213,"user_tz":-240,"elapsed":19,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}},"outputId":"8e07d004-4980-4c76-84e9-334302864195"},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","          CN     0.9756    1.0000    0.9877        40\n","          AD     1.0000    0.9750    0.9873        40\n","\n","    accuracy                         0.9875        80\n","   macro avg     0.9878    0.9875    0.9875        80\n","weighted avg     0.9878    0.9875    0.9875        80\n","\n"]}],"source":["target_names = [\"CN\",\"AD\"]\n","print(classification_report(A.cpu(),B.cpu() ,target_names=target_names,digits=4))\n","writer.close()"]},{"cell_type":"code","execution_count":47,"metadata":{"id":"3ZhBVE_wAU9P","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1650284111214,"user_tz":-240,"elapsed":16,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}},"outputId":"09a5b157-6c84-4d57-d9df-3636efadee11"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["fpr, tpr, _ = roc_curve(A.cpu(), B.cpu())\n","roc_auc = roc_auc_score(A.cpu(), B.cpu())\n","\n","plt.figure(1)\n","plt.plot([0, 1], [0, 1])\n","plt.plot(fpr, tpr, label=\"(Densenet area = {:.3f})\".format(roc_auc))\n","plt.xlabel(\"False positive rate\")\n","plt.ylabel(\"True positive rate\")\n","plt.title(\"ROC curve\")\n","plt.legend(loc=\"best\")\n","plt.show()"]},{"cell_type":"code","execution_count":48,"metadata":{"id":"19uw8D1vA4cn","colab":{"base_uri":"https://localhost:8080/","height":337},"executionInfo":{"status":"ok","timestamp":1650284111215,"user_tz":-240,"elapsed":15,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}},"outputId":"f38e4538-fa14-4ac9-fe72-657ec4629829"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["cmat = confusion_matrix(A.cpu(),B.cpu())\n","\n","ax = sns.heatmap(cmat, annot=True, cmap='Blues')\n","\n","ax.set_title('Confusion Matrix \\n\\n');\n","ax.set_xlabel('\\nPredicted Values')\n","ax.set_ylabel('Actual Values ');\n","\n","## Ticket labels - List must be in alphabetical order\n","ax.xaxis.set_ticklabels(['False','True'])\n","ax.yaxis.set_ticklabels(['False','True'])\n","\n","## Display the visualization of the Confusion Matrix.\n","plt.show()\n"]},{"cell_type":"code","execution_count":49,"metadata":{"id":"1LD5Doaqqonh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650284111889,"user_tz":-240,"elapsed":687,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}},"outputId":"adc5a89b-714d-4c66-fd13-d1a58a84b7ba"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mon Apr 18 09:22:46 2022       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   76C    P0    46W /  70W |  11528MiB / 15109MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","+-----------------------------------------------------------------------------+\n"]}],"source":["!nvidia-smi "]},{"cell_type":"code","execution_count":50,"metadata":{"id":"pn5KWnRv7nhh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650284111890,"user_tz":-240,"elapsed":7,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}},"outputId":"23adee7a-167d-474d-9164-5b686d714df8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["EfficientNetBN(\n","  (_conv_stem): Conv3d(1, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), bias=False)\n","  (_conv_stem_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","  (_bn0): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_blocks): Sequential(\n","    (0): Sequential(\n","      (0): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=32, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(32, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(32, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (1): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=16, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(16, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(4, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(16, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (1): Sequential(\n","      (2): MBConvBlock(\n","        (_expand_conv): Conv3d(16, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=96, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(96, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(4, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(96, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (3): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (4): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (2): Sequential(\n","      (5): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 2, 1, 2, 1, 2), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 40, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (6): MBConvBlock(\n","        (_expand_conv): Conv3d(40, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(240, 240, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=240, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(240, 10, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(10, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(240, 40, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (7): MBConvBlock(\n","        (_expand_conv): Conv3d(40, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(240, 240, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=240, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(240, 10, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(10, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(240, 40, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (3): Sequential(\n","      (8): MBConvBlock(\n","        (_expand_conv): Conv3d(40, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(240, 240, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=240, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(240, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(240, 10, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(10, 240, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(240, 80, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (9): MBConvBlock(\n","        (_expand_conv): Conv3d(80, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(480, 480, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=480, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(480, 20, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(20, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(480, 80, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (10): MBConvBlock(\n","        (_expand_conv): Conv3d(80, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(480, 480, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=480, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(480, 20, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(20, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(480, 80, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (11): MBConvBlock(\n","        (_expand_conv): Conv3d(80, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(480, 480, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=480, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(480, 20, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(20, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(480, 80, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(80, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (4): Sequential(\n","      (12): MBConvBlock(\n","        (_expand_conv): Conv3d(80, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(480, 480, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=480, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(480, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(480, 20, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(20, 480, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(480, 112, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (13): MBConvBlock(\n","        (_expand_conv): Conv3d(112, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(672, 672, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=672, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(672, 28, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(28, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(672, 112, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (14): MBConvBlock(\n","        (_expand_conv): Conv3d(112, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(672, 672, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=672, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(672, 28, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(28, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(672, 112, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (15): MBConvBlock(\n","        (_expand_conv): Conv3d(112, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(672, 672, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=672, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(672, 28, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(28, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(672, 112, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (5): Sequential(\n","      (16): MBConvBlock(\n","        (_expand_conv): Conv3d(112, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(672, 672, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=672, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(672, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(672, 28, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(28, 672, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(672, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (17): MBConvBlock(\n","        (_expand_conv): Conv3d(192, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1152, 1152, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1152, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1152, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(48, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1152, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (18): MBConvBlock(\n","        (_expand_conv): Conv3d(192, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1152, 1152, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1152, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1152, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(48, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1152, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (19): MBConvBlock(\n","        (_expand_conv): Conv3d(192, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1152, 1152, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1152, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1152, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(48, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1152, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (20): MBConvBlock(\n","        (_expand_conv): Conv3d(192, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1152, 1152, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1152, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1152, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(48, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1152, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (6): Sequential(\n","      (21): MBConvBlock(\n","        (_expand_conv): Conv3d(192, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1152, 1152, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=1152, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(1152, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1152, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(48, 1152, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1152, 320, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(320, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (22): MBConvBlock(\n","        (_expand_conv): Conv3d(320, 1920, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1920, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1920, 1920, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=1920, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(1920, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1920, 80, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(80, 1920, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1920, 320, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(320, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","  )\n","  (_conv_head): Conv3d(320, 1280, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","  (_conv_head_padding): Identity()\n","  (_bn1): BatchNorm3d(1280, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_avg_pooling): AdaptiveAvgPool3d(output_size=1)\n","  (_dropout): Dropout(p=0.2, inplace=False)\n","  (_fc): Linear(in_features=1280, out_features=2, bias=True)\n","  (_swish): MemoryEfficientSwish()\n",")"]},"metadata":{},"execution_count":50}],"source":["model.load_state_dict(torch.load('/content/drive/MyDrive/F2ENB1ADvsCNbest_metric_model_classification3d_dict.pth'))\n","model.eval()"]},{"cell_type":"code","source":["y_true = list()\n","y_pred = list()\n","\n","with torch.no_grad():\n","    for test_data in test_loader:\n","        test_images, test_labels = test_data[\"img\"].to(device), test_data[\"label\"].to(device)\n","        pred = model(test_images.unsqueeze(1)).argmax(dim=1)\n","        y_true.append(test_labels.item())\n","        y_pred.append(pred.item())"],"metadata":{"id":"FsKU00OlEYYX","executionInfo":{"status":"ok","timestamp":1650284262989,"user_tz":-240,"elapsed":151102,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","execution_count":52,"metadata":{"id":"KW5rFKe3eOHg","executionInfo":{"status":"ok","timestamp":1650284280967,"user_tz":-240,"elapsed":17988,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["y_true = list()\n","y_pred = list()\n","\n","with torch.no_grad():\n","    for test_data in test_loader:\n","        test_images, test_labels = test_data[\"img\"].to(device), test_data[\"label\"].to(device)\n","        pred = model(test_images.unsqueeze(1)).argmax(dim=1)\n","        y_true.append(test_labels.item())\n","        y_pred.append(pred.item())"]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","target_names = [\"CN\",\"AD\"]\n","print(classification_report(y_true, y_pred,target_names=target_names,digits=4))"],"metadata":{"id":"Nj95_ruoFIAS","executionInfo":{"status":"ok","timestamp":1650284280967,"user_tz":-240,"elapsed":22,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}},"outputId":"e0fb877d-31bb-40de-b3e3-ebaf9700c33a","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","          CN     1.0000    0.6222    0.7671        45\n","          AD     0.7258    1.0000    0.8411        45\n","\n","    accuracy                         0.8111        90\n","   macro avg     0.8629    0.8111    0.8041        90\n","weighted avg     0.8629    0.8111    0.8041        90\n","\n"]}]},{"cell_type":"code","execution_count":54,"metadata":{"id":"tOKuCe3dg9T4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650284280968,"user_tz":-240,"elapsed":21,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}},"outputId":"69a38c6d-e1e7-485b-a6e5-24b1db7e5c26"},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","          CN     1.0000    0.6222    0.7671        45\n","          AD     0.7258    1.0000    0.8411        45\n","\n","    accuracy                         0.8111        90\n","   macro avg     0.8629    0.8111    0.8041        90\n","weighted avg     0.8629    0.8111    0.8041        90\n","\n"]}],"source":["from sklearn.metrics import classification_report\n","target_names = [\"CN\",\"AD\"]\n","print(classification_report(y_true, y_pred,target_names=target_names,digits=4))"]},{"cell_type":"code","execution_count":55,"metadata":{"id":"DvQSxBgIhIrO","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1650284280969,"user_tz":-240,"elapsed":19,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}},"outputId":"4adb0ab5-30ca-436a-9c6a-335a0268ad21"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["fpr, tpr, _ = roc_curve(y_true, y_pred)\n","roc_auc = roc_auc_score(y_true, y_pred)\n","\n","plt.figure(1)\n","plt.plot([0, 1], [0, 1])\n","plt.plot(fpr, tpr, label=\"(Densenet area = {:.3f})\".format(roc_auc))\n","plt.xlabel(\"False positive rate\")\n","plt.ylabel(\"True positive rate\")\n","plt.title(\"ROC curve\")\n","plt.legend(loc=\"best\")\n","plt.show()"]},{"cell_type":"code","execution_count":56,"metadata":{"id":"_Abw0aPbosFy","colab":{"base_uri":"https://localhost:8080/","height":337},"executionInfo":{"status":"ok","timestamp":1650284280970,"user_tz":-240,"elapsed":19,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}},"outputId":"0c0db432-c566-4b36-b46f-89cc235cfb68"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["cmat = confusion_matrix(y_true, y_pred)\n","\n","import seaborn as sns\n","\n","ax = sns.heatmap(cmat, annot=True, cmap='Blues')\n","\n","ax.set_title('Confusion Matrix CN-45[Label 0],AD-45[Label 1] \\n\\n');\n","ax.set_xlabel('\\nPredicted Values')\n","ax.set_ylabel('Actual Values ');\n","\n","## Ticket labels - List must be in alphabetical order\n","ax.xaxis.set_ticklabels(['False','True'])\n","ax.yaxis.set_ticklabels(['False','True'])\n","\n","## Display the visualization of the Confusion Matrix.\n","plt.show()\n"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":[],"machine_shape":"hm","name":"ENB1 Fold-2   AD vs CN","provenance":[{"file_id":"1eE8slTmwCJ5033wnVrc5-W_3kl2iuX2M","timestamp":1650275453555},{"file_id":"1xrjrfmHFgHmlH59oT7gwdmhK9A4Jzmnq","timestamp":1650254606194},{"file_id":"1wUU8oGY0A8oMGwZEpJiyjpDsIzVYuh4E","timestamp":1650220878544},{"file_id":"1jDGtnqGS8Aczg-zyZNGpF3QVKuynO6nf","timestamp":1650214828929},{"file_id":"1Uz9WP-CrrnkXZEy_tARR5eySNxhYP1UD","timestamp":1650167306214},{"file_id":"1yl08D9WJda9cSY1v3qJEwoqmjVzMGDVK","timestamp":1648382303992},{"file_id":"1W_VhzdsW0ev4YXUdlgWGQVc8FDui_-ti","timestamp":1648355843901},{"file_id":"1WwLS7IvoVpwP2K0cG9HF3BCfim5lWeE-","timestamp":1648347425085},{"file_id":"1aeCVSDGh-GOkorZ5Bl2btjFC2p_kK_k8","timestamp":1648314735073},{"file_id":"1BTjj-YH44tZrTF7rG6y4vREOqyiL3u5W","timestamp":1648302511310},{"file_id":"1jG_r7VUlaeHdfoqDiC5T--PwdnOGDpX7","timestamp":1648292499522},{"file_id":"15j8pYQmvG_UNAnP8JuGzfD8ex_6hxRns","timestamp":1648283104327},{"file_id":"1NE32ZVaen7rQzttzj3osZe7_nXN9QMOy","timestamp":1648201474639},{"file_id":"1TgopIX2tPaVjnXLqi3W4-d6UhVK8nPEJ","timestamp":1648127135930},{"file_id":"1-T7dnfNb8Ib2zGQgpjLivEO2VwMdetwr","timestamp":1648121625144},{"file_id":"1r1lUfWnsJxZnUUPhf_ThH0HE9YscvYcQ","timestamp":1648111248098},{"file_id":"1HYazkOl83bLXhAFo_z0e9UhhR7KIhCdV","timestamp":1648061718205},{"file_id":"10mbf3ronNevgSGamc8CjNo5VuCqaUpgz","timestamp":1648055036787},{"file_id":"1luKbRAAUC-f03yc4j610EoiAHppb68BS","timestamp":1648031793067},{"file_id":"1zP4rEG5G6l4zAqoJ_IZtldeR-Rf9vIAn","timestamp":1644428204089},{"file_id":"11yTaxC3PAGGBVoJ2ggBXxzwKfysLiMF3","timestamp":1644392976089},{"file_id":"1RWGGIVivPPJdbKNKUT_E241L8JQ5spxx","timestamp":1643956276368}],"mount_file_id":"1ipRJaW98-PBTmGmuNSGtSYYsGSywJpxq","authorship_tag":"ABX9TyOEv6Qxm8uReFc0X4fUSZ+j"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}