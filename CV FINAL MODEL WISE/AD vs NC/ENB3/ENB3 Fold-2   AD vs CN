{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"cUJl8Mw0QXoP"},"outputs":[],"source":["import torch\n","import os\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import roc_curve\n","from sklearn.metrics import roc_auc_score\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","import seaborn as sns\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3394,"status":"ok","timestamp":1650284808295,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"NYznFz4FMRll","outputId":"580aa230-6682-4132-e533-8cd1216be805"},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting monai\n","  Downloading monai-0.8.1-202202162213-py3-none-any.whl (721 kB)\n","\u001b[?25l\r\u001b[K     |▌                               | 10 kB 33.2 MB/s eta 0:00:01\r\u001b[K     |█                               | 20 kB 10.3 MB/s eta 0:00:01\r\u001b[K     |█▍                              | 30 kB 8.9 MB/s eta 0:00:01\r\u001b[K     |█▉                              | 40 kB 8.2 MB/s eta 0:00:01\r\u001b[K     |██▎                             | 51 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██▊                             | 61 kB 5.4 MB/s eta 0:00:01\r\u001b[K     |███▏                            | 71 kB 5.5 MB/s eta 0:00:01\r\u001b[K     |███▋                            | 81 kB 4.3 MB/s eta 0:00:01\r\u001b[K     |████                            | 92 kB 4.8 MB/s eta 0:00:01\r\u001b[K     |████▌                           | 102 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████                           | 112 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████▌                          | 122 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████                          | 133 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████▍                         | 143 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████▉                         | 153 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████▎                        | 163 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████▊                        | 174 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████▏                       | 184 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████▋                       | 194 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████                       | 204 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████▌                      | 215 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████                      | 225 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████▍                     | 235 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████                     | 245 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████▍                    | 256 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████▉                    | 266 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████▎                   | 276 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 286 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████▏                  | 296 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████▋                  | 307 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 317 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████▌                 | 327 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 337 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████▍                | 348 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████▉                | 358 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████▍               | 368 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████▉               | 378 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████▎              | 389 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 399 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████▏             | 409 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████▋             | 419 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 430 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 440 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 450 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████▍           | 460 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████▉           | 471 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 481 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▉          | 491 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▎         | 501 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▊         | 512 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 522 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▋        | 532 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 542 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▌       | 552 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 563 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 573 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▉      | 583 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▎     | 593 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▉     | 604 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▎    | 614 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▊    | 624 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 634 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▋   | 645 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 655 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▌  | 665 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 675 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 686 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▉ | 696 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▎| 706 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▊| 716 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 721 kB 5.2 MB/s \n","\u001b[?25hRequirement already satisfied: torch>=1.6 in /usr/local/lib/python3.7/dist-packages (from monai) (1.10.0+cu111)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from monai) (1.21.5)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.6->monai) (4.1.1)\n","Installing collected packages: monai\n","Successfully installed monai-0.8.1\n"]}],"source":["!pip install monai"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FlUxE75HMNqI"},"outputs":[],"source":["import monai\n","from monai.data import decollate_batch\n","from monai.metrics import ROCAUCMetric\n","from monai.transforms import ToTensord,EnsureType,LoadImaged\n","from monai.transforms import RandAffined,RandRotated,RandGaussianNoised,Activations, AddChanneld, AsDiscrete, Compose,RandRotate90d, Resized, ScaleIntensityd, EnsureTyped"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"P0aSwEwmleyT"},"outputs":[],"source":["x=np.full(160,1) # 1 means AD 160 processes MRI for Training"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1126,"status":"ok","timestamp":1650284811354,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"_Via2mzzs85z","outputId":"0519875d-11fc-42dc-ec75-081dbb7ed2a8"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/\n"]}],"source":["train_files={}\n","for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/'):\n","  if files:\n","    print(path)    "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"92KqzjRQgnJX"},"outputs":[],"source":[" images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD', f]) for f in files] "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZIUb-4BxmS4J"},"outputs":[],"source":[" train_files = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":974,"status":"ok","timestamp":1650284812326,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"2xRqG2ROpU2h","outputId":"87573a5c-afc1-4d3d-c1cc-90d109fe0287"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/\n"]}],"source":["train_files_sMCI={}\n","for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/'):\n","  if files:\n","    print(path)\n","   "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9ezb_wKbpcLb"},"outputs":[],"source":["images_sMCI = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN', f]) for f in files]\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"o5Ic7GYbl99W"},"outputs":[],"source":["y=np.full(160,0) # o means stable MCI "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A2Wmvm0VqGvC"},"outputs":[],"source":["train_files_sMCI = [{\"img\": img, \"label\": label} for img, label in zip(images_sMCI, y)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nu56u0jmn99m"},"outputs":[],"source":["train_files.extend(train_files_sMCI)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1650284812328,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"nXXjXi8moEfu","outputId":"f5ba7a39-aae8-4b5e-9202-6d8bdaff863f"},"outputs":[{"name":"stdout","output_type":"stream","text":["[{'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0619_MR_MPR-R__GradWarp__N3__Scaled_2_Br_20081001115218896_S15145_I118678.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0619_MR_MPR-R__GradWarp__N3__Scaled_Br_20070411125458928_S15145_I48617.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0816_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002102135862_S18402_I118984.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0816_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217005829488_S18402_I40731.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0938_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001115856421_S19852_I118685.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0938_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070219175406282_S19852_I40980.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0955_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001120235839_S20004_I118689.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_0955_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217013411002_S20004_I40754.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217030439623_S23128_I40817.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_003_S_0931_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070503165327269_S20051_I53390.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_003_S_1059_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070501173720913_S22300_I52816.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_003_S_1257_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070501172255698_S27340_I52790.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_005_S_0221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070910164745994_S11958_I72128.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_005_S_0814_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070923123111793_S18390_I74591.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_005_S_0929_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070923124929945_S19669_I74609.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070717180348670_S27673_I60417.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_006_S_0547_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070926110116880_S19779_I75279.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_006_S_0653_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070605122642054_S23255_I55948.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_007_S_0316_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001120625745_S12583_I118693.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_007_S_0316_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070118030943701_S12583_I36573.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_007_S_1248_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070713113209876_S25568_I59950.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_007_S_1304_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070713111105724_S26475_I59910.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070607134807952_S27414_I56319.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_009_S_1334_MR_MPR-R__GradWarp__N3__Scaled_Br_20070717182244238_S27423_I60434.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_009_S_1354_MR_MPR__GradWarp__N3__Scaled_Br_20070717183309825_S27634_I60443.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_2_Br_20081002102855696_S19638_I118990.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20070807153633938_S19638_I65597.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_2_Br_20081001122514861_S26117_I118707.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20070731163202385_S26117_I63349.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_011_S_0002_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070108225928642_S9107_I35475.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_011_S_0003_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061208111300610_S9127_I32237.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_011_S_0010_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061208114538147_S8800_I32270.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_011_S_0053_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070108231357675_S10064_I35486.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_011_S_0183_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061206183315171_S12000_I32003.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0689_MR_MPR-R____N3__Scaled_2_Br_20081001123144447_S16392_I118713.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0689_MR_MPR-R____N3__Scaled_Br_20080225093300703_S16392_I92398.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0712_MR_MPR____N3__Scaled_2_Br_20081001123034709_S16704_I118712.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0712_MR_MPR____N3__Scaled_Br_20080225093529482_S16704_I92401.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0720_MR_MPR____N3__Scaled_2_Br_20081001123253253_S17682_I118714.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0720_MR_MPR____N3__Scaled_Br_20080225174150688_S17682_I92529.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0803_MR_MPR____N3__Scaled_2_Br_20081001123507114_S19197_I118716.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_012_S_0803_MR_MPR____N3__Scaled_Br_20070711172746366_S19197_I59250.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_013_S_0592_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20071028192251104_S18419_I79144.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_013_S_0699_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070727182856171_S18366_I62650.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_013_S_0996_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426092308209_S22240_I51183.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_013_S_1161_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426171211057_S24399_I51485.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_013_S_1205_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426173828172_S25024_I51542.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070212231950856_S12402_I39620.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_014_S_1095_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070320181218511_S23323_I45740.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_016_S_0991_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070217023139686_S21737_I40794.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_016_S_1263_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070804134033886_S27303_I64622.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0286_MR_MPR____N3__Scaled_2_Br_20081001135113951_S12435_I118779.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0286_MR_MPR____N3__Scaled_Br_20070120013124801_S12435_I37007.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0335_MR_MPR____N3__Scaled_2_Br_20081008153133922_S14586_I119801.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0335_MR_MPR____N3__Scaled_Br_20070101214204431_S14586_I35009.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0633_MR_MPR-R____N3__Scaled_2_Br_20081010112443772_S15573_I120057.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0633_MR_MPR-R____N3__Scaled_Br_20070101222816515_S15573_I35036.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0682_MR_MPR____N3__Scaled_2_Br_20081008153234434_S16293_I119802.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_018_S_0682_MR_MPR____N3__Scaled_Br_20070101224115510_S16293_I35044.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_020_S_0213_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070718120158728_S12386_I60600.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20061217125152228_S12836_I33444.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_021_S_0642_MR_MPR__GradWarp__N3__Scaled_Br_20061217130526879_S15935_I33452.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20061217132116005_S17580_I33461.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_021_S_1109_MR_MPR__GradWarp__N3__Scaled_Br_20070727185946236_S23446_I62695.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_022_S_0007_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712142439074_S9024_I59366.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712152611314_S11485_I59484.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_022_S_0219_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712154620604_S12375_I59533.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_022_S_0543_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712155153926_S14849_I59543.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0083_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001153941224_S10568_I118874.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0083_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061130194138457_S10568_I31143.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0084_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100834283_S10764_I118970.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0084_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061201102044695_S10764_I31205.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0093_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100757991_S10736_I118969.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0139_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100910505_S11079_I118971.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0139_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061201144502375_S11079_I31300.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0916_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001154252419_S19228_I118879.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_0916_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061203142844438_S19228_I31533.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001160410209_S26314_I118923.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070727133707675_S26314_I62433.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_1289_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001160534628_S26374_I118925.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_023_S_1289_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080207172946284_S26374_I89938.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_024_S_1171_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731172208570_S24659_I63406.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_024_S_1307_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731173131780_S27061_I63415.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_0404_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061222194841960_S13866_I34204.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_0850_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070412191003564_S18554_I48996.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_1081_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070327152141858_S25357_I47168.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_1082_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070327161431010_S22938_I47204.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070327165452524_S25764_I47228.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_027_S_1385_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070330094058546_S28133_I47574.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_029_S_0836_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070806122937449_S18151_I65013.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_029_S_0999_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070805144703422_S23248_I64898.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070718151433161_S22977_I60741.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_029_S_1184_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070812143109046_S25463_I67210.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_031_S_0321_MR_MPR__GradWarp__N3__Scaled_Br_20070807093706127_S12365_I65383.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_031_S_0554_MR_MPR-R__GradWarp__N3__Scaled_Br_20070804144512116_S14904_I64711.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_031_S_1209_MR_MPR__GradWarp__N3__Scaled_Br_20070813153725713_S25028_I67441.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_2_Br_20081003100226549_S11186_I119079.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20070123192754258_S11186_I37210.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_0400_MR_MPR____N3__Scaled_2_Br_20081003101339687_S13238_I119087.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_0400_MR_MPR____N3__Scaled_Br_20070118000329335_S13238_I36459.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_1037_MR_MPR____N3__Scaled_2_Br_20081003104216708_S22208_I119114.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_1101_MR_MPR____N3__Scaled_2_Br_20081003104506735_S22783_I119116.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_032_S_1101_MR_MPR____N3__Scaled_Br_20070731180142730_S22783_I63442.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003121149525_S17337_I119128.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070303125222238_S17337_I42400.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0733_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003121546031_S16932_I119132.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0733_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070303133222445_S16932_I42425.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003121834902_S16956_I119135.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070304110859078_S16956_I42441.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_0889_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070426183239887_S19296_I51629.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_1281_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070517161803030_S26136_I54780.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070517162231894_S26144_I54785.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_1285_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426175923899_S26128_I51588.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_033_S_1308_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070517160021095_S26600_I54752.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_035_S_0341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070319175003745_S12952_I45213.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_036_S_0577_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070119233126708_S14974_I36914.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_036_S_0759_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070120004026768_S18094_I36969.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070209144410346_S18264_I38652.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_036_S_1001_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070209145840163_S22691_I38661.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_037_S_0627_MR_MPR__GradWarp__N3__Scaled_Br_20071030172722998_S16313_I79831.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070806164945601_S27512_I65248.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_041_S_1391_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070730182830112_S29116_I62933.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_041_S_1435_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20071029192425510_S39186_I79636.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_051_S_1296_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070628165536504_S26431_I58022.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_053_S_1044_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003142251021_S21256_I119175.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_053_S_1044_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070802192148921_S21256_I64203.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_057_S_0474_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061229153747701_S13990_I34720.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070730190858034_S28667_I62998.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_057_S_1373_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070730191448410_S28698_I63008.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_057_S_1379_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070730191813596_S28761_I63014.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424112744977_S14699_I50426.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_062_S_0690_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424115325478_S16924_I50468.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_062_S_0730_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424120556863_S17062_I50487.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424123729148_S18189_I50524.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0029_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003155128312_S9904_I119180.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0029_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070209160613449_S9904_I38717.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0076_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003155813843_S10468_I119190.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0076_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070111012139914_S10468_I35911.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0110_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003160054331_S11177_I119194.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0828_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003161047536_S18532_I119205.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_0828_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070807174227674_S18532_I65716.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_1185_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731111102788_S24635_I63104.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_067_S_1253_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070522143031075_S27558_I55033.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_2_Br_20081212141712788_S10772_I130231.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20070731181048264_S10772_I63454.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_068_S_1191_MR_MPR____N3__Scaled_Br_20071103125754305_S25451_I80645.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_073_S_0565_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006105531714_S15762_I119234.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_073_S_0565_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070213213329963_S15762_I39919.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_082_S_0304_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006113122746_S12557_I119236.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_082_S_0761_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006113707423_S18119_I119244.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_082_S_1079_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070418082140556_S22650_I49490.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_082_S_1377_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070731115515322_S28495_I63170.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1027_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070418084102408_S21207_I49527.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1090_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731120023063_S23375_I63176.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1102_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731121241229_S22905_I63186.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070812144323362_S23871_I67223.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1397_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080307104443256_S31011_I95662.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_094_S_1402_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070808191131320_S32102_I66078.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_098_S_0149_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080206083054086_S11021_I89429.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/AD/ADNI_098_S_0884_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070605153002130_S24183_I56026.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI053-Guys-0727-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI051-HH-1328-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI058-Guys-0726-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI055-Guys-0730-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI054-Guys-0707-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI056-HH-1327-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI057-HH-1342-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI060-Guys-0709-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI062-Guys-0740-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI063-Guys-0742-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI061-Guys-0715-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI059-HH-1284-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI064-Guys-0743-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI065-Guys-0744-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI066-Guys-0731-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI070-Guys-0767-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI067-HH-1356-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI069-Guys-0769-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI072-HH-2324-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI068-Guys-0756-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI073-Guys-0755-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI074-Guys-0771-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI075-Guys-0754-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI076-Guys-0753-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI071-Guys-0770-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI077-Guys-0752-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI085-Guys-0759-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI078-Guys-0751-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI079-HH-1388-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI080-HH-1341-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI081-Guys-0855-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI087-Guys-0768-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI083-HH-1357-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI088-Guys-0758-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI084-Guys-0741-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI086-Guys-0728-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI089-Guys-0757-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI090-Guys-0800-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI091-Guys-0762-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI092-HH-1436-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI136-HH-1452-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI138-Guys-0746-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI137-HH-1472-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI141-Guys-0789-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI139-Guys-0815-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI140-Guys-0787-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI144-Guys-0788-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI145-Guys-0781-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI142-Guys-0786-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI143-Guys-0785-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI146-HH-1389-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI148-HH-1453-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI150-HH-1550-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI151-Guys-0793-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI153-Guys-0782-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI158-Guys-0783-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI154-Guys-0821-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI157-Guys-0816-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI160-HH-1637-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI156-Guys-0837-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI161-HH-2533-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI163-HH-1621-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI159-HH-1549-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI164-Guys-0844-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI162-HH-1548-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI165-HH-1589-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI166-Guys-0846-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI167-HH-1569-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI175-HH-1570-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI176-HH-1604-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI169-Guys-0842-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI172-Guys-0982-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI168-HH-1607-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI170-Guys-0843-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI173-HH-1590-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI174-HH-1571-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI177-Guys-0831-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI178-Guys-0778-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI179-Guys-0777-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI180-HH-1605-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI184-Guys-0794-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI182-Guys-0792-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI189-Guys-0799-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI188-Guys-0798-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI181-Guys-0790-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI186-Guys-0796-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI185-Guys-0795-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI183-Guys-0791-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI191-Guys-0801-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI193-Guys-0810-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI192-Guys-0878-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI194-Guys-0818-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI196-Guys-0805-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI197-Guys-0811-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI198-Guys-0803-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI195-HH-1620-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI201-HH-1588-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI204-HH-1651-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI202-HH-1526-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI199-Guys-0802-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI200-Guys-0812-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI205-HH-1649-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI206-HH-1650-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI207-Guys-0809-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI209-Guys-0804-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI208-Guys-0808-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI210-Guys-0856-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI211-HH-1568-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI214-HH-1636-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI212-HH-1643-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI217-HH-1638-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI216-HH-1635-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI213-HH-1642-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI219-Guys-0894-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI218-HH-1815-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI223-Guys-0830-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI224-Guys-0823-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI221-HH-1606-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI222-Guys-0819-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI225-Guys-0832-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI002-Guys-0828-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI014-HH-1236-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI015-HH-1258-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI012-HH-1211-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI013-HH-1212-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI016-Guys-0697-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI020-Guys-0700-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI019-Guys-0702-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI024-Guys-0705-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI021-Guys-0703-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI017-Guys-0698-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI026-Guys-0696-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI027-Guys-0710-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI025-Guys-0852-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI028-Guys-1038-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI023-Guys-0699-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI029-Guys-0829-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI031-Guys-0797-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI030-Guys-0708-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI034-HH-1260-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI022-Guys-0701-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI035-IOP-0873-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI033-HH-1259-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI037-Guys-0704-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI036-Guys-0736-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI038-Guys-0729-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI039-HH-1261-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI040-Guys-0724-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI041-Guys-0706-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI042-Guys-0725-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI044-Guys-0712-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI043-Guys-0714-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI046-Guys-0824-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI045-Guys-0713-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI050-Guys-0711-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI049-HH-1358-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI052-HH-1343-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI048-HH-1326-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI230-IOP-0869-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-2 DATA/Train/CN/IXI231-IOP-0866-T1.nii.gz', 'label': 0}]\n"]}],"source":["print(train_files)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_-tQmulsLAFi"},"outputs":[],"source":["  train_transforms = Compose(\n","        [\n","            LoadImaged(keys=[\"img\"]),\n","            #AddChanneld(keys=[\"img\"]),\n","            #RandAffined(keys=['img'], prob=0.5, translate_range=10), \n","            #RandRotated(keys=['img'], prob=0.6, range_x=10.0),\n","            #RandGaussianNoised(keys='img', prob=0.5),\n","            #ToTensord(keys=[\"img\"]),\n","        ]\n","    )"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"w2dtOA-uRVYG"},"outputs":[],"source":["post_pred = Compose([EnsureType(), Activations(softmax=True)])\n","post_label = Compose([EnsureType(), AsDiscrete(to_onehot=2)])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LwPcqiDsUBkD"},"outputs":[],"source":["from torch.utils.data import DataLoader\n","from torch.utils.tensorboard import SummaryWriter"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N4Mqm0grS1EO"},"outputs":[],"source":["#check_ds = monai.data.Dataset(data=train_files, transform=train_transforms)\n","#check_loader = DataLoader(check_ds, batch_size=4, num_workers=4, pin_memory=torch.cuda.is_available())\n","#check_data = monai.utils.misc.first(check_loader)\n","#print(check_data[\"img\"].shape, check_data[\"label\"])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iVsZ9Mx6oeN7"},"outputs":[],"source":["# create a training data loader\n","train_ds = monai.data.Dataset(data=train_files, transform=train_transforms)\n","train_loader = DataLoader(train_ds, batch_size=2, shuffle=True, num_workers=4, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1650284812834,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"coRjr9lk0pip","outputId":"39e6e649-4d64-41bf-8b62-832b2478e573"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/AD/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/AD/'):\n","  if files:\n","    print(path)    "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Bb1UmOqp2Mzo"},"outputs":[],"source":["x=np.full(40,1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"U1t6ApKc3z3C"},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/AD', f]) for f in files] "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cZFZIBmE4diO"},"outputs":[],"source":["valid_files = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":318,"status":"ok","timestamp":1650284813148,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"j3ruNdWQ6efP","outputId":"1c919ec9-c9f0-431d-91e6-8eaf330c6139"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/CN/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/CN/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CPeztrsB6k-V"},"outputs":[],"source":["x=np.full(40,0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Zwshfucp6pey"},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-2 DATA/Valid/CN', f]) for f in files] "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tTnjUbZW6yuZ"},"outputs":[],"source":["valid_files_sMCI = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZxDNtMH97eOE"},"outputs":[],"source":["valid_files.extend(valid_files_sMCI)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"U5VuoLnM7pfM"},"outputs":[],"source":["#check_ds = monai.data.Dataset(data=valid_files, transform=train_transforms)\n","#check_loader = DataLoader(check_ds, batch_size=8, num_workers=4, pin_memory=torch.cuda.is_available())\n","#check_data = monai.utils.misc.first(check_loader)\n","#print(check_data[\"img\"].shape, check_data[\"label\"])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qVKSOKbw7296"},"outputs":[],"source":["# create a validation data loader\n","valid_ds = monai.data.Dataset(data=valid_files, transform=train_transforms)\n","valid_loader = DataLoader(valid_ds, batch_size=2,shuffle=True,num_workers=4, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":746,"status":"ok","timestamp":1650284813892,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"w59RYjFHM4s9","outputId":"4da5bd51-a5fa-4cbc-aec2-da4adc8db2b7"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PxrcqmvMNAi9"},"outputs":[],"source":["x=np.full(45,1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"50fO8lN-NNXk"},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD', f]) for f in files] "]},{"cell_type":"markdown","metadata":{"id":"HHl3YGjoqFhG"},"source":[""]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1650284813894,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"BhuE2IwePDBJ","outputId":"cfcab32b-1ad6-4d09-a1dd-9df1ca192d2b"},"outputs":[{"name":"stdout","output_type":"stream","text":["['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_0938_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081104151647760_S58211_I125155.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081224104711856_S60832_I132197.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_0221_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080501163219594_S49279_I104489.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090701135215664_S65452_I147406.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721101114129_S67376_I149749.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20100105142259322_S58426_I162100.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20090227152103934_S62987_I137223.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080516095357795_S49746_I105878.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_016_S_0991_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721103719643_S66595_I149771.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20080515114721734_S49511_I105737.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20090127130302490_S57137_I134624.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080229153509900_S45881_I94405.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_0084_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080224132527438_S44784_I92169.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090512151630340_S64537_I143676.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1082_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081229144920056_S60862_I132368.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090316152042654_S63689_I139062.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090223154912775_S61415_I136737.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20080421171040104_S47745_I103333.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081023111433234_S55321_I123024.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081026130730923_S56031_I123722.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317134835050_S63547_I139235.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1308_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317140629096_S63613_I139266.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081028132916623_S57028_I124258.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090513123110219_S64654_I143723.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514101747514_S66427_I143792.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1379_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514103130382_S66419_I143815.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702154348870_S51763_I112301.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0730_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081023151703543_S54793_I123220.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081230153105872_S60719_I132424.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_067_S_0076_MR_MPR__GradWarp__N3__Scaled_Br_20090113143434713_S57777_I133486.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20080414160306136_S47738_I102511.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_073_S_0565_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081027091402842_S55114_I123926.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217155439187_S62803_I136220.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_098_S_0149_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080223171535343_S44911_I91891.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_099_S_1144_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090204190508382_S62245_I135299.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_109_S_1157_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20091214142720527_S65805_I160876.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_116_S_0370_MR_MPR__GradWarp__N3__Scaled_Br_20080522134715771_S49840_I106529.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0091_MR_MPR____N3__Scaled_Br_20080223174718151_S44614_I91935.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0094_MR_MPR-R____N3__Scaled_Br_20080223175253233_S44624_I91942.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_0891_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081027142509323_S56885_I124156.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_1221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217161856142_S62792_I136241.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_0844_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081209113459069_S60062_I129620.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_1382_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090721114554064_S66581_I149834.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0457_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702162258576_S51679_I112366.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0497_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081024092147063_S53628_I123416.nii']\n"]}],"source":["print(images)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UbezDmYZNdU-"},"outputs":[],"source":["test_files= [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1650284813895,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"bBuIqGtpnS8V","outputId":"4b456956-3bae-4d67-eb91-f741401967a6"},"outputs":[{"data":{"text/plain":["[{'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_0938_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081104151647760_S58211_I125155.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081224104711856_S60832_I132197.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_0221_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080501163219594_S49279_I104489.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090701135215664_S65452_I147406.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721101114129_S67376_I149749.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20100105142259322_S58426_I162100.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20090227152103934_S62987_I137223.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080516095357795_S49746_I105878.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_016_S_0991_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721103719643_S66595_I149771.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20080515114721734_S49511_I105737.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20090127130302490_S57137_I134624.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080229153509900_S45881_I94405.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_0084_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080224132527438_S44784_I92169.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090512151630340_S64537_I143676.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1082_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081229144920056_S60862_I132368.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090316152042654_S63689_I139062.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090223154912775_S61415_I136737.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20080421171040104_S47745_I103333.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081023111433234_S55321_I123024.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081026130730923_S56031_I123722.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317134835050_S63547_I139235.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1308_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317140629096_S63613_I139266.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081028132916623_S57028_I124258.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090513123110219_S64654_I143723.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514101747514_S66427_I143792.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1379_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514103130382_S66419_I143815.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702154348870_S51763_I112301.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0730_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081023151703543_S54793_I123220.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081230153105872_S60719_I132424.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_067_S_0076_MR_MPR__GradWarp__N3__Scaled_Br_20090113143434713_S57777_I133486.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20080414160306136_S47738_I102511.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_073_S_0565_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081027091402842_S55114_I123926.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217155439187_S62803_I136220.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_098_S_0149_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080223171535343_S44911_I91891.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_099_S_1144_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090204190508382_S62245_I135299.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_109_S_1157_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20091214142720527_S65805_I160876.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_116_S_0370_MR_MPR__GradWarp__N3__Scaled_Br_20080522134715771_S49840_I106529.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0091_MR_MPR____N3__Scaled_Br_20080223174718151_S44614_I91935.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0094_MR_MPR-R____N3__Scaled_Br_20080223175253233_S44624_I91942.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_0891_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081027142509323_S56885_I124156.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_1221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217161856142_S62792_I136241.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_0844_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081209113459069_S60062_I129620.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_1382_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090721114554064_S66581_I149834.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0457_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702162258576_S51679_I112366.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0497_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081024092147063_S53628_I123416.nii',\n","  'label': 1}]"]},"execution_count":35,"metadata":{},"output_type":"execute_result"}],"source":["test_files"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":547,"status":"ok","timestamp":1650284814437,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"BTX-NshNN67U","outputId":"b3f82456-c70b-449b-cdb3-56324df06a51"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"V3Mx0BFpOgxK"},"outputs":[],"source":["x=np.full(45,0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WNTSkpIjOj2w"},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN', f]) for f in files] "]},{"cell_type":"markdown","metadata":{"id":"vTGEiVvEJADY"},"source":[""]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1650284814438,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"Ozj2euWTPdpY","outputId":"11ee49ff-0dc8-4f9c-f519-f47db701c839"},"outputs":[{"name":"stdout","output_type":"stream","text":["['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI286-Guys-0859-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI287-Guys-0863-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI288-Guys-0879-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI289-Guys-0864-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI290-IOP-0874-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI291-IOP-0882-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI292-IOP-0877-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI293-IOP-0876-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI294-IOP-0868-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI295-HH-1814-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI296-HH-1970-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI297-Guys-0886-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI298-Guys-0861-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI299-Guys-0893-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI300-Guys-0880-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI302-HH-1883-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI303-IOP-0968-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI304-Guys-0862-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI305-IOP-0871-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI306-IOP-0867-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI307-IOP-0872-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI308-Guys-0884-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI309-IOP-0897-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI310-IOP-0890-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI311-Guys-0885-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI312-Guys-0887-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI313-HH-2241-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI314-IOP-0889-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI315-IOP-0888-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI316-HH-1862-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI317-Guys-0896-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI318-Guys-0895-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI319-Guys-0901-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI320-Guys-0902-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI321-Guys-0903-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI322-IOP-0891-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI324-Guys-0922-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI325-Guys-0911-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI326-Guys-0907-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI327-HH-1999-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI328-HH-2295-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI329-HH-1908-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI330-Guys-0881-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI332-IOP-1134-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI333-IOP-0926-T1.nii.gz']\n"]}],"source":["print(images)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"l-fmwiL9Pmdt"},"outputs":[],"source":["test_files_sMCI= [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OU_zrGhaPwJF"},"outputs":[],"source":["test_files.extend(test_files_sMCI)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BSkM4T7KP_9_"},"outputs":[],"source":["# create a test data loader\n","test_ds = monai.data.Dataset(data=test_files, transform=train_transforms)\n","test_loader = DataLoader(test_ds, batch_size=1, shuffle=True, num_workers=1, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0jRFNQcxJUOf"},"outputs":[],"source":["  from monai.networks.nets.efficientnet import EfficientNetBN\n","  device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","  model=EfficientNetBN(\"efficientnet-b3\",spatial_dims=3, in_channels=1, num_classes=2).to(device)\n","  #model = monai.networks.nets.DenseNet264(spatial_dims=3, in_channels=1, out_channels=2).to(device)\n","  loss_function = torch.nn.CrossEntropyLoss()\n","  optimizer = torch.optim.Adam(model.parameters(), 1e-4)\n","  auc_metric = ROCAUCMetric()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1650284822694,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"rfTuqU6DJbqG","outputId":"4e4d03f2-5954-4d16-8a5e-88030363782c"},"outputs":[{"name":"stdout","output_type":"stream","text":["<bound method Module.parameters of EfficientNetBN(\n","  (_conv_stem): Conv3d(1, 40, kernel_size=(3, 3, 3), stride=(2, 2, 2), bias=False)\n","  (_conv_stem_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","  (_bn0): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_blocks): Sequential(\n","    (0): Sequential(\n","      (0): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(40, 40, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=40, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(40, 10, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(10, 40, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(40, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (1): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(24, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=24, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(24, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(24, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (1): Sequential(\n","      (2): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (3): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (4): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (2): Sequential(\n","      (5): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (6): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (7): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (3): Sequential(\n","      (8): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (9): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (10): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (11): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (12): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (4): Sequential(\n","      (13): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (14): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (15): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (16): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (17): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (5): Sequential(\n","      (18): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (19): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (20): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (21): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (22): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (23): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (6): Sequential(\n","      (24): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 384, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (25): MBConvBlock(\n","        (_expand_conv): Conv3d(384, 2304, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(2304, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(2304, 2304, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=2304, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(2304, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(2304, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(96, 2304, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(2304, 384, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","  )\n","  (_conv_head): Conv3d(384, 1536, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","  (_conv_head_padding): Identity()\n","  (_bn1): BatchNorm3d(1536, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_avg_pooling): AdaptiveAvgPool3d(output_size=1)\n","  (_dropout): Dropout(p=0.3, inplace=False)\n","  (_fc): Linear(in_features=1536, out_features=2, bias=True)\n","  (_swish): MemoryEfficientSwish()\n",")>\n"]}],"source":["print(model.parameters)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"Ve31g7LaVSGl","outputId":"893706a1-9a2b-498e-df07-3881164814c1"},"outputs":[{"name":"stdout","output_type":"stream","text":["----------\n","epoch 1 average loss: 2.9236\n","----------\n","epoch 2 average loss: 2.1720\n","saved new best metric model\n","current epoch: 2 current accuracy: 0.5000 current AUC: 0.2425 best accuracy: 0.5000 at epoch 2\n","----------\n","epoch 3 average loss: 1.9572\n","----------\n","epoch 4 average loss: 1.4736\n","current epoch: 4 current accuracy: 0.5000 current AUC: 0.4992 best accuracy: 0.5000 at epoch 2\n","----------\n","epoch 5 average loss: 1.2120\n","----------\n","epoch 6 average loss: 0.6713\n","saved new best metric model\n","current epoch: 6 current accuracy: 0.5750 current AUC: 0.6075 best accuracy: 0.5750 at epoch 6\n","----------\n","epoch 7 average loss: 0.4791\n","----------\n","epoch 8 average loss: 0.5911\n","saved new best metric model\n","current epoch: 8 current accuracy: 0.8875 current AUC: 0.9002 best accuracy: 0.8875 at epoch 8\n","----------\n","epoch 9 average loss: 0.2695\n","----------\n","epoch 10 average loss: 0.2524\n","current epoch: 10 current accuracy: 0.8250 current AUC: 0.9267 best accuracy: 0.8875 at epoch 8\n","----------\n","epoch 11 average loss: 0.2465\n","----------\n","epoch 12 average loss: 0.1437\n","saved new best metric model\n","current epoch: 12 current accuracy: 0.9375 current AUC: 0.9644 best accuracy: 0.9375 at epoch 12\n","----------\n","epoch 13 average loss: 0.1344\n","----------\n","epoch 14 average loss: 0.2154\n","saved new best metric model\n","current epoch: 14 current accuracy: 0.9625 current AUC: 0.9938 best accuracy: 0.9625 at epoch 14\n","----------\n","epoch 15 average loss: 0.2028\n","----------\n","epoch 16 average loss: 0.3492\n","current epoch: 16 current accuracy: 0.5250 current AUC: 0.4783 best accuracy: 0.9625 at epoch 14\n","----------\n","epoch 17 average loss: 0.1529\n","----------\n","epoch 18 average loss: 0.1053\n","current epoch: 18 current accuracy: 0.9250 current AUC: 0.9731 best accuracy: 0.9625 at epoch 14\n","----------\n","epoch 19 average loss: 0.1557\n","----------\n","epoch 20 average loss: 0.0687\n","saved new best metric model\n","current epoch: 20 current accuracy: 0.9750 current AUC: 0.9975 best accuracy: 0.9750 at epoch 20\n","----------\n","epoch 21 average loss: 0.2093\n","----------\n","epoch 22 average loss: 0.1282\n","current epoch: 22 current accuracy: 0.8750 current AUC: 0.9675 best accuracy: 0.9750 at epoch 20\n","----------\n","epoch 23 average loss: 0.0345\n","----------\n","epoch 24 average loss: 0.0528\n","current epoch: 24 current accuracy: 0.8250 current AUC: 0.8688 best accuracy: 0.9750 at epoch 20\n","----------\n","epoch 25 average loss: 0.1157\n","----------\n","epoch 26 average loss: 0.1905\n","current epoch: 26 current accuracy: 0.8125 current AUC: 0.9762 best accuracy: 0.9750 at epoch 20\n","----------\n","epoch 27 average loss: 0.1978\n","----------\n","epoch 28 average loss: 0.1296\n","saved new best metric model\n","current epoch: 28 current accuracy: 0.9875 current AUC: 0.9988 best accuracy: 0.9875 at epoch 28\n","----------\n","epoch 29 average loss: 0.1422\n","----------\n","epoch 30 average loss: 0.0212\n","current epoch: 30 current accuracy: 0.9875 current AUC: 0.9988 best accuracy: 0.9875 at epoch 28\n","----------\n","epoch 31 average loss: 0.0170\n","----------\n","epoch 32 average loss: 0.0795\n","current epoch: 32 current accuracy: 0.9125 current AUC: 0.9500 best accuracy: 0.9875 at epoch 28\n","----------\n","epoch 33 average loss: 0.0926\n","----------\n","epoch 34 average loss: 0.0014\n","current epoch: 34 current accuracy: 0.9625 current AUC: 0.9975 best accuracy: 0.9875 at epoch 28\n","----------\n","epoch 35 average loss: 0.0017\n","----------\n","epoch 36 average loss: 0.0005\n","current epoch: 36 current accuracy: 0.9625 current AUC: 0.9975 best accuracy: 0.9875 at epoch 28\n","----------\n","epoch 37 average loss: 0.0129\n","----------\n","epoch 38 average loss: 0.0013\n","current epoch: 38 current accuracy: 0.9625 current AUC: 0.9906 best accuracy: 0.9875 at epoch 28\n","----------\n","epoch 39 average loss: 0.0688\n","----------\n","epoch 40 average loss: 0.2171\n","current epoch: 40 current accuracy: 0.9875 current AUC: 0.9981 best accuracy: 0.9875 at epoch 28\n","----------\n","epoch 41 average loss: 0.0227\n","----------\n","epoch 42 average loss: 0.0030\n","current epoch: 42 current accuracy: 0.9875 current AUC: 0.9994 best accuracy: 0.9875 at epoch 28\n","----------\n","epoch 43 average loss: 0.0011\n","----------\n","epoch 44 average loss: 0.0576\n","current epoch: 44 current accuracy: 0.9875 current AUC: 0.9873 best accuracy: 0.9875 at epoch 28\n","----------\n","epoch 45 average loss: 0.0938\n","----------\n","epoch 46 average loss: 0.1179\n","current epoch: 46 current accuracy: 0.9625 current AUC: 0.9881 best accuracy: 0.9875 at epoch 28\n","----------\n","epoch 47 average loss: 0.0136\n","----------\n","epoch 48 average loss: 0.1017\n","current epoch: 48 current accuracy: 0.9750 current AUC: 0.9831 best accuracy: 0.9875 at epoch 28\n","----------\n","epoch 49 average loss: 0.0572\n","----------\n","epoch 50 average loss: 0.0026\n","current epoch: 50 current accuracy: 0.9750 current AUC: 0.9956 best accuracy: 0.9875 at epoch 28\n","train completed, best_metric: 0.9875 at epoch: 28\n","              precision    recall  f1-score   support\n","\n","        SMCI     0.9756    1.0000    0.9877        40\n","          AD     1.0000    0.9750    0.9873        40\n","\n","    accuracy                         0.9875        80\n","   macro avg     0.9878    0.9875    0.9875        80\n","weighted avg     0.9878    0.9875    0.9875        80\n","\n"]}],"source":["# start a typical PyTorch training\n","val_interval = 2\n","best_metric = -1\n","best_metric_epoch = -1\n","writer = SummaryWriter()\n","for epoch in range(50):\n","    print(\"-\" * 10)\n","    #print(f\"epoch {epoch + 1}/{5}\")\n","    model.train()\n","    epoch_loss = 0\n","    step = 0\n","    for batch_data in train_loader:\n","        step += 1\n","        inputs, labels = batch_data[\"img\"].to(device), batch_data[\"label\"].to(device)\n","        optimizer.zero_grad()\n","        outputs = model(inputs.unsqueeze(1))\n","        loss = loss_function(outputs, labels)\n","        loss.backward()\n","        optimizer.step()\n","        epoch_loss += loss.item()\n","        epoch_len = len(train_ds) // train_loader.batch_size\n","        #print(f\"{step}/{epoch_len}, train_loss: {loss.item():.4f}\")\n","        writer.add_scalar(\"train_loss\", loss.item(), epoch_len * epoch + step)\n","    epoch_loss /= step\n","    print(f\"epoch {epoch + 1} average loss: {epoch_loss:.4f}\")\n","    #epoch_loss_values.append(epoch_loss)\n","    \n","    if (epoch + 1) % val_interval == 0:\n","        model.eval()\n","        with torch.no_grad():\n","            y_pred = torch.tensor([], dtype=torch.float32, device=device)\n","            y = torch.tensor([], dtype=torch.long, device=device)\n","            for val_data in valid_loader:\n","                val_images, val_labels = val_data[\"img\"].to(device), val_data[\"label\"].to(device)\n","                y_pred = torch.cat([y_pred, model(val_images.unsqueeze(1))], dim=0)\n","                y = torch.cat([y, val_labels], dim=0)\n","\n","            acc_value = torch.eq(y_pred.argmax(dim=1), y)\n","            acc_metric = acc_value.sum().item() / len(acc_value)\n","            y_onehot = [post_label(i) for i in decollate_batch(y)]\n","            y_pred_act = [post_pred(i) for i in decollate_batch(y_pred)]\n","            auc_metric(y_pred_act, y_onehot)\n","            auc_result = auc_metric.aggregate()\n","            auc_metric.reset()\n","            del y_pred_act, y_onehot\n","            if acc_metric > best_metric:\n","                A=y\n","                B=y_pred.argmax(dim=1)\n","                best_metric = acc_metric\n","                best_metric_epoch = epoch + 1\n","                torch.save(model.state_dict(), \"/content/drive/MyDrive/F2ENB3ADvsCNbest_metric_model_classification3d_dict.pth\")\n","                print(\"saved new best metric model\")\n","            print(\n","                \"current epoch: {} current accuracy: {:.4f} current AUC: {:.4f} best accuracy: {:.4f} at epoch {}\".format(\n","                    epoch + 1, acc_metric, auc_result, best_metric, best_metric_epoch\n","                )\n","            )\n","            writer.add_scalar(\"val_accuracy\", acc_metric, epoch + 1)\n","print(f\"train completed, best_metric: {best_metric:.4f} at epoch: {best_metric_epoch}\")\n","target_names = [\"SMCI\",\"AD\"]\n","print(classification_report(A.cpu(),B.cpu() ,target_names=target_names,digits=4))\n","writer.close()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"mpDXFptC5nzb","outputId":"1320379d-bdb1-4b80-85f8-9db1d85db348"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","          CN     0.9756    1.0000    0.9877        40\n","          AD     1.0000    0.9750    0.9873        40\n","\n","    accuracy                         0.9875        80\n","   macro avg     0.9878    0.9875    0.9875        80\n","weighted avg     0.9878    0.9875    0.9875        80\n","\n"]}],"source":["target_names = [\"CN\",\"AD\"]\n","print(classification_report(A.cpu(),B.cpu() ,target_names=target_names,digits=4))\n","writer.close()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"3ZhBVE_wAU9P","outputId":"f6872b0e-0f44-4a00-b4f6-61e13f62f6b0"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fpr, tpr, _ = roc_curve(A.cpu(), B.cpu())\n","roc_auc = roc_auc_score(A.cpu(), B.cpu())\n","\n","plt.figure(1)\n","plt.plot([0, 1], [0, 1])\n","plt.plot(fpr, tpr, label=\"(Densenet area = {:.3f})\".format(roc_auc))\n","plt.xlabel(\"False positive rate\")\n","plt.ylabel(\"True positive rate\")\n","plt.title(\"ROC curve\")\n","plt.legend(loc=\"best\")\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"19uw8D1vA4cn","outputId":"8c4933de-a93c-4fef-9cdd-0b7f7835a8a2"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["cmat = confusion_matrix(A.cpu(),B.cpu())\n","\n","ax = sns.heatmap(cmat, annot=True, cmap='Blues')\n","\n","ax.set_title('Confusion Matrix \\n\\n');\n","ax.set_xlabel('\\nPredicted Values')\n","ax.set_ylabel('Actual Values ');\n","\n","## Ticket labels - List must be in alphabetical order\n","ax.xaxis.set_ticklabels(['False','True'])\n","ax.yaxis.set_ticklabels(['False','True'])\n","\n","## Display the visualization of the Confusion Matrix.\n","plt.show()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"1LD5Doaqqonh","outputId":"2a5e7142-7ae8-4bba-8001-2dc87cef54cd"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mon Apr 18 11:59:22 2022       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   70C    P0    51W / 250W |  14099MiB / 16280MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","+-----------------------------------------------------------------------------+\n"]}],"source":["!nvidia-smi "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"pn5KWnRv7nhh","outputId":"744e662d-0dd4-4748-9786-6541cfc10b14"},"outputs":[{"data":{"text/plain":["EfficientNetBN(\n","  (_conv_stem): Conv3d(1, 40, kernel_size=(3, 3, 3), stride=(2, 2, 2), bias=False)\n","  (_conv_stem_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","  (_bn0): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_blocks): Sequential(\n","    (0): Sequential(\n","      (0): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(40, 40, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=40, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(40, 10, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(10, 40, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(40, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (1): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(24, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=24, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(24, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(24, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (1): Sequential(\n","      (2): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (3): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (4): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (2): Sequential(\n","      (5): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (6): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (7): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (3): Sequential(\n","      (8): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (9): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (10): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (11): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (12): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (4): Sequential(\n","      (13): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (14): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (15): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (16): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (17): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (5): Sequential(\n","      (18): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (19): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (20): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (21): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (22): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (23): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (6): Sequential(\n","      (24): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 384, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (25): MBConvBlock(\n","        (_expand_conv): Conv3d(384, 2304, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(2304, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(2304, 2304, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=2304, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(2304, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(2304, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(96, 2304, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(2304, 384, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","  )\n","  (_conv_head): Conv3d(384, 1536, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","  (_conv_head_padding): Identity()\n","  (_bn1): BatchNorm3d(1536, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_avg_pooling): AdaptiveAvgPool3d(output_size=1)\n","  (_dropout): Dropout(p=0.3, inplace=False)\n","  (_fc): Linear(in_features=1536, out_features=2, bias=True)\n","  (_swish): MemoryEfficientSwish()\n",")"]},"execution_count":null,"metadata":{},"output_type":"execute_result"}],"source":["model.load_state_dict(torch.load('/content/drive/MyDrive/F2ENB3ADvsCNbest_metric_model_classification3d_dict.pth'))\n","model.eval()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"FsKU00OlEYYX"},"outputs":[],"source":["y_true = list()\n","y_pred = list()\n","\n","with torch.no_grad():\n","    for test_data in test_loader:\n","        test_images, test_labels = test_data[\"img\"].to(device), test_data[\"label\"].to(device)\n","        pred = model(test_images.unsqueeze(1)).argmax(dim=1)\n","        y_true.append(test_labels.item())\n","        y_pred.append(pred.item())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"KW5rFKe3eOHg"},"outputs":[],"source":["y_true = list()\n","y_pred = list()\n","\n","with torch.no_grad():\n","    for test_data in test_loader:\n","        test_images, test_labels = test_data[\"img\"].to(device), test_data[\"label\"].to(device)\n","        pred = model(test_images.unsqueeze(1)).argmax(dim=1)\n","        y_true.append(test_labels.item())\n","        y_pred.append(pred.item())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Nj95_ruoFIAS","outputId":"d65824fa-578b-4774-c61a-be8c11c3b5f4"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","          CN     1.0000    0.6667    0.8000        45\n","          AD     0.7500    1.0000    0.8571        45\n","\n","    accuracy                         0.8333        90\n","   macro avg     0.8750    0.8333    0.8286        90\n","weighted avg     0.8750    0.8333    0.8286        90\n","\n"]}],"source":["from sklearn.metrics import classification_report\n","target_names = [\"CN\",\"AD\"]\n","print(classification_report(y_true, y_pred,target_names=target_names,digits=4))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"tOKuCe3dg9T4","outputId":"2a7ac6db-5bb2-4301-e81d-175faa59ad51"},"outputs":[{"name":"stdout","output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","          CN     1.0000    0.6667    0.8000        45\n","          AD     0.7500    1.0000    0.8571        45\n","\n","    accuracy                         0.8333        90\n","   macro avg     0.8750    0.8333    0.8286        90\n","weighted avg     0.8750    0.8333    0.8286        90\n","\n"]}],"source":["from sklearn.metrics import classification_report\n","target_names = [\"CN\",\"AD\"]\n","print(classification_report(y_true, y_pred,target_names=target_names,digits=4))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"DvQSxBgIhIrO","outputId":"aecf7525-d4d7-4406-8691-1a721391ac42"},"outputs":[{"data":{"image/png":"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gAGMGTOGunXrsmzZMh599FHmzJkDwN69e1m4cCEbN26kV69e9OvXj1mzZrF582aWL1+OqtKrVy8WLFjAsGHDiIqKYs2aNZlmHzduHGXKlCEpKYnWrVvTt29fypYtS2JiIm3btuXdd99lw4YNvPPOOyxatIjg4GAeffRRJkyYwN13381bb71FmTJlSE9Pp0uXLkRGRtKsWbMz1jFixAgmTJhwzro7duzIhx9+eMa83bt3U7169dPT1apVY/fu3ee89oMPPqB79+48++yzuFwuFi9efPq5qVOn8uKLLxIXF8f06dNPz9+1axc9e/YkJiaGESNGnC4epUuXJiUlhfj4eMqWvbR7nARWIVCFOUOgVA12h/flpS9WMP+fA7QMczeJq1PBmsQZPzjPX+7+cPDgQUqVyr71uftogdusWbOYNm0aI0eOBNzDX3fu3AlAly5dKFnSvYfcqFEjduzYQePGjdm6dSuPP/44PXv2pFu3bhw/fpzFixdz8803n37flJSU049vvPFGChQoQKNGjdi/f//p9c6aNYsWLVoAcPz4cTZv3kxYWFi22T/88EOmTp0KuD8oN2/eTNmyZQkKCqJv374A/Pnnn6xatYrWrVsD7nMmFSq4R/1NnDiRsWPHkpaWxt69e4mOjj6nEDz33HM899xz2ea4UJ988gnvv/8+ffv2ZeLEidx///3Mnj0bgD59+tCnTx8WLFjAK6+8cnp+9erViYyMZM+ePdx4443069ePihXdt7itUKECe/bsyd2FQER6AKOAIOAzVR121vOFga+AVkA8cKuqbvdboI3TYe8aFjV5gwGjlqDA4BsacVd7axJn8peiRYue96rm1atX07BhQ8BdFCZPnkz9+vXPWGbZsmUULlz49HRQUBBpaWmULl2atWvXMnPmTMaMGcPEiRP54IMPKFWqVJZ/xWd8n1NFSFV58cUXeeihh85Ydvv27VnmnjdvHrNnz2bJkiWEhITQuXPn09tapEgRgoKCTr/3Pffcw9ChQ894/bZt2xg5ciQrVqygdOnS9O/fP9Pv1YXsEVStWpV58+adno6NjaVz587nvPbLL79k1KhRANx888088MAD5yzTsWNHtm7dysGDBylXrtzp+VWqVKFJkyb89ddfpw+rJScnU7Ro0cy+TRfEb8dARCQIGA1cCzQCbheRRmctdj9wSFXrAO8D7/grDy4X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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fpr, tpr, _ = roc_curve(y_true, y_pred)\n","roc_auc = roc_auc_score(y_true, y_pred)\n","\n","plt.figure(1)\n","plt.plot([0, 1], [0, 1])\n","plt.plot(fpr, tpr, label=\"(Densenet area = {:.3f})\".format(roc_auc))\n","plt.xlabel(\"False positive rate\")\n","plt.ylabel(\"True positive rate\")\n","plt.title(\"ROC curve\")\n","plt.legend(loc=\"best\")\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"_Abw0aPbosFy","outputId":"f76d2d1f-7170-4c7f-fa38-820b8591827b"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["cmat = confusion_matrix(y_true, y_pred)\n","\n","import seaborn as sns\n","\n","ax = sns.heatmap(cmat, annot=True, cmap='Blues')\n","\n","ax.set_title('Confusion Matrix CN-45[Label 0],AD-45[Label 1] \\n\\n');\n","ax.set_xlabel('\\nPredicted Values')\n","ax.set_ylabel('Actual Values ');\n","\n","## Ticket labels - List must be in alphabetical order\n","ax.xaxis.set_ticklabels(['False','True'])\n","ax.yaxis.set_ticklabels(['False','True'])\n","\n","## Display the visualization of the Confusion Matrix.\n","plt.show()\n"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":[],"machine_shape":"hm","name":"ENB3 Fold-2   AD vs CN","provenance":[{"file_id":"1ipRJaW98-PBTmGmuNSGtSYYsGSywJpxq","timestamp":1650284633451},{"file_id":"1eE8slTmwCJ5033wnVrc5-W_3kl2iuX2M","timestamp":1650275453555},{"file_id":"1xrjrfmHFgHmlH59oT7gwdmhK9A4Jzmnq","timestamp":1650254606194},{"file_id":"1wUU8oGY0A8oMGwZEpJiyjpDsIzVYuh4E","timestamp":1650220878544},{"file_id":"1jDGtnqGS8Aczg-zyZNGpF3QVKuynO6nf","timestamp":1650214828929},{"file_id":"1Uz9WP-CrrnkXZEy_tARR5eySNxhYP1UD","timestamp":1650167306214},{"file_id":"1yl08D9WJda9cSY1v3qJEwoqmjVzMGDVK","timestamp":1648382303992},{"file_id":"1W_VhzdsW0ev4YXUdlgWGQVc8FDui_-ti","timestamp":1648355843901},{"file_id":"1WwLS7IvoVpwP2K0cG9HF3BCfim5lWeE-","timestamp":1648347425085},{"file_id":"1aeCVSDGh-GOkorZ5Bl2btjFC2p_kK_k8","timestamp":1648314735073},{"file_id":"1BTjj-YH44tZrTF7rG6y4vREOqyiL3u5W","timestamp":1648302511310},{"file_id":"1jG_r7VUlaeHdfoqDiC5T--PwdnOGDpX7","timestamp":1648292499522},{"file_id":"15j8pYQmvG_UNAnP8JuGzfD8ex_6hxRns","timestamp":1648283104327},{"file_id":"1NE32ZVaen7rQzttzj3osZe7_nXN9QMOy","timestamp":1648201474639},{"file_id":"1TgopIX2tPaVjnXLqi3W4-d6UhVK8nPEJ","timestamp":1648127135930},{"file_id":"1-T7dnfNb8Ib2zGQgpjLivEO2VwMdetwr","timestamp":1648121625144},{"file_id":"1r1lUfWnsJxZnUUPhf_ThH0HE9YscvYcQ","timestamp":1648111248098},{"file_id":"1HYazkOl83bLXhAFo_z0e9UhhR7KIhCdV","timestamp":1648061718205},{"file_id":"10mbf3ronNevgSGamc8CjNo5VuCqaUpgz","timestamp":1648055036787},{"file_id":"1luKbRAAUC-f03yc4j610EoiAHppb68BS","timestamp":1648031793067},{"file_id":"1zP4rEG5G6l4zAqoJ_IZtldeR-Rf9vIAn","timestamp":1644428204089},{"file_id":"11yTaxC3PAGGBVoJ2ggBXxzwKfysLiMF3","timestamp":1644392976089},{"file_id":"1RWGGIVivPPJdbKNKUT_E241L8JQ5spxx","timestamp":1643956276368}],"mount_file_id":"1LIkGKb421Y3SGWHpcvNhRQD-FozlJyCE","authorship_tag":"ABX9TyMXn8R/T80US2emNV7TFV+m"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}