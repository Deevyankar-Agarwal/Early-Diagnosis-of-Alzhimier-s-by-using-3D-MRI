{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"cUJl8Mw0QXoP","executionInfo":{"status":"ok","timestamp":1650530998651,"user_tz":-240,"elapsed":5929,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["import torch\n","import os\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import roc_curve\n","from sklearn.metrics import roc_auc_score\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","import seaborn as sns\n"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3715,"status":"ok","timestamp":1650531002354,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"NYznFz4FMRll","outputId":"49960293-dcae-442a-c2cb-11e758c86f04"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting monai\n","  Downloading monai-0.8.1-202202162213-py3-none-any.whl (721 kB)\n","\u001b[?25l\r\u001b[K     |▌                               | 10 kB 44.0 MB/s eta 0:00:01\r\u001b[K     |█                               | 20 kB 48.9 MB/s eta 0:00:01\r\u001b[K     |█▍                              | 30 kB 27.2 MB/s eta 0:00:01\r\u001b[K     |█▉                              | 40 kB 14.0 MB/s eta 0:00:01\r\u001b[K     |██▎                             | 51 kB 13.5 MB/s eta 0:00:01\r\u001b[K     |██▊                             | 61 kB 15.7 MB/s eta 0:00:01\r\u001b[K     |███▏                            | 71 kB 15.2 MB/s eta 0:00:01\r\u001b[K     |███▋                            | 81 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████                            | 92 kB 16.3 MB/s eta 0:00:01\r\u001b[K     |████▌                           | 102 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████                           | 112 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████▌                          | 122 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████                          | 133 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████▍                         | 143 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████▉                         | 153 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████▎                        | 163 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████▊                        | 174 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████▏                       | 184 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████▋                       | 194 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████                       | 204 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████▌                      | 215 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████                      | 225 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████▍                     | 235 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████                     | 245 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████▍                    | 256 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████▉                    | 266 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████▎                   | 276 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 286 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████████▏                  | 296 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████████▋                  | 307 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 317 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████████▌                 | 327 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 337 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████████▍                | 348 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████████▉                | 358 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████████▍               | 368 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████████▉               | 378 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████████████▎              | 389 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 399 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████████████▏             | 409 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████████████▋             | 419 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 430 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 440 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 450 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████████████▍           | 460 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████████████▉           | 471 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 481 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▉          | 491 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▎         | 501 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▊         | 512 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 522 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▋        | 532 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 542 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▌       | 552 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 563 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 573 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▉      | 583 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▎     | 593 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▉     | 604 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▎    | 614 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▊    | 624 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 634 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▋   | 645 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 655 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▌  | 665 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 675 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 686 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▉ | 696 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▎| 706 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▊| 716 kB 14.7 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 721 kB 14.7 MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from monai) (1.21.6)\n","Requirement already satisfied: torch>=1.6 in /usr/local/lib/python3.7/dist-packages (from monai) (1.10.0+cu111)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.6->monai) (4.1.1)\n","Installing collected packages: monai\n","Successfully installed monai-0.8.1\n"]}],"source":["!pip install monai"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"FlUxE75HMNqI","executionInfo":{"status":"ok","timestamp":1650531004036,"user_tz":-240,"elapsed":1690,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["import monai\n","from monai.data import decollate_batch\n","from monai.metrics import ROCAUCMetric\n","from monai.transforms import ToTensord,EnsureType,LoadImaged\n","from monai.transforms import RandAffined,RandRotated,RandGaussianNoised,Activations, AddChanneld, AsDiscrete, Compose,RandRotate90d, Resized, ScaleIntensityd, EnsureTyped"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"P0aSwEwmleyT","executionInfo":{"status":"ok","timestamp":1650531004038,"user_tz":-240,"elapsed":13,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(160,1) # 1 means AD 160 processes MRI for Training"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1606,"status":"ok","timestamp":1650531005633,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"_Via2mzzs85z","outputId":"e84579ee-3e8f-41f5-ad4e-83340d66de78"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/\n"]}],"source":["train_files={}\n","for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/'):\n","  if files:\n","    print(path)    "]},{"cell_type":"code","execution_count":6,"metadata":{"id":"92KqzjRQgnJX","executionInfo":{"status":"ok","timestamp":1650531005634,"user_tz":-240,"elapsed":13,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":[" images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD', f]) for f in files] "]},{"cell_type":"code","execution_count":7,"metadata":{"id":"ZIUb-4BxmS4J","executionInfo":{"status":"ok","timestamp":1650531005636,"user_tz":-240,"elapsed":13,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":[" train_files = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":507,"status":"ok","timestamp":1650531006132,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"2xRqG2ROpU2h","outputId":"ac4426d3-f683-4ac7-ac79-42b34b86161d"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/\n"]}],"source":["train_files_sMCI={}\n","for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/'):\n","  if files:\n","    print(path)\n","   "]},{"cell_type":"code","execution_count":9,"metadata":{"id":"9ezb_wKbpcLb","executionInfo":{"status":"ok","timestamp":1650531006133,"user_tz":-240,"elapsed":43,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images_sMCI = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN', f]) for f in files]\n"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"o5Ic7GYbl99W","executionInfo":{"status":"ok","timestamp":1650531006134,"user_tz":-240,"elapsed":42,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["y=np.full(160,0) # o means stable MCI "]},{"cell_type":"code","execution_count":11,"metadata":{"id":"A2Wmvm0VqGvC","executionInfo":{"status":"ok","timestamp":1650531006134,"user_tz":-240,"elapsed":40,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["train_files_sMCI = [{\"img\": img, \"label\": label} for img, label in zip(images_sMCI, y)]"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"nu56u0jmn99m","executionInfo":{"status":"ok","timestamp":1650531006135,"user_tz":-240,"elapsed":40,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["train_files.extend(train_files_sMCI)"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":39,"status":"ok","timestamp":1650531006136,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"nXXjXi8moEfu","outputId":"56c113bb-8f7b-46af-9220-7dd10dcf99e8"},"outputs":[{"output_type":"stream","name":"stdout","text":["[{'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0266_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007095334102_S12381_I119390.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0266_MR_MPR__GradWarp__N3__Scaled_Br_20070819154701884_S12381_I68898.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0272_MR_MPR__GradWarp__N3__Scaled_Br_20070819160811308_S12394_I68927.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0310_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007095729372_S12468_I119395.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0310_MR_MPR__GradWarp__N3__Scaled_Br_20070819162315993_S12468_I68944.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0517_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007100124596_S15001_I119399.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0517_MR_MPR__GradWarp__N3__Scaled_Br_20070819165258579_S15001_I68976.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0528_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007100403336_S14629_I119401.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0528_MR_MPR__GradWarp__N3__Scaled_Br_20070821191602878_S14629_I69679.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0740_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007101045669_S17472_I119406.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0740_MR_MPR__GradWarp__N3__Scaled_Br_20070819180306941_S17472_I69048.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_1409_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070821114304781_S33787_I69400.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_1430_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20071030174634532_S39199_I79857.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_130_S_0956_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070210221002388_S20667_I39185.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_130_S_1201_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070801182711594_S25082_I63757.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_130_S_1290_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070801183629045_S26038_I63766.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_130_S_1337_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070801184528226_S27584_I63775.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_131_S_0319_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070403131044669_S12322_I47984.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_131_S_0457_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080225093858034_S13976_I92406.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_131_S_0497_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070403140455408_S15315_I48038.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_131_S_0691_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070403141449754_S17266_I48047.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_133_S_0493_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081007152542589_S14156_I119503.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_133_S_1055_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008100559240_S22386_I119646.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_133_S_1170_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008101107947_S24674_I119651.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_133_S_1170_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080207174424754_S24674_I89957.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0194_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008133147404_S13178_I119717.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0194_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070215183625381_S13178_I40239.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0299_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008133944436_S13839_I119726.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0299_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070215202408595_S13839_I40312.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0300_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008134134874_S14136_I119728.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0300_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070215205110923_S14136_I40328.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0426_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008134327484_S14581_I119730.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0426_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070215211810806_S14581_I40356.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_137_S_0366_MR_MPR__GradWarp__N3__Scaled_Br_20070323161105797_S14199_I46608.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_137_S_0438_MR_MPR__GradWarp__N3__Scaled_Br_20070323162337393_S13764_I46615.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_137_S_0796_MR_MPR__GradWarp__N3__Scaled_Br_20080207175303986_S18077_I89979.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_137_S_0841_MR_MPR__GradWarp__N3__Scaled_Br_20070419175857278_S19351_I49776.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_137_S_1041_MR_MPR-R__GradWarp__N3__Scaled_Br_20070306190902216_S22310_I43071.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_141_S_0696_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20071119104836717_S18373_I82738.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_141_S_0790_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080220165919265_S18766_I91253.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0619_MR_MPR-R__GradWarp__N3__Scaled_2_Br_20081001115218896_S15145_I118678.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0619_MR_MPR-R__GradWarp__N3__Scaled_Br_20070411125458928_S15145_I48617.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0816_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002102135862_S18402_I118984.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0816_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217005829488_S18402_I40731.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0938_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001115856421_S19852_I118685.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0938_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070219175406282_S19852_I40980.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0955_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001120235839_S20004_I118689.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0955_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217013411002_S20004_I40754.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217030439623_S23128_I40817.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_003_S_0931_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070503165327269_S20051_I53390.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_003_S_1059_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070501173720913_S22300_I52816.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_003_S_1257_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070501172255698_S27340_I52790.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_005_S_0221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070910164745994_S11958_I72128.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_005_S_0814_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070923123111793_S18390_I74591.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_005_S_0929_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070923124929945_S19669_I74609.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070717180348670_S27673_I60417.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_006_S_0547_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070926110116880_S19779_I75279.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_006_S_0653_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070605122642054_S23255_I55948.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_007_S_0316_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001120625745_S12583_I118693.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_007_S_0316_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070118030943701_S12583_I36573.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_007_S_1248_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070713113209876_S25568_I59950.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_007_S_1304_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070713111105724_S26475_I59910.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070607134807952_S27414_I56319.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_009_S_1334_MR_MPR-R__GradWarp__N3__Scaled_Br_20070717182244238_S27423_I60434.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_009_S_1354_MR_MPR__GradWarp__N3__Scaled_Br_20070717183309825_S27634_I60443.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_2_Br_20081002102855696_S19638_I118990.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20070807153633938_S19638_I65597.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_2_Br_20081001122514861_S26117_I118707.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20070731163202385_S26117_I63349.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_011_S_0002_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070108225928642_S9107_I35475.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_011_S_0003_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061208111300610_S9127_I32237.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_011_S_0010_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061208114538147_S8800_I32270.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_011_S_0053_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070108231357675_S10064_I35486.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_011_S_0183_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061206183315171_S12000_I32003.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0689_MR_MPR-R____N3__Scaled_2_Br_20081001123144447_S16392_I118713.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0689_MR_MPR-R____N3__Scaled_Br_20080225093300703_S16392_I92398.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0712_MR_MPR____N3__Scaled_2_Br_20081001123034709_S16704_I118712.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0712_MR_MPR____N3__Scaled_Br_20080225093529482_S16704_I92401.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0720_MR_MPR____N3__Scaled_2_Br_20081001123253253_S17682_I118714.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0720_MR_MPR____N3__Scaled_Br_20080225174150688_S17682_I92529.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0803_MR_MPR____N3__Scaled_2_Br_20081001123507114_S19197_I118716.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0803_MR_MPR____N3__Scaled_Br_20070711172746366_S19197_I59250.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_013_S_0592_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20071028192251104_S18419_I79144.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_013_S_0699_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070727182856171_S18366_I62650.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_013_S_0996_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426092308209_S22240_I51183.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_013_S_1161_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426171211057_S24399_I51485.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_013_S_1205_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426173828172_S25024_I51542.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070212231950856_S12402_I39620.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_014_S_1095_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070320181218511_S23323_I45740.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_016_S_0991_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070217023139686_S21737_I40794.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_016_S_1263_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070804134033886_S27303_I64622.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0286_MR_MPR____N3__Scaled_2_Br_20081001135113951_S12435_I118779.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0286_MR_MPR____N3__Scaled_Br_20070120013124801_S12435_I37007.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0335_MR_MPR____N3__Scaled_2_Br_20081008153133922_S14586_I119801.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0335_MR_MPR____N3__Scaled_Br_20070101214204431_S14586_I35009.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0633_MR_MPR-R____N3__Scaled_2_Br_20081010112443772_S15573_I120057.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0633_MR_MPR-R____N3__Scaled_Br_20070101222816515_S15573_I35036.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0682_MR_MPR____N3__Scaled_2_Br_20081008153234434_S16293_I119802.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0682_MR_MPR____N3__Scaled_Br_20070101224115510_S16293_I35044.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_020_S_0213_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070718120158728_S12386_I60600.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20061217125152228_S12836_I33444.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_021_S_0642_MR_MPR__GradWarp__N3__Scaled_Br_20061217130526879_S15935_I33452.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20061217132116005_S17580_I33461.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_021_S_1109_MR_MPR__GradWarp__N3__Scaled_Br_20070727185946236_S23446_I62695.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_022_S_0007_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712142439074_S9024_I59366.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712152611314_S11485_I59484.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_022_S_0219_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712154620604_S12375_I59533.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_022_S_0543_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712155153926_S14849_I59543.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0083_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001153941224_S10568_I118874.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0083_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061130194138457_S10568_I31143.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0084_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100834283_S10764_I118970.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0084_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061201102044695_S10764_I31205.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0093_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100757991_S10736_I118969.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0139_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100910505_S11079_I118971.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0139_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061201144502375_S11079_I31300.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0916_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001154252419_S19228_I118879.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0916_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061203142844438_S19228_I31533.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001160410209_S26314_I118923.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070727133707675_S26314_I62433.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_1289_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001160534628_S26374_I118925.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070806164945601_S27512_I65248.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_041_S_1391_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070730182830112_S29116_I62933.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_041_S_1435_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20071029192425510_S39186_I79636.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_051_S_1296_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070628165536504_S26431_I58022.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_053_S_1044_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003142251021_S21256_I119175.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_053_S_1044_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070802192148921_S21256_I64203.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_057_S_0474_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061229153747701_S13990_I34720.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070730190858034_S28667_I62998.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_057_S_1373_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070730191448410_S28698_I63008.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_057_S_1379_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070730191813596_S28761_I63014.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424112744977_S14699_I50426.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_062_S_0690_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424115325478_S16924_I50468.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_062_S_0730_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424120556863_S17062_I50487.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424123729148_S18189_I50524.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0029_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003155128312_S9904_I119180.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0029_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070209160613449_S9904_I38717.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0076_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003155813843_S10468_I119190.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0076_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070111012139914_S10468_I35911.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0110_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003160054331_S11177_I119194.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0828_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003161047536_S18532_I119205.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0828_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070807174227674_S18532_I65716.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_1185_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731111102788_S24635_I63104.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_1253_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070522143031075_S27558_I55033.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_2_Br_20081212141712788_S10772_I130231.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20070731181048264_S10772_I63454.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_068_S_1191_MR_MPR____N3__Scaled_Br_20071103125754305_S25451_I80645.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_073_S_0565_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006105531714_S15762_I119234.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_073_S_0565_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070213213329963_S15762_I39919.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_082_S_0304_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006113122746_S12557_I119236.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_082_S_0761_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006113707423_S18119_I119244.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_082_S_1079_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070418082140556_S22650_I49490.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_082_S_1377_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070731115515322_S28495_I63170.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1027_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070418084102408_S21207_I49527.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1090_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731120023063_S23375_I63176.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1102_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731121241229_S22905_I63186.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070812144323362_S23871_I67223.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1397_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080307104443256_S31011_I95662.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1402_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070808191131320_S32102_I66078.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_098_S_0149_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080206083054086_S11021_I89429.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_098_S_0884_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070605153002130_S24183_I56026.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI093-HH-1359-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI094-HH-1355-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI095-HH-1390-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI096-HH-1391-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI097-HH-1619-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI098-Guys-0745-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI099-Guys-0748-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI100-Guys-0747-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI101-Guys-0749-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI102-HH-1416-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI103-Guys-0750-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI104-HH-1450-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI105-HH-1471-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI106-Guys-0760-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI107-Guys-0761-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI108-Guys-0865-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI109-Guys-0732-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI110-Guys-0733-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI111-Guys-0734-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI112-Guys-0735-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI113-Guys-0776-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI114-Guys-0737-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI115-Guys-0738-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI116-Guys-0739-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI117-Guys-0763-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI118-Guys-0764-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI119-Guys-0765-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI120-Guys-0766-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI121-Guys-0772-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI122-Guys-0773-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI123-Guys-0774-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI126-HH-1437-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI127-HH-1451-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI128-HH-1470-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI129-Guys-0775-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI130-HH-1528-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI131-HH-1527-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI132-HH-1415-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI134-Guys-0780-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI135-Guys-0779-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI136-HH-1452-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI137-HH-1472-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI138-Guys-0746-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI139-Guys-0815-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI140-Guys-0787-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI141-Guys-0789-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI142-Guys-0786-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI143-Guys-0785-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI144-Guys-0788-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI145-Guys-0781-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI146-HH-1389-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI148-HH-1453-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI150-HH-1550-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI151-Guys-0793-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI153-Guys-0782-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI154-Guys-0821-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI156-Guys-0837-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI157-Guys-0816-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI158-Guys-0783-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI159-HH-1549-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI160-HH-1637-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI161-HH-2533-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI162-HH-1548-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI163-HH-1621-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI164-Guys-0844-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI165-HH-1589-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI166-Guys-0846-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI167-HH-1569-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI168-HH-1607-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI169-Guys-0842-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI170-Guys-0843-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI172-Guys-0982-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI173-HH-1590-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI174-HH-1571-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI175-HH-1570-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI176-HH-1604-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI177-Guys-0831-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI178-Guys-0778-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI179-Guys-0777-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI180-HH-1605-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI181-Guys-0790-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI182-Guys-0792-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI183-Guys-0791-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI184-Guys-0794-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI185-Guys-0795-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI186-Guys-0796-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI188-Guys-0798-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI189-Guys-0799-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI191-Guys-0801-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI192-Guys-0878-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI193-Guys-0810-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI194-Guys-0818-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI195-HH-1620-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI196-Guys-0805-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI197-Guys-0811-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI198-Guys-0803-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI199-Guys-0802-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI200-Guys-0812-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI201-HH-1588-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI202-HH-1526-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI204-HH-1651-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI205-HH-1649-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI206-HH-1650-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI207-Guys-0809-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI208-Guys-0808-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI209-Guys-0804-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI210-Guys-0856-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI211-HH-1568-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI212-HH-1643-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI213-HH-1642-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI214-HH-1636-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI216-HH-1635-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI217-HH-1638-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI218-HH-1815-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI219-Guys-0894-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI221-HH-1606-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI222-Guys-0819-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI223-Guys-0830-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI224-Guys-0823-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI225-Guys-0832-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI002-Guys-0828-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI012-HH-1211-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI013-HH-1212-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI014-HH-1236-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI015-HH-1258-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI016-Guys-0697-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI017-Guys-0698-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI019-Guys-0702-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI020-Guys-0700-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI021-Guys-0703-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI022-Guys-0701-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI023-Guys-0699-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI024-Guys-0705-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI025-Guys-0852-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI026-Guys-0696-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI027-Guys-0710-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI028-Guys-1038-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI029-Guys-0829-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI030-Guys-0708-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI031-Guys-0797-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI033-HH-1259-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI034-HH-1260-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI035-IOP-0873-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI036-Guys-0736-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI037-Guys-0704-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI038-Guys-0729-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI039-HH-1261-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI040-Guys-0724-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI041-Guys-0706-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI042-Guys-0725-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI043-Guys-0714-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI044-Guys-0712-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI045-Guys-0713-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI046-Guys-0824-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI048-HH-1326-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI049-HH-1358-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI050-Guys-0711-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI052-HH-1343-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI230-IOP-0869-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI231-IOP-0866-T1.nii.gz', 'label': 0}]\n"]}],"source":["print(train_files)"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"_-tQmulsLAFi","executionInfo":{"status":"ok","timestamp":1650531006136,"user_tz":-240,"elapsed":29,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["  train_transforms = Compose(\n","        [\n","            LoadImaged(keys=[\"img\"]),\n","            #AddChanneld(keys=[\"img\"]),\n","            #RandAffined(keys=['img'], prob=0.5, translate_range=10), \n","            #RandRotated(keys=['img'], prob=0.6, range_x=10.0),\n","            #RandGaussianNoised(keys='img', prob=0.5),\n","            #ToTensord(keys=[\"img\"]),\n","        ]\n","    )"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"w2dtOA-uRVYG","executionInfo":{"status":"ok","timestamp":1650531006137,"user_tz":-240,"elapsed":28,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["post_pred = Compose([EnsureType(), Activations(softmax=True)])\n","post_label = Compose([EnsureType(), AsDiscrete(to_onehot=2)])\n"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"LwPcqiDsUBkD","executionInfo":{"status":"ok","timestamp":1650531006137,"user_tz":-240,"elapsed":27,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["from torch.utils.data import DataLoader\n","from torch.utils.tensorboard import SummaryWriter"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"N4Mqm0grS1EO","executionInfo":{"status":"ok","timestamp":1650531006138,"user_tz":-240,"elapsed":27,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["#check_ds = monai.data.Dataset(data=train_files, transform=train_transforms)\n","#check_loader = DataLoader(check_ds, batch_size=4, num_workers=4, pin_memory=torch.cuda.is_available())\n","#check_data = monai.utils.misc.first(check_loader)\n","#print(check_data[\"img\"].shape, check_data[\"label\"])\n"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"iVsZ9Mx6oeN7","executionInfo":{"status":"ok","timestamp":1650531006559,"user_tz":-240,"elapsed":3,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a training data loader\n","train_ds = monai.data.Dataset(data=train_files, transform=train_transforms)\n","train_loader = DataLoader(train_ds, batch_size=2, shuffle=True, num_workers=4, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":396,"status":"ok","timestamp":1650531006953,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"coRjr9lk0pip","outputId":"a2137428-161c-43b9-fa65-7d1c1d77117d"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/AD/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/AD/'):\n","  if files:\n","    print(path)    "]},{"cell_type":"code","execution_count":20,"metadata":{"id":"Bb1UmOqp2Mzo","executionInfo":{"status":"ok","timestamp":1650531006954,"user_tz":-240,"elapsed":6,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(40,1)"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"U1t6ApKc3z3C","executionInfo":{"status":"ok","timestamp":1650531006954,"user_tz":-240,"elapsed":5,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/AD', f]) for f in files] "]},{"cell_type":"code","execution_count":22,"metadata":{"id":"cZFZIBmE4diO","executionInfo":{"status":"ok","timestamp":1650531006955,"user_tz":-240,"elapsed":6,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":536,"status":"ok","timestamp":1650531007486,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"j3ruNdWQ6efP","outputId":"2d07121e-0673-4dac-bcda-70645e712303"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/CN/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/CN/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"CPeztrsB6k-V","executionInfo":{"status":"ok","timestamp":1650531007487,"user_tz":-240,"elapsed":11,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(40,0)"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"Zwshfucp6pey","executionInfo":{"status":"ok","timestamp":1650531007488,"user_tz":-240,"elapsed":11,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/CN', f]) for f in files] "]},{"cell_type":"code","execution_count":26,"metadata":{"id":"tTnjUbZW6yuZ","executionInfo":{"status":"ok","timestamp":1650531007489,"user_tz":-240,"elapsed":12,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files_sMCI = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"ZxDNtMH97eOE","executionInfo":{"status":"ok","timestamp":1650531007489,"user_tz":-240,"elapsed":11,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files.extend(valid_files_sMCI)"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"U5VuoLnM7pfM","executionInfo":{"status":"ok","timestamp":1650531007490,"user_tz":-240,"elapsed":11,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["#check_ds = monai.data.Dataset(data=valid_files, transform=train_transforms)\n","#check_loader = DataLoader(check_ds, batch_size=8, num_workers=4, pin_memory=torch.cuda.is_available())\n","#check_data = monai.utils.misc.first(check_loader)\n","#print(check_data[\"img\"].shape, check_data[\"label\"])"]},{"cell_type":"code","execution_count":29,"metadata":{"id":"qVKSOKbw7296","executionInfo":{"status":"ok","timestamp":1650531007491,"user_tz":-240,"elapsed":12,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a validation data loader\n","valid_ds = monai.data.Dataset(data=valid_files, transform=train_transforms)\n","valid_loader = DataLoader(valid_ds, batch_size=2,shuffle=True,num_workers=4, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":899,"status":"ok","timestamp":1650531008379,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"w59RYjFHM4s9","outputId":"96d12102-3ee7-4d97-844f-1b39165e45a8"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"PxrcqmvMNAi9","executionInfo":{"status":"ok","timestamp":1650531008380,"user_tz":-240,"elapsed":25,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(45,1)"]},{"cell_type":"code","execution_count":32,"metadata":{"id":"50fO8lN-NNXk","executionInfo":{"status":"ok","timestamp":1650531008381,"user_tz":-240,"elapsed":24,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD', f]) for f in files] "]},{"cell_type":"markdown","metadata":{"id":"HHl3YGjoqFhG"},"source":[""]},{"cell_type":"code","execution_count":33,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":23,"status":"ok","timestamp":1650531008381,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"BhuE2IwePDBJ","outputId":"07651afa-b0a8-4d48-92bc-31fcc0bc6e4f"},"outputs":[{"output_type":"stream","name":"stdout","text":["['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_0938_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081104151647760_S58211_I125155.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081224104711856_S60832_I132197.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_0221_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080501163219594_S49279_I104489.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090701135215664_S65452_I147406.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721101114129_S67376_I149749.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20100105142259322_S58426_I162100.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20090227152103934_S62987_I137223.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080516095357795_S49746_I105878.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_016_S_0991_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721103719643_S66595_I149771.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20080515114721734_S49511_I105737.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20090127130302490_S57137_I134624.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080229153509900_S45881_I94405.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_0084_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080224132527438_S44784_I92169.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090512151630340_S64537_I143676.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1082_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081229144920056_S60862_I132368.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090316152042654_S63689_I139062.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090223154912775_S61415_I136737.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20080421171040104_S47745_I103333.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081023111433234_S55321_I123024.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081026130730923_S56031_I123722.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317134835050_S63547_I139235.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1308_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317140629096_S63613_I139266.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081028132916623_S57028_I124258.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090513123110219_S64654_I143723.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514101747514_S66427_I143792.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1379_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514103130382_S66419_I143815.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702154348870_S51763_I112301.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0730_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081023151703543_S54793_I123220.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081230153105872_S60719_I132424.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_067_S_0076_MR_MPR__GradWarp__N3__Scaled_Br_20090113143434713_S57777_I133486.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20080414160306136_S47738_I102511.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_073_S_0565_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081027091402842_S55114_I123926.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217155439187_S62803_I136220.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_098_S_0149_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080223171535343_S44911_I91891.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_099_S_1144_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090204190508382_S62245_I135299.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_109_S_1157_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20091214142720527_S65805_I160876.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_116_S_0370_MR_MPR__GradWarp__N3__Scaled_Br_20080522134715771_S49840_I106529.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0091_MR_MPR____N3__Scaled_Br_20080223174718151_S44614_I91935.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0094_MR_MPR-R____N3__Scaled_Br_20080223175253233_S44624_I91942.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_0891_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081027142509323_S56885_I124156.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_1221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217161856142_S62792_I136241.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_0844_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081209113459069_S60062_I129620.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_1382_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090721114554064_S66581_I149834.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0457_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702162258576_S51679_I112366.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0497_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081024092147063_S53628_I123416.nii']\n"]}],"source":["print(images)"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"UbezDmYZNdU-","executionInfo":{"status":"ok","timestamp":1650531008382,"user_tz":-240,"elapsed":17,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files= [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1650531008383,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"bBuIqGtpnS8V","outputId":"33e8a88c-9b55-44f8-ea80-c515507d6dd1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_0938_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081104151647760_S58211_I125155.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081224104711856_S60832_I132197.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_0221_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080501163219594_S49279_I104489.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090701135215664_S65452_I147406.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721101114129_S67376_I149749.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20100105142259322_S58426_I162100.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20090227152103934_S62987_I137223.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080516095357795_S49746_I105878.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_016_S_0991_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721103719643_S66595_I149771.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20080515114721734_S49511_I105737.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20090127130302490_S57137_I134624.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080229153509900_S45881_I94405.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_0084_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080224132527438_S44784_I92169.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090512151630340_S64537_I143676.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1082_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081229144920056_S60862_I132368.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090316152042654_S63689_I139062.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090223154912775_S61415_I136737.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20080421171040104_S47745_I103333.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081023111433234_S55321_I123024.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081026130730923_S56031_I123722.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317134835050_S63547_I139235.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1308_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317140629096_S63613_I139266.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081028132916623_S57028_I124258.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090513123110219_S64654_I143723.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514101747514_S66427_I143792.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1379_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514103130382_S66419_I143815.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702154348870_S51763_I112301.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0730_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081023151703543_S54793_I123220.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081230153105872_S60719_I132424.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_067_S_0076_MR_MPR__GradWarp__N3__Scaled_Br_20090113143434713_S57777_I133486.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20080414160306136_S47738_I102511.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_073_S_0565_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081027091402842_S55114_I123926.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217155439187_S62803_I136220.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_098_S_0149_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080223171535343_S44911_I91891.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_099_S_1144_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090204190508382_S62245_I135299.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_109_S_1157_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20091214142720527_S65805_I160876.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_116_S_0370_MR_MPR__GradWarp__N3__Scaled_Br_20080522134715771_S49840_I106529.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0091_MR_MPR____N3__Scaled_Br_20080223174718151_S44614_I91935.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0094_MR_MPR-R____N3__Scaled_Br_20080223175253233_S44624_I91942.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_0891_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081027142509323_S56885_I124156.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_1221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217161856142_S62792_I136241.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_0844_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081209113459069_S60062_I129620.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_1382_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090721114554064_S66581_I149834.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0457_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702162258576_S51679_I112366.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0497_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081024092147063_S53628_I123416.nii',\n","  'label': 1}]"]},"metadata":{},"execution_count":35}],"source":["test_files"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":472,"status":"ok","timestamp":1650531008848,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"BTX-NshNN67U","outputId":"f5e8c77c-eb14-49bb-96f5-99e56f3e276a"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":37,"metadata":{"id":"V3Mx0BFpOgxK","executionInfo":{"status":"ok","timestamp":1650531008849,"user_tz":-240,"elapsed":30,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(45,0)"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"WNTSkpIjOj2w","executionInfo":{"status":"ok","timestamp":1650531008850,"user_tz":-240,"elapsed":29,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN', f]) for f in files] "]},{"cell_type":"markdown","metadata":{"id":"vTGEiVvEJADY"},"source":[""]},{"cell_type":"code","execution_count":39,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":29,"status":"ok","timestamp":1650531008851,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"Ozj2euWTPdpY","outputId":"9854b06a-4324-476a-ab09-b4693820cf36"},"outputs":[{"output_type":"stream","name":"stdout","text":["['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI286-Guys-0859-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI287-Guys-0863-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI288-Guys-0879-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI289-Guys-0864-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI290-IOP-0874-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI291-IOP-0882-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI292-IOP-0877-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI293-IOP-0876-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI294-IOP-0868-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI295-HH-1814-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI296-HH-1970-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI297-Guys-0886-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI298-Guys-0861-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI299-Guys-0893-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI300-Guys-0880-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI302-HH-1883-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI303-IOP-0968-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI304-Guys-0862-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI305-IOP-0871-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI306-IOP-0867-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI307-IOP-0872-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI308-Guys-0884-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI309-IOP-0897-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI310-IOP-0890-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI311-Guys-0885-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI312-Guys-0887-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI313-HH-2241-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI314-IOP-0889-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI315-IOP-0888-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI316-HH-1862-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI317-Guys-0896-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI318-Guys-0895-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI319-Guys-0901-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI320-Guys-0902-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI321-Guys-0903-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI322-IOP-0891-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI324-Guys-0922-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI325-Guys-0911-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI326-Guys-0907-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI327-HH-1999-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI328-HH-2295-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI329-HH-1908-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI330-Guys-0881-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI332-IOP-1134-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI333-IOP-0926-T1.nii.gz']\n"]}],"source":["print(images)"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"l-fmwiL9Pmdt","executionInfo":{"status":"ok","timestamp":1650531008851,"user_tz":-240,"elapsed":21,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files_sMCI= [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":41,"metadata":{"id":"OU_zrGhaPwJF","executionInfo":{"status":"ok","timestamp":1650531008852,"user_tz":-240,"elapsed":21,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files.extend(test_files_sMCI)"]},{"cell_type":"code","execution_count":42,"metadata":{"id":"BSkM4T7KP_9_","executionInfo":{"status":"ok","timestamp":1650531008852,"user_tz":-240,"elapsed":19,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a test data loader\n","test_ds = monai.data.Dataset(data=test_files, transform=train_transforms)\n","test_loader = DataLoader(test_ds, batch_size=1, shuffle=True, num_workers=1, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":43,"metadata":{"id":"0jRFNQcxJUOf","executionInfo":{"status":"ok","timestamp":1650531017822,"user_tz":-240,"elapsed":8987,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["  from monai.networks.nets.efficientnet import EfficientNetBN\n","  device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","  model=EfficientNetBN(\"efficientnet-b3\",spatial_dims=3, in_channels=1, num_classes=2).to(device)\n","  #model = monai.networks.nets.DenseNet264(spatial_dims=3, in_channels=1, out_channels=2).to(device)\n","  loss_function = torch.nn.CrossEntropyLoss()\n","  optimizer = torch.optim.Adam(model.parameters(), 1e-4)\n","  auc_metric = ROCAUCMetric()"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1650531017822,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"rfTuqU6DJbqG","outputId":"6eef3393-1566-4be4-8b35-9c77fd465a01"},"outputs":[{"output_type":"stream","name":"stdout","text":["<bound method Module.parameters of EfficientNetBN(\n","  (_conv_stem): Conv3d(1, 40, kernel_size=(3, 3, 3), stride=(2, 2, 2), bias=False)\n","  (_conv_stem_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","  (_bn0): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_blocks): Sequential(\n","    (0): Sequential(\n","      (0): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(40, 40, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=40, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(40, 10, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(10, 40, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(40, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (1): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(24, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=24, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(24, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(24, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (1): Sequential(\n","      (2): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (3): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (4): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (2): Sequential(\n","      (5): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (6): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (7): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (3): Sequential(\n","      (8): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (9): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (10): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (11): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (12): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (4): Sequential(\n","      (13): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (14): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (15): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (16): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (17): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (5): Sequential(\n","      (18): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (19): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (20): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (21): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (22): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (23): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (6): Sequential(\n","      (24): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 384, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (25): MBConvBlock(\n","        (_expand_conv): Conv3d(384, 2304, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(2304, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(2304, 2304, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=2304, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(2304, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(2304, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(96, 2304, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(2304, 384, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","  )\n","  (_conv_head): Conv3d(384, 1536, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","  (_conv_head_padding): Identity()\n","  (_bn1): BatchNorm3d(1536, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_avg_pooling): AdaptiveAvgPool3d(output_size=1)\n","  (_dropout): Dropout(p=0.3, inplace=False)\n","  (_fc): Linear(in_features=1536, out_features=2, bias=True)\n","  (_swish): MemoryEfficientSwish()\n",")>\n"]}],"source":["print(model.parameters)"]},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ve31g7LaVSGl","outputId":"095bbe29-3dc7-4883-a2c5-4db81dd05d7c","executionInfo":{"status":"ok","timestamp":1650539703557,"user_tz":-240,"elapsed":8685740,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["----------\n","epoch 1 average loss: 3.0187\n","----------\n","epoch 2 average loss: 1.9751\n","saved new best metric model\n","current epoch: 2 current accuracy: 0.5000 current AUC: 0.9238 best accuracy: 0.5000 at epoch 2\n","----------\n","epoch 3 average loss: 1.8979\n","----------\n","epoch 4 average loss: 1.2812\n","saved new best metric model\n","current epoch: 4 current accuracy: 0.5625 current AUC: 0.8750 best accuracy: 0.5625 at epoch 4\n","----------\n","epoch 5 average loss: 0.9656\n","----------\n","epoch 6 average loss: 0.4392\n","saved new best metric model\n","current epoch: 6 current accuracy: 0.7625 current AUC: 0.6298 best accuracy: 0.7625 at epoch 6\n","----------\n","epoch 7 average loss: 0.4386\n","----------\n","epoch 8 average loss: 0.3838\n","saved new best metric model\n","current epoch: 8 current accuracy: 0.8000 current AUC: 0.9888 best accuracy: 0.8000 at epoch 8\n","----------\n","epoch 9 average loss: 0.2363\n","----------\n","epoch 10 average loss: 0.3702\n","saved new best metric model\n","current epoch: 10 current accuracy: 0.9125 current AUC: 0.9400 best accuracy: 0.9125 at epoch 10\n","----------\n","epoch 11 average loss: 0.4871\n","----------\n","epoch 12 average loss: 0.1927\n","current epoch: 12 current accuracy: 0.7750 current AUC: 0.7937 best accuracy: 0.9125 at epoch 10\n","----------\n","epoch 13 average loss: 0.2788\n","----------\n","epoch 14 average loss: 0.0319\n","current epoch: 14 current accuracy: 0.8500 current AUC: 0.9419 best accuracy: 0.9125 at epoch 10\n","----------\n","epoch 15 average loss: 0.0743\n","----------\n","epoch 16 average loss: 0.1875\n","current epoch: 16 current accuracy: 0.8750 current AUC: 0.8831 best accuracy: 0.9125 at epoch 10\n","----------\n","epoch 17 average loss: 0.0437\n","----------\n","epoch 18 average loss: 0.1249\n","current epoch: 18 current accuracy: 0.8125 current AUC: 0.9569 best accuracy: 0.9125 at epoch 10\n","----------\n","epoch 19 average loss: 0.1408\n","----------\n","epoch 20 average loss: 0.1061\n","current epoch: 20 current accuracy: 0.9125 current AUC: 0.9956 best accuracy: 0.9125 at epoch 10\n","----------\n","epoch 21 average loss: 0.0395\n","----------\n","epoch 22 average loss: 0.1470\n","current epoch: 22 current accuracy: 0.7625 current AUC: 0.8403 best accuracy: 0.9125 at epoch 10\n","----------\n","epoch 23 average loss: 0.0826\n","----------\n","epoch 24 average loss: 0.0082\n","saved new best metric model\n","current epoch: 24 current accuracy: 0.9875 current AUC: 0.9969 best accuracy: 0.9875 at epoch 24\n","----------\n","epoch 25 average loss: 0.1731\n","----------\n","epoch 26 average loss: 0.1363\n","current epoch: 26 current accuracy: 0.8125 current AUC: 0.9075 best accuracy: 0.9875 at epoch 24\n","----------\n","epoch 27 average loss: 0.2864\n","----------\n","epoch 28 average loss: 0.0528\n","current epoch: 28 current accuracy: 0.9625 current AUC: 0.9931 best accuracy: 0.9875 at epoch 24\n","----------\n","epoch 29 average loss: 0.0032\n","----------\n","epoch 30 average loss: 0.0067\n","current epoch: 30 current accuracy: 0.8750 current AUC: 0.9781 best accuracy: 0.9875 at epoch 24\n","----------\n","epoch 31 average loss: 0.2879\n","----------\n","epoch 32 average loss: 0.0449\n","current epoch: 32 current accuracy: 0.9500 current AUC: 0.9969 best accuracy: 0.9875 at epoch 24\n","----------\n","epoch 33 average loss: 0.4408\n","----------\n","epoch 34 average loss: 0.2067\n","current epoch: 34 current accuracy: 0.8250 current AUC: 0.9838 best accuracy: 0.9875 at epoch 24\n","----------\n","epoch 35 average loss: 0.1059\n","----------\n","epoch 36 average loss: 0.0048\n","saved new best metric model\n","current epoch: 36 current accuracy: 1.0000 current AUC: 1.0000 best accuracy: 1.0000 at epoch 36\n","----------\n","epoch 37 average loss: 0.0018\n","----------\n","epoch 38 average loss: 0.0580\n","current epoch: 38 current accuracy: 0.9750 current AUC: 1.0000 best accuracy: 1.0000 at epoch 36\n","----------\n","epoch 39 average loss: 0.1424\n","----------\n","epoch 40 average loss: 0.0477\n","current epoch: 40 current accuracy: 0.9750 current AUC: 0.9988 best accuracy: 1.0000 at epoch 36\n","----------\n","epoch 41 average loss: 0.1562\n","----------\n","epoch 42 average loss: 0.0154\n","current epoch: 42 current accuracy: 0.9875 current AUC: 1.0000 best accuracy: 1.0000 at epoch 36\n","----------\n","epoch 43 average loss: 0.0024\n","----------\n","epoch 44 average loss: 0.0007\n","current epoch: 44 current accuracy: 0.9875 current AUC: 1.0000 best accuracy: 1.0000 at epoch 36\n","----------\n","epoch 45 average loss: 0.0125\n","----------\n","epoch 46 average loss: 0.0964\n","current epoch: 46 current accuracy: 1.0000 current AUC: 1.0000 best accuracy: 1.0000 at epoch 36\n","----------\n","epoch 47 average loss: 0.2288\n","----------\n","epoch 48 average loss: 0.1227\n","current epoch: 48 current accuracy: 0.9500 current AUC: 0.9975 best accuracy: 1.0000 at epoch 36\n","----------\n","epoch 49 average loss: 0.1299\n","----------\n","epoch 50 average loss: 0.0160\n","current epoch: 50 current accuracy: 0.9375 current AUC: 0.9712 best accuracy: 1.0000 at epoch 36\n","train completed, best_metric: 1.0000 at epoch: 36\n","              precision    recall  f1-score   support\n","\n","        SMCI     1.0000    1.0000    1.0000        40\n","          AD     1.0000    1.0000    1.0000        40\n","\n","    accuracy                         1.0000        80\n","   macro avg     1.0000    1.0000    1.0000        80\n","weighted avg     1.0000    1.0000    1.0000        80\n","\n"]}],"source":["# start a typical PyTorch training\n","val_interval = 2\n","best_metric = -1\n","best_metric_epoch = -1\n","writer = SummaryWriter()\n","for epoch in range(50):\n","    print(\"-\" * 10)\n","    #print(f\"epoch {epoch + 1}/{5}\")\n","    model.train()\n","    epoch_loss = 0\n","    step = 0\n","    for batch_data in train_loader:\n","        step += 1\n","        inputs, labels = batch_data[\"img\"].to(device), batch_data[\"label\"].to(device)\n","        optimizer.zero_grad()\n","        outputs = model(inputs.unsqueeze(1))\n","        loss = loss_function(outputs, labels)\n","        loss.backward()\n","        optimizer.step()\n","        epoch_loss += loss.item()\n","        epoch_len = len(train_ds) // train_loader.batch_size\n","        #print(f\"{step}/{epoch_len}, train_loss: {loss.item():.4f}\")\n","        writer.add_scalar(\"train_loss\", loss.item(), epoch_len * epoch + step)\n","    epoch_loss /= step\n","    print(f\"epoch {epoch + 1} average loss: {epoch_loss:.4f}\")\n","    #epoch_loss_values.append(epoch_loss)\n","    \n","    if (epoch + 1) % val_interval == 0:\n","        model.eval()\n","        with torch.no_grad():\n","            y_pred = torch.tensor([], dtype=torch.float32, device=device)\n","            y = torch.tensor([], dtype=torch.long, device=device)\n","            for val_data in valid_loader:\n","                val_images, val_labels = val_data[\"img\"].to(device), val_data[\"label\"].to(device)\n","                y_pred = torch.cat([y_pred, model(val_images.unsqueeze(1))], dim=0)\n","                y = torch.cat([y, val_labels], dim=0)\n","\n","            acc_value = torch.eq(y_pred.argmax(dim=1), y)\n","            acc_metric = acc_value.sum().item() / len(acc_value)\n","            y_onehot = [post_label(i) for i in decollate_batch(y)]\n","            y_pred_act = [post_pred(i) for i in decollate_batch(y_pred)]\n","            auc_metric(y_pred_act, y_onehot)\n","            auc_result = auc_metric.aggregate()\n","            auc_metric.reset()\n","            del y_pred_act, y_onehot\n","            if acc_metric > best_metric:\n","                A=y\n","                B=y_pred.argmax(dim=1)\n","                best_metric = acc_metric\n","                best_metric_epoch = epoch + 1\n","                torch.save(model.state_dict(), \"/content/drive/MyDrive/F5ENB3ADvsCNbest_metric_model_classification3d_dict.pth\")\n","                print(\"saved new best metric model\")\n","            print(\n","                \"current epoch: {} current accuracy: {:.4f} current AUC: {:.4f} best accuracy: {:.4f} at epoch {}\".format(\n","                    epoch + 1, acc_metric, auc_result, best_metric, best_metric_epoch\n","                )\n","            )\n","            writer.add_scalar(\"val_accuracy\", acc_metric, epoch + 1)\n","print(f\"train completed, best_metric: {best_metric:.4f} at epoch: {best_metric_epoch}\")\n","target_names = [\"SMCI\",\"AD\"]\n","print(classification_report(A.cpu(),B.cpu() ,target_names=target_names,digits=4))\n","writer.close()"]},{"cell_type":"code","execution_count":46,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mpDXFptC5nzb","outputId":"9fe6293c-5a0d-42d4-ea0a-78b854206c00","executionInfo":{"status":"ok","timestamp":1650539703558,"user_tz":-240,"elapsed":41,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","          CN     1.0000    1.0000    1.0000        40\n","          AD     1.0000    1.0000    1.0000        40\n","\n","    accuracy                         1.0000        80\n","   macro avg     1.0000    1.0000    1.0000        80\n","weighted avg     1.0000    1.0000    1.0000        80\n","\n"]}],"source":["target_names = [\"CN\",\"AD\"]\n","print(classification_report(A.cpu(),B.cpu() ,target_names=target_names,digits=4))\n","writer.close()"]},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"3ZhBVE_wAU9P","outputId":"08ccd087-cbd0-4ffe-8788-e425121d0f63","executionInfo":{"status":"ok","timestamp":1650539703559,"user_tz":-240,"elapsed":26,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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IIDc3Fxq167NqlWrWLhwIW+++SYzZ87klVdeoVatWsV+iy+4nWNJSFV56KGHuOOOO/7StuAgamGLFi3i22+/5bfffiMoKIhevXodP9Zq1aodHxNRVW699Vaee+65v7x/8+bNvPDCCyxdupTatWszbNiwIn9WnugRNGnShOTkZMLCwsjNzSU9PZ26deseX35MSkoKTZo0ASh2ObgSdvXq1U8rloI8dg5ERAKAycDlQDRwg4hEF2p2G7BfVaOAl4HnPRUPQGZOHtdP+Y3H566mc7PaLLz3Qob1jLQkYCqc2rVrk5eXV2wy2LJlCw888AB33303AH379uXf//738Q/oFStWlLj9PXv2kJ+fz+DBgxk/fjx//vknISEhREZG8umnnwKuD+JVq1aVuJ2+ffsydepUMjIyANepk7S0NIKDgzl06FCR70lPT6d27doEBQWxdu1afv/99yLb9e7dm1mzZpGWlgbAvn372Lp1KwcPHqRGjRqEhoaya9cu5s+fX+T7R48ezcqVK094nW4SABgwYADvvfceALNmzeKSSy5BRBgwYAAzZswgOzubzZs3s2HDBrp27UqXLl3YsGEDmzdv5ujRo8yYMYMBAwYc39769etp3779acdzjCd7BF2BJFXdBCAiM4CBQGKBNgOBcc70LOB1EREt2GctJWmHsti89zDr5BCThnRkyLlhdsOPqdD69OnDL7/8cvxc/8aNG+nUqRNZWVkEBwdzzz33MGzYMAAee+wx7r33Xjp27Eh+fj6RkZF8+eWXxW47NTWV4cOHk5+fD3D8W/f06dMZNWoU48ePJycnh6FDh3L22WeXGOOaNWvo0aMH4Brs/fDDD2nRogU9e/akffv2XH755X8ZLO7Xrx9vvvkmbdu2pXXr1n85t15QdHQ048ePp0+fPuTn5xMYGMjkyZPp3r07nTp1ok2bNjRt2pSePXu6/0MtwQUXXMDatWvJyMggLCyMd955h759+/L4448TExPDgAEDuO2227j55puJioqiTp06zJgxA4B27dpx3XXXER0dTeXKlZk8efLxns3rr79O3759ycvLY8SIEbRr1w6AXbt2Ub16dRo1anTGsYsHPnNdGxYZAvRT1dud+ZuBbqp6V4E2CU6bFGd+o9NmT6FtjQRGAoSHh5+7devWU45n5yf3krg9nfa3/4cGwVYkznjWmjVrjp928ZY/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\n"},"metadata":{"needs_background":"light"}}],"source":["fpr, tpr, _ = roc_curve(A.cpu(), B.cpu())\n","roc_auc = roc_auc_score(A.cpu(), B.cpu())\n","\n","plt.figure(1)\n","plt.plot([0, 1], [0, 1])\n","plt.plot(fpr, tpr, label=\"(Densenet area = {:.3f})\".format(roc_auc))\n","plt.xlabel(\"False positive rate\")\n","plt.ylabel(\"True positive rate\")\n","plt.title(\"ROC curve\")\n","plt.legend(loc=\"best\")\n","plt.show()"]},{"cell_type":"code","execution_count":48,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"19uw8D1vA4cn","outputId":"a80d7327-d27c-45c6-f053-fcd23b174e3b","executionInfo":{"status":"ok","timestamp":1650539704449,"user_tz":-240,"elapsed":911,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["cmat = confusion_matrix(A.cpu(),B.cpu())\n","\n","ax = sns.heatmap(cmat, annot=True, cmap='Blues')\n","\n","ax.set_title('Confusion Matrix \\n\\n');\n","ax.set_xlabel('\\nPredicted Values')\n","ax.set_ylabel('Actual Values ');\n","\n","## Ticket labels - List must be in alphabetical order\n","ax.xaxis.set_ticklabels(['False','True'])\n","ax.yaxis.set_ticklabels(['False','True'])\n","\n","## Display the visualization of the Confusion Matrix.\n","plt.show()\n"]},{"cell_type":"code","execution_count":49,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1LD5Doaqqonh","outputId":"0e6e649c-5742-4a3b-b825-e84cc050c11a","executionInfo":{"status":"ok","timestamp":1650539704452,"user_tz":-240,"elapsed":39,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Thu Apr 21 08:22:40 2022       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   70C    P0    57W / 250W |  14099MiB / 16280MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","+-----------------------------------------------------------------------------+\n"]}],"source":["!nvidia-smi "]},{"cell_type":"code","execution_count":50,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pn5KWnRv7nhh","outputId":"63d352f6-a203-46a0-8278-47bcd5dac9cb","executionInfo":{"status":"ok","timestamp":1650539704455,"user_tz":-240,"elapsed":26,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["EfficientNetBN(\n","  (_conv_stem): Conv3d(1, 40, kernel_size=(3, 3, 3), stride=(2, 2, 2), bias=False)\n","  (_conv_stem_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","  (_bn0): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_blocks): Sequential(\n","    (0): Sequential(\n","      (0): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(40, 40, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=40, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(40, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(40, 10, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(10, 40, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(40, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (1): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(24, 24, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=24, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(24, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(24, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (1): Sequential(\n","      (2): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (3): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (4): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (2): Sequential(\n","      (5): MBConvBlock(\n","        (_expand_conv): Conv3d(32, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(192, 192, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=192, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(192, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(192, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 192, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(192, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (6): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (7): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (3): Sequential(\n","      (8): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (9): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (10): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (11): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (12): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (4): Sequential(\n","      (13): MBConvBlock(\n","        (_expand_conv): Conv3d(96, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(576, 576, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=576, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(576, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(576, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(24, 576, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(576, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (14): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (15): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (16): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (17): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 136, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(136, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (5): Sequential(\n","      (18): MBConvBlock(\n","        (_expand_conv): Conv3d(136, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(816, 816, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=816, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(816, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(816, 34, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(34, 816, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(816, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (19): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (20): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (21): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (22): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (23): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(232, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (6): Sequential(\n","      (24): MBConvBlock(\n","        (_expand_conv): Conv3d(232, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1392, 1392, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=1392, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(1392, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1392, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(58, 1392, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1392, 384, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (25): MBConvBlock(\n","        (_expand_conv): Conv3d(384, 2304, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(2304, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(2304, 2304, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=2304, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(2304, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(2304, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(96, 2304, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(2304, 384, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(384, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","  )\n","  (_conv_head): Conv3d(384, 1536, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","  (_conv_head_padding): Identity()\n","  (_bn1): BatchNorm3d(1536, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_avg_pooling): AdaptiveAvgPool3d(output_size=1)\n","  (_dropout): Dropout(p=0.3, inplace=False)\n","  (_fc): Linear(in_features=1536, out_features=2, bias=True)\n","  (_swish): MemoryEfficientSwish()\n",")"]},"metadata":{},"execution_count":50}],"source":["model.load_state_dict(torch.load('/content/drive/MyDrive/F5ENB3ADvsCNbest_metric_model_classification3d_dict.pth'))\n","model.eval()"]},{"cell_type":"code","execution_count":51,"metadata":{"id":"KW5rFKe3eOHg","executionInfo":{"status":"ok","timestamp":1650539787443,"user_tz":-240,"elapsed":83004,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["y_true = list()\n","y_pred = list()\n","\n","with torch.no_grad():\n","    for test_data in test_loader:\n","        test_images, test_labels = test_data[\"img\"].to(device), test_data[\"label\"].to(device)\n","        pred = model(test_images.unsqueeze(1)).argmax(dim=1)\n","        y_true.append(test_labels.item())\n","        y_pred.append(pred.item())"]},{"cell_type":"code","execution_count":52,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TQxjNsahy1xB","outputId":"3f9720fb-71eb-4e02-8f6e-0515fd941063","executionInfo":{"status":"ok","timestamp":1650539787448,"user_tz":-240,"elapsed":33,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","          CN     0.9643    0.6000    0.7397        45\n","          AD     0.7097    0.9778    0.8224        45\n","\n","    accuracy                         0.7889        90\n","   macro avg     0.8370    0.7889    0.7811        90\n","weighted avg     0.8370    0.7889    0.7811        90\n","\n"]}],"source":["from sklearn.metrics import classification_report\n","target_names = [\"CN\",\"AD\"]\n","print(classification_report(y_true, y_pred,target_names=target_names,digits=4))"]},{"cell_type":"code","execution_count":53,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"Aa9zS5cBy8VF","outputId":"3ef92d62-758c-41ca-fb2a-f4da9aa25430","executionInfo":{"status":"ok","timestamp":1650539787449,"user_tz":-240,"elapsed":29,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["fpr, tpr, _ = roc_curve(y_true, y_pred)\n","roc_auc = roc_auc_score(y_true, y_pred)\n","\n","plt.figure(1)\n","plt.plot([0, 1], [0, 1])\n","plt.plot(fpr, tpr, label=\"(Densenet area = {:.3f})\".format(roc_auc))\n","plt.xlabel(\"False positive rate\")\n","plt.ylabel(\"True positive rate\")\n","plt.title(\"ROC curve\")\n","plt.legend(loc=\"best\")\n","plt.show()"]},{"cell_type":"code","execution_count":54,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"_Abw0aPbosFy","outputId":"679a19c1-4bef-4fe5-c620-e84fc85fa734","executionInfo":{"status":"ok","timestamp":1650539787450,"user_tz":-240,"elapsed":20,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["cmat = confusion_matrix(y_true, y_pred)\n","\n","import seaborn as sns\n","\n","ax = sns.heatmap(cmat, annot=True, cmap='Blues')\n","\n","ax.set_title('Confusion Matrix CN-45[Label 0],AD-45[Label 1] \\n\\n');\n","ax.set_xlabel('\\nPredicted Values')\n","ax.set_ylabel('Actual Values ');\n","\n","## Ticket labels - List must be in alphabetical order\n","ax.xaxis.set_ticklabels(['False','True'])\n","ax.yaxis.set_ticklabels(['False','True'])\n","\n","## Display the visualization of the Confusion Matrix.\n","plt.show()\n"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":[],"machine_shape":"hm","name":"ENB3 Fold-5   AD vs CN","provenance":[{"file_id":"1eJcrgnBkiQlNfzLbGXZGjoVMmAnEAdQz","timestamp":1650530741375},{"file_id":"1iOWG61vZJGxUQ4i3WEerIbgvQz32YtfT","timestamp":1650512955783},{"file_id":"1IdODnK8uWStdX5vnV28ydP4ze4xrpIr2","timestamp":1650512563840},{"file_id":"1MyQGeBdvqYUwCi8iJ5UtFOoUW6y_IEhA","timestamp":1650477757217},{"file_id":"1WrzYE0tdhtad4YDIJynv9erz4GxiVBY_","timestamp":1650462036772},{"file_id":"15mTk3elNiQJBYvG03FDvYQk2ytDec9NM","timestamp":1650458439069},{"file_id":"1IhQ9HqIcPaurX0fHHwZzjNxj6hDQWAhp","timestamp":1650376343625},{"file_id":"1wUU8oGY0A8oMGwZEpJiyjpDsIzVYuh4E","timestamp":1650280826743},{"file_id":"1jDGtnqGS8Aczg-zyZNGpF3QVKuynO6nf","timestamp":1650214828929},{"file_id":"1Uz9WP-CrrnkXZEy_tARR5eySNxhYP1UD","timestamp":1650167306214},{"file_id":"1yl08D9WJda9cSY1v3qJEwoqmjVzMGDVK","timestamp":1648382303992},{"file_id":"1W_VhzdsW0ev4YXUdlgWGQVc8FDui_-ti","timestamp":1648355843901},{"file_id":"1WwLS7IvoVpwP2K0cG9HF3BCfim5lWeE-","timestamp":1648347425085},{"file_id":"1aeCVSDGh-GOkorZ5Bl2btjFC2p_kK_k8","timestamp":1648314735073},{"file_id":"1BTjj-YH44tZrTF7rG6y4vREOqyiL3u5W","timestamp":1648302511310},{"file_id":"1jG_r7VUlaeHdfoqDiC5T--PwdnOGDpX7","timestamp":1648292499522},{"file_id":"15j8pYQmvG_UNAnP8JuGzfD8ex_6hxRns","timestamp":1648283104327},{"file_id":"1NE32ZVaen7rQzttzj3osZe7_nXN9QMOy","timestamp":1648201474639},{"file_id":"1TgopIX2tPaVjnXLqi3W4-d6UhVK8nPEJ","timestamp":1648127135930},{"file_id":"1-T7dnfNb8Ib2zGQgpjLivEO2VwMdetwr","timestamp":1648121625144},{"file_id":"1r1lUfWnsJxZnUUPhf_ThH0HE9YscvYcQ","timestamp":1648111248098},{"file_id":"1HYazkOl83bLXhAFo_z0e9UhhR7KIhCdV","timestamp":1648061718205},{"file_id":"10mbf3ronNevgSGamc8CjNo5VuCqaUpgz","timestamp":1648055036787},{"file_id":"1luKbRAAUC-f03yc4j610EoiAHppb68BS","timestamp":1648031793067},{"file_id":"1zP4rEG5G6l4zAqoJ_IZtldeR-Rf9vIAn","timestamp":1644428204089},{"file_id":"11yTaxC3PAGGBVoJ2ggBXxzwKfysLiMF3","timestamp":1644392976089},{"file_id":"1RWGGIVivPPJdbKNKUT_E241L8JQ5spxx","timestamp":1643956276368}],"mount_file_id":"1qzUulBXi1JgggLiRCPwqryCoXNXYUJse","authorship_tag":"ABX9TyO5LtZpj0gvwSbTXVzMYw85"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}