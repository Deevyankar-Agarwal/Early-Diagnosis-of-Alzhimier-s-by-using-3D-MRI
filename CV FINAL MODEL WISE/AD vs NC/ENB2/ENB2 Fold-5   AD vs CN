{"cells":[{"cell_type":"code","execution_count":7,"metadata":{"id":"cUJl8Mw0QXoP","executionInfo":{"status":"ok","timestamp":1650530954235,"user_tz":-240,"elapsed":352,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["import torch\n","import os\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import roc_curve\n","from sklearn.metrics import roc_auc_score\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","import seaborn as sns\n"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3206,"status":"ok","timestamp":1650530957901,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"NYznFz4FMRll","outputId":"c0e9f6ee-58c0-4b5b-f3b7-1ce90ed91cb0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: monai in /usr/local/lib/python3.7/dist-packages (0.8.1)\n","Requirement already satisfied: torch>=1.6 in /usr/local/lib/python3.7/dist-packages (from monai) (1.10.0+cu111)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from monai) (1.21.6)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.6->monai) (4.1.1)\n"]}],"source":["!pip install monai"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"FlUxE75HMNqI","executionInfo":{"status":"ok","timestamp":1650530957903,"user_tz":-240,"elapsed":24,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["import monai\n","from monai.data import decollate_batch\n","from monai.metrics import ROCAUCMetric\n","from monai.transforms import ToTensord,EnsureType,LoadImaged\n","from monai.transforms import RandAffined,RandRotated,RandGaussianNoised,Activations, AddChanneld, AsDiscrete, Compose,RandRotate90d, Resized, ScaleIntensityd, EnsureTyped"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"P0aSwEwmleyT","executionInfo":{"status":"ok","timestamp":1650530957905,"user_tz":-240,"elapsed":22,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(160,1) # 1 means AD 160 processes MRI for Training"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1335,"status":"ok","timestamp":1650530959220,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"_Via2mzzs85z","outputId":"06c20db6-85e0-43fe-8798-e63c4c35fd9e"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/\n"]}],"source":["train_files={}\n","for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/'):\n","  if files:\n","    print(path)    "]},{"cell_type":"code","execution_count":12,"metadata":{"id":"92KqzjRQgnJX","executionInfo":{"status":"ok","timestamp":1650530959221,"user_tz":-240,"elapsed":7,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":[" images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD', f]) for f in files] "]},{"cell_type":"code","execution_count":13,"metadata":{"id":"ZIUb-4BxmS4J","executionInfo":{"status":"ok","timestamp":1650530959222,"user_tz":-240,"elapsed":7,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":[" train_files = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1256,"status":"ok","timestamp":1650530960472,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"2xRqG2ROpU2h","outputId":"029118c3-fc81-4384-fcde-c66b8e7c75f0"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/\n"]}],"source":["train_files_sMCI={}\n","for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/'):\n","  if files:\n","    print(path)\n","   "]},{"cell_type":"code","execution_count":15,"metadata":{"id":"9ezb_wKbpcLb","executionInfo":{"status":"ok","timestamp":1650530960472,"user_tz":-240,"elapsed":32,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images_sMCI = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN', f]) for f in files]\n"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"o5Ic7GYbl99W","executionInfo":{"status":"ok","timestamp":1650530960473,"user_tz":-240,"elapsed":29,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["y=np.full(160,0) # o means stable MCI "]},{"cell_type":"code","execution_count":17,"metadata":{"id":"A2Wmvm0VqGvC","executionInfo":{"status":"ok","timestamp":1650530960474,"user_tz":-240,"elapsed":28,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["train_files_sMCI = [{\"img\": img, \"label\": label} for img, label in zip(images_sMCI, y)]"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"nu56u0jmn99m","executionInfo":{"status":"ok","timestamp":1650530960474,"user_tz":-240,"elapsed":27,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["train_files.extend(train_files_sMCI)"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1650530960475,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"nXXjXi8moEfu","outputId":"d015fb14-1fd8-4f7c-974a-0c32fa900978"},"outputs":[{"output_type":"stream","name":"stdout","text":["[{'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0266_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007095334102_S12381_I119390.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0266_MR_MPR__GradWarp__N3__Scaled_Br_20070819154701884_S12381_I68898.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0272_MR_MPR__GradWarp__N3__Scaled_Br_20070819160811308_S12394_I68927.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0310_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007095729372_S12468_I119395.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0310_MR_MPR__GradWarp__N3__Scaled_Br_20070819162315993_S12468_I68944.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0517_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007100124596_S15001_I119399.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0517_MR_MPR__GradWarp__N3__Scaled_Br_20070819165258579_S15001_I68976.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0528_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007100403336_S14629_I119401.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0528_MR_MPR__GradWarp__N3__Scaled_Br_20070821191602878_S14629_I69679.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0740_MR_MPR__GradWarp__N3__Scaled_2_Br_20081007101045669_S17472_I119406.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_0740_MR_MPR__GradWarp__N3__Scaled_Br_20070819180306941_S17472_I69048.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_1409_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070821114304781_S33787_I69400.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_128_S_1430_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20071030174634532_S39199_I79857.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_130_S_0956_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070210221002388_S20667_I39185.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_130_S_1201_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070801182711594_S25082_I63757.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_130_S_1290_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070801183629045_S26038_I63766.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_130_S_1337_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070801184528226_S27584_I63775.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_131_S_0319_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070403131044669_S12322_I47984.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_131_S_0457_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080225093858034_S13976_I92406.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_131_S_0497_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070403140455408_S15315_I48038.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_131_S_0691_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070403141449754_S17266_I48047.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_133_S_0493_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081007152542589_S14156_I119503.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_133_S_1055_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008100559240_S22386_I119646.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_133_S_1170_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008101107947_S24674_I119651.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_133_S_1170_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080207174424754_S24674_I89957.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0194_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008133147404_S13178_I119717.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0194_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070215183625381_S13178_I40239.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0299_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008133944436_S13839_I119726.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0299_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070215202408595_S13839_I40312.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0300_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008134134874_S14136_I119728.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0300_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070215205110923_S14136_I40328.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0426_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081008134327484_S14581_I119730.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_136_S_0426_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070215211810806_S14581_I40356.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_137_S_0366_MR_MPR__GradWarp__N3__Scaled_Br_20070323161105797_S14199_I46608.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_137_S_0438_MR_MPR__GradWarp__N3__Scaled_Br_20070323162337393_S13764_I46615.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_137_S_0796_MR_MPR__GradWarp__N3__Scaled_Br_20080207175303986_S18077_I89979.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_137_S_0841_MR_MPR__GradWarp__N3__Scaled_Br_20070419175857278_S19351_I49776.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_137_S_1041_MR_MPR-R__GradWarp__N3__Scaled_Br_20070306190902216_S22310_I43071.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_141_S_0696_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20071119104836717_S18373_I82738.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_141_S_0790_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080220165919265_S18766_I91253.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0619_MR_MPR-R__GradWarp__N3__Scaled_2_Br_20081001115218896_S15145_I118678.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0619_MR_MPR-R__GradWarp__N3__Scaled_Br_20070411125458928_S15145_I48617.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0816_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002102135862_S18402_I118984.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0816_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217005829488_S18402_I40731.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0938_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001115856421_S19852_I118685.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0938_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070219175406282_S19852_I40980.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0955_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001120235839_S20004_I118689.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_0955_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217013411002_S20004_I40754.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070217030439623_S23128_I40817.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_003_S_0931_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070503165327269_S20051_I53390.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_003_S_1059_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070501173720913_S22300_I52816.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_003_S_1257_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070501172255698_S27340_I52790.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_005_S_0221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070910164745994_S11958_I72128.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_005_S_0814_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070923123111793_S18390_I74591.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_005_S_0929_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070923124929945_S19669_I74609.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070717180348670_S27673_I60417.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_006_S_0547_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070926110116880_S19779_I75279.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_006_S_0653_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070605122642054_S23255_I55948.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_007_S_0316_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001120625745_S12583_I118693.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_007_S_0316_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070118030943701_S12583_I36573.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_007_S_1248_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070713113209876_S25568_I59950.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_007_S_1304_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070713111105724_S26475_I59910.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070607134807952_S27414_I56319.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_009_S_1334_MR_MPR-R__GradWarp__N3__Scaled_Br_20070717182244238_S27423_I60434.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_009_S_1354_MR_MPR__GradWarp__N3__Scaled_Br_20070717183309825_S27634_I60443.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_2_Br_20081002102855696_S19638_I118990.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20070807153633938_S19638_I65597.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_2_Br_20081001122514861_S26117_I118707.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20070731163202385_S26117_I63349.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_011_S_0002_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070108225928642_S9107_I35475.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_011_S_0003_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061208111300610_S9127_I32237.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_011_S_0010_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061208114538147_S8800_I32270.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_011_S_0053_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070108231357675_S10064_I35486.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_011_S_0183_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061206183315171_S12000_I32003.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0689_MR_MPR-R____N3__Scaled_2_Br_20081001123144447_S16392_I118713.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0689_MR_MPR-R____N3__Scaled_Br_20080225093300703_S16392_I92398.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0712_MR_MPR____N3__Scaled_2_Br_20081001123034709_S16704_I118712.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0712_MR_MPR____N3__Scaled_Br_20080225093529482_S16704_I92401.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0720_MR_MPR____N3__Scaled_2_Br_20081001123253253_S17682_I118714.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0720_MR_MPR____N3__Scaled_Br_20080225174150688_S17682_I92529.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0803_MR_MPR____N3__Scaled_2_Br_20081001123507114_S19197_I118716.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_012_S_0803_MR_MPR____N3__Scaled_Br_20070711172746366_S19197_I59250.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_013_S_0592_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20071028192251104_S18419_I79144.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_013_S_0699_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070727182856171_S18366_I62650.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_013_S_0996_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426092308209_S22240_I51183.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_013_S_1161_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426171211057_S24399_I51485.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_013_S_1205_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070426173828172_S25024_I51542.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070212231950856_S12402_I39620.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_014_S_1095_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070320181218511_S23323_I45740.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_016_S_0991_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070217023139686_S21737_I40794.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_016_S_1263_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070804134033886_S27303_I64622.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0286_MR_MPR____N3__Scaled_2_Br_20081001135113951_S12435_I118779.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0286_MR_MPR____N3__Scaled_Br_20070120013124801_S12435_I37007.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0335_MR_MPR____N3__Scaled_2_Br_20081008153133922_S14586_I119801.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0335_MR_MPR____N3__Scaled_Br_20070101214204431_S14586_I35009.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0633_MR_MPR-R____N3__Scaled_2_Br_20081010112443772_S15573_I120057.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0633_MR_MPR-R____N3__Scaled_Br_20070101222816515_S15573_I35036.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0682_MR_MPR____N3__Scaled_2_Br_20081008153234434_S16293_I119802.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_018_S_0682_MR_MPR____N3__Scaled_Br_20070101224115510_S16293_I35044.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_020_S_0213_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070718120158728_S12386_I60600.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20061217125152228_S12836_I33444.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_021_S_0642_MR_MPR__GradWarp__N3__Scaled_Br_20061217130526879_S15935_I33452.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20061217132116005_S17580_I33461.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_021_S_1109_MR_MPR__GradWarp__N3__Scaled_Br_20070727185946236_S23446_I62695.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_022_S_0007_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712142439074_S9024_I59366.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712152611314_S11485_I59484.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_022_S_0219_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712154620604_S12375_I59533.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_022_S_0543_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070712155153926_S14849_I59543.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0083_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001153941224_S10568_I118874.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0083_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061130194138457_S10568_I31143.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0084_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100834283_S10764_I118970.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0084_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061201102044695_S10764_I31205.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0093_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100757991_S10736_I118969.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0139_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081002100910505_S11079_I118971.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0139_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061201144502375_S11079_I31300.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0916_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001154252419_S19228_I118879.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_0916_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20061203142844438_S19228_I31533.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001160410209_S26314_I118923.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070727133707675_S26314_I62433.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_023_S_1289_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081001160534628_S26374_I118925.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070806164945601_S27512_I65248.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_041_S_1391_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070730182830112_S29116_I62933.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_041_S_1435_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20071029192425510_S39186_I79636.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_051_S_1296_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070628165536504_S26431_I58022.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_053_S_1044_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003142251021_S21256_I119175.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_053_S_1044_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070802192148921_S21256_I64203.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_057_S_0474_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20061229153747701_S13990_I34720.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070730190858034_S28667_I62998.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_057_S_1373_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070730191448410_S28698_I63008.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_057_S_1379_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070730191813596_S28761_I63014.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424112744977_S14699_I50426.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_062_S_0690_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424115325478_S16924_I50468.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_062_S_0730_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424120556863_S17062_I50487.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070424123729148_S18189_I50524.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0029_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003155128312_S9904_I119180.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0029_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070209160613449_S9904_I38717.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0076_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003155813843_S10468_I119190.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0076_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070111012139914_S10468_I35911.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0110_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003160054331_S11177_I119194.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0828_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081003161047536_S18532_I119205.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_0828_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070807174227674_S18532_I65716.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_1185_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731111102788_S24635_I63104.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_067_S_1253_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070522143031075_S27558_I55033.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_2_Br_20081212141712788_S10772_I130231.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20070731181048264_S10772_I63454.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_068_S_1191_MR_MPR____N3__Scaled_Br_20071103125754305_S25451_I80645.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_073_S_0565_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006105531714_S15762_I119234.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_073_S_0565_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070213213329963_S15762_I39919.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_082_S_0304_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006113122746_S12557_I119236.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_082_S_0761_MR_MPR__GradWarp__B1_Correction__N3__Scaled_2_Br_20081006113707423_S18119_I119244.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_082_S_1079_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070418082140556_S22650_I49490.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_082_S_1377_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070731115515322_S28495_I63170.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1027_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070418084102408_S21207_I49527.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1090_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731120023063_S23375_I63176.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1102_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070731121241229_S22905_I63186.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070812144323362_S23871_I67223.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1397_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080307104443256_S31011_I95662.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_094_S_1402_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20070808191131320_S32102_I66078.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_098_S_0149_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080206083054086_S11021_I89429.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/AD/ADNI_098_S_0884_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20070605153002130_S24183_I56026.nii', 'label': 1}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI093-HH-1359-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI094-HH-1355-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI095-HH-1390-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI096-HH-1391-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI097-HH-1619-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI098-Guys-0745-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI099-Guys-0748-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI100-Guys-0747-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI101-Guys-0749-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI102-HH-1416-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI103-Guys-0750-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI104-HH-1450-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI105-HH-1471-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI106-Guys-0760-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI107-Guys-0761-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI108-Guys-0865-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI109-Guys-0732-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI110-Guys-0733-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI111-Guys-0734-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI112-Guys-0735-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI113-Guys-0776-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI114-Guys-0737-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI115-Guys-0738-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI116-Guys-0739-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI117-Guys-0763-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI118-Guys-0764-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI119-Guys-0765-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI120-Guys-0766-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI121-Guys-0772-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI122-Guys-0773-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI123-Guys-0774-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI126-HH-1437-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI127-HH-1451-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI128-HH-1470-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI129-Guys-0775-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI130-HH-1528-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI131-HH-1527-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI132-HH-1415-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI134-Guys-0780-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI135-Guys-0779-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI136-HH-1452-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI137-HH-1472-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI138-Guys-0746-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI139-Guys-0815-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI140-Guys-0787-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI141-Guys-0789-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI142-Guys-0786-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI143-Guys-0785-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI144-Guys-0788-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI145-Guys-0781-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI146-HH-1389-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI148-HH-1453-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI150-HH-1550-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI151-Guys-0793-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI153-Guys-0782-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI154-Guys-0821-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI156-Guys-0837-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI157-Guys-0816-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI158-Guys-0783-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI159-HH-1549-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI160-HH-1637-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI161-HH-2533-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI162-HH-1548-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI163-HH-1621-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI164-Guys-0844-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI165-HH-1589-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI166-Guys-0846-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI167-HH-1569-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI168-HH-1607-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI169-Guys-0842-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI170-Guys-0843-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI172-Guys-0982-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI173-HH-1590-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI174-HH-1571-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI175-HH-1570-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI176-HH-1604-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI177-Guys-0831-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI178-Guys-0778-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI179-Guys-0777-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI180-HH-1605-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI181-Guys-0790-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI182-Guys-0792-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI183-Guys-0791-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI184-Guys-0794-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI185-Guys-0795-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI186-Guys-0796-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI188-Guys-0798-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI189-Guys-0799-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI191-Guys-0801-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI192-Guys-0878-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI193-Guys-0810-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI194-Guys-0818-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI195-HH-1620-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI196-Guys-0805-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI197-Guys-0811-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI198-Guys-0803-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI199-Guys-0802-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI200-Guys-0812-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI201-HH-1588-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI202-HH-1526-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI204-HH-1651-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI205-HH-1649-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI206-HH-1650-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI207-Guys-0809-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI208-Guys-0808-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI209-Guys-0804-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI210-Guys-0856-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI211-HH-1568-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI212-HH-1643-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI213-HH-1642-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI214-HH-1636-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI216-HH-1635-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI217-HH-1638-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI218-HH-1815-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI219-Guys-0894-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI221-HH-1606-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI222-Guys-0819-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI223-Guys-0830-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI224-Guys-0823-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI225-Guys-0832-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI002-Guys-0828-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI012-HH-1211-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI013-HH-1212-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI014-HH-1236-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI015-HH-1258-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI016-Guys-0697-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI017-Guys-0698-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI019-Guys-0702-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI020-Guys-0700-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI021-Guys-0703-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI022-Guys-0701-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI023-Guys-0699-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI024-Guys-0705-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI025-Guys-0852-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI026-Guys-0696-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI027-Guys-0710-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI028-Guys-1038-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI029-Guys-0829-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI030-Guys-0708-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI031-Guys-0797-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI033-HH-1259-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI034-HH-1260-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI035-IOP-0873-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI036-Guys-0736-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI037-Guys-0704-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI038-Guys-0729-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI039-HH-1261-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI040-Guys-0724-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI041-Guys-0706-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI042-Guys-0725-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI043-Guys-0714-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI044-Guys-0712-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI045-Guys-0713-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI046-Guys-0824-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI048-HH-1326-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI049-HH-1358-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI050-Guys-0711-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI052-HH-1343-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI230-IOP-0869-T1.nii.gz', 'label': 0}, {'img': '/content/drive/MyDrive/MCI MODEL-5 DATA/Train/CN/IXI231-IOP-0866-T1.nii.gz', 'label': 0}]\n"]}],"source":["print(train_files)"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"_-tQmulsLAFi","executionInfo":{"status":"ok","timestamp":1650530960475,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["  train_transforms = Compose(\n","        [\n","            LoadImaged(keys=[\"img\"]),\n","            #AddChanneld(keys=[\"img\"]),\n","            #RandAffined(keys=['img'], prob=0.5, translate_range=10), \n","            #RandRotated(keys=['img'], prob=0.6, range_x=10.0),\n","            #RandGaussianNoised(keys='img', prob=0.5),\n","            #ToTensord(keys=[\"img\"]),\n","        ]\n","    )"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"w2dtOA-uRVYG","executionInfo":{"status":"ok","timestamp":1650530960476,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["post_pred = Compose([EnsureType(), Activations(softmax=True)])\n","post_label = Compose([EnsureType(), AsDiscrete(to_onehot=2)])\n"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"LwPcqiDsUBkD","executionInfo":{"status":"ok","timestamp":1650530960476,"user_tz":-240,"elapsed":12,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["from torch.utils.data import DataLoader\n","from torch.utils.tensorboard import SummaryWriter"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"N4Mqm0grS1EO","executionInfo":{"status":"ok","timestamp":1650530960477,"user_tz":-240,"elapsed":13,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["#check_ds = monai.data.Dataset(data=train_files, transform=train_transforms)\n","#check_loader = DataLoader(check_ds, batch_size=4, num_workers=4, pin_memory=torch.cuda.is_available())\n","#check_data = monai.utils.misc.first(check_loader)\n","#print(check_data[\"img\"].shape, check_data[\"label\"])\n"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"iVsZ9Mx6oeN7","executionInfo":{"status":"ok","timestamp":1650530960478,"user_tz":-240,"elapsed":13,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a training data loader\n","train_ds = monai.data.Dataset(data=train_files, transform=train_transforms)\n","train_loader = DataLoader(train_ds, batch_size=2, shuffle=True, num_workers=4, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":755,"status":"ok","timestamp":1650530961221,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"coRjr9lk0pip","outputId":"6061e69b-e32b-4e6b-b954-16cf228dbc24"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/AD/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/AD/'):\n","  if files:\n","    print(path)    "]},{"cell_type":"code","execution_count":26,"metadata":{"id":"Bb1UmOqp2Mzo","executionInfo":{"status":"ok","timestamp":1650530961222,"user_tz":-240,"elapsed":23,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(40,1)"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"U1t6ApKc3z3C","executionInfo":{"status":"ok","timestamp":1650530961223,"user_tz":-240,"elapsed":21,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/AD', f]) for f in files] "]},{"cell_type":"code","execution_count":28,"metadata":{"id":"cZFZIBmE4diO","executionInfo":{"status":"ok","timestamp":1650530961223,"user_tz":-240,"elapsed":19,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1650530961224,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"j3ruNdWQ6efP","outputId":"8ee95eac-29a3-4f8a-fa7e-daff0d90ad48"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/CN/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/CN/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":30,"metadata":{"id":"CPeztrsB6k-V","executionInfo":{"status":"ok","timestamp":1650530961225,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(40,0)"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"Zwshfucp6pey","executionInfo":{"status":"ok","timestamp":1650530961225,"user_tz":-240,"elapsed":13,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-5 DATA/Valid/CN', f]) for f in files] "]},{"cell_type":"code","execution_count":32,"metadata":{"id":"tTnjUbZW6yuZ","executionInfo":{"status":"ok","timestamp":1650530961226,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files_sMCI = [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":33,"metadata":{"id":"ZxDNtMH97eOE","executionInfo":{"status":"ok","timestamp":1650530961227,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["valid_files.extend(valid_files_sMCI)"]},{"cell_type":"code","execution_count":34,"metadata":{"id":"U5VuoLnM7pfM","executionInfo":{"status":"ok","timestamp":1650530961227,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["#check_ds = monai.data.Dataset(data=valid_files, transform=train_transforms)\n","#check_loader = DataLoader(check_ds, batch_size=8, num_workers=4, pin_memory=torch.cuda.is_available())\n","#check_data = monai.utils.misc.first(check_loader)\n","#print(check_data[\"img\"].shape, check_data[\"label\"])"]},{"cell_type":"code","execution_count":35,"metadata":{"id":"qVKSOKbw7296","executionInfo":{"status":"ok","timestamp":1650530961228,"user_tz":-240,"elapsed":14,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a validation data loader\n","valid_ds = monai.data.Dataset(data=valid_files, transform=train_transforms)\n","valid_loader = DataLoader(valid_ds, batch_size=2,shuffle=True,num_workers=4, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":808,"status":"ok","timestamp":1650530962023,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"w59RYjFHM4s9","outputId":"5f8e483a-7b3c-46b4-a90d-bc2fd9e2e4a4"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":37,"metadata":{"id":"PxrcqmvMNAi9","executionInfo":{"status":"ok","timestamp":1650530962024,"user_tz":-240,"elapsed":47,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(45,1)"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"50fO8lN-NNXk","executionInfo":{"status":"ok","timestamp":1650530962024,"user_tz":-240,"elapsed":44,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD', f]) for f in files] "]},{"cell_type":"markdown","metadata":{"id":"HHl3YGjoqFhG"},"source":[""]},{"cell_type":"code","execution_count":39,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":44,"status":"ok","timestamp":1650530962025,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"BhuE2IwePDBJ","outputId":"a8fbe4d7-eea8-4f22-e480-fb6211ecf547"},"outputs":[{"output_type":"stream","name":"stdout","text":["['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_0938_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081104151647760_S58211_I125155.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081224104711856_S60832_I132197.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_0221_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080501163219594_S49279_I104489.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090701135215664_S65452_I147406.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721101114129_S67376_I149749.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20100105142259322_S58426_I162100.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20090227152103934_S62987_I137223.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080516095357795_S49746_I105878.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_016_S_0991_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721103719643_S66595_I149771.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20080515114721734_S49511_I105737.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20090127130302490_S57137_I134624.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080229153509900_S45881_I94405.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_0084_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080224132527438_S44784_I92169.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090512151630340_S64537_I143676.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1082_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081229144920056_S60862_I132368.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090316152042654_S63689_I139062.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090223154912775_S61415_I136737.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20080421171040104_S47745_I103333.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081023111433234_S55321_I123024.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081026130730923_S56031_I123722.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317134835050_S63547_I139235.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1308_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317140629096_S63613_I139266.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081028132916623_S57028_I124258.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090513123110219_S64654_I143723.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514101747514_S66427_I143792.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1379_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514103130382_S66419_I143815.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702154348870_S51763_I112301.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0730_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081023151703543_S54793_I123220.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081230153105872_S60719_I132424.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_067_S_0076_MR_MPR__GradWarp__N3__Scaled_Br_20090113143434713_S57777_I133486.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20080414160306136_S47738_I102511.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_073_S_0565_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081027091402842_S55114_I123926.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217155439187_S62803_I136220.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_098_S_0149_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080223171535343_S44911_I91891.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_099_S_1144_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090204190508382_S62245_I135299.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_109_S_1157_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20091214142720527_S65805_I160876.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_116_S_0370_MR_MPR__GradWarp__N3__Scaled_Br_20080522134715771_S49840_I106529.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0091_MR_MPR____N3__Scaled_Br_20080223174718151_S44614_I91935.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0094_MR_MPR-R____N3__Scaled_Br_20080223175253233_S44624_I91942.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_0891_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081027142509323_S56885_I124156.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_1221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217161856142_S62792_I136241.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_0844_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081209113459069_S60062_I129620.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_1382_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090721114554064_S66581_I149834.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0457_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702162258576_S51679_I112366.nii', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0497_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081024092147063_S53628_I123416.nii']\n"]}],"source":["print(images)"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"UbezDmYZNdU-","executionInfo":{"status":"ok","timestamp":1650530962025,"user_tz":-240,"elapsed":33,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files= [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":41,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":33,"status":"ok","timestamp":1650530962025,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"bBuIqGtpnS8V","outputId":"d4b62d85-acc8-438d-9228-9971476bce58"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_0938_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081104151647760_S58211_I125155.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_002_S_1018_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081224104711856_S60832_I132197.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_0221_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080501163219594_S49279_I104489.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_005_S_1341_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090701135215664_S65452_I147406.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_007_S_1339_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721101114129_S67376_I149749.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0786_MR_MPR____N3__Scaled_Br_20100105142259322_S58426_I162100.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_010_S_0829_MR_MPR____N3__Scaled_Br_20090227152103934_S62987_I137223.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_014_S_0328_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080516095357795_S49746_I105878.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_016_S_0991_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090721103719643_S66595_I149771.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0343_MR_MPR__GradWarp__N3__Scaled_Br_20080515114721734_S49511_I105737.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_021_S_0753_MR_MPR__GradWarp__N3__Scaled_Br_20090127130302490_S57137_I134624.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_022_S_0129_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080229153509900_S45881_I94405.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_0084_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080224132527438_S44784_I92169.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_023_S_1262_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090512151630340_S64537_I143676.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1082_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081229144920056_S60862_I132368.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_027_S_1254_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090316152042654_S63689_I139062.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_029_S_1056_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090223154912775_S61415_I136737.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_032_S_0147_MR_MPR____N3__Scaled_Br_20080421171040104_S47745_I103333.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0724_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081023111433234_S55321_I123024.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_0739_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081026130730923_S56031_I123722.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1283_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317134835050_S63547_I139235.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_033_S_1308_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090317140629096_S63613_I139266.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_036_S_0760_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081028132916623_S57028_I124258.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_041_S_1368_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090513123110219_S64654_I143723.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1371_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514101747514_S66427_I143792.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_057_S_1379_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090514103130382_S66419_I143815.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0535_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702154348870_S51763_I112301.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0730_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081023151703543_S54793_I123220.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_062_S_0793_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081230153105872_S60719_I132424.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_067_S_0076_MR_MPR__GradWarp__N3__Scaled_Br_20090113143434713_S57777_I133486.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_068_S_0109_MR_MPR____N3__Scaled_Br_20080414160306136_S47738_I102511.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_073_S_0565_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20081027091402842_S55114_I123926.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_094_S_1164_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217155439187_S62803_I136220.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_098_S_0149_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20080223171535343_S44911_I91891.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_099_S_1144_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090204190508382_S62245_I135299.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_109_S_1157_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20091214142720527_S65805_I160876.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_116_S_0370_MR_MPR__GradWarp__N3__Scaled_Br_20080522134715771_S49840_I106529.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0091_MR_MPR____N3__Scaled_Br_20080223174718151_S44614_I91935.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_123_S_0094_MR_MPR-R____N3__Scaled_Br_20080223175253233_S44624_I91942.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_0891_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081027142509323_S56885_I124156.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_126_S_1221_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20090217161856142_S62792_I136241.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_0844_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081209113459069_S60062_I129620.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_127_S_1382_MR_MPR-R__GradWarp__B1_Correction__N3__Scaled_Br_20090721114554064_S66581_I149834.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0457_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20080702162258576_S51679_I112366.nii',\n","  'label': 1},\n"," {'img': '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/AD/ADNI_131_S_0497_MR_MPR__GradWarp__B1_Correction__N3__Scaled_Br_20081024092147063_S53628_I123416.nii',\n","  'label': 1}]"]},"metadata":{},"execution_count":41}],"source":["test_files"]},{"cell_type":"code","execution_count":42,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1650530962026,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"BTX-NshNN67U","outputId":"45c8761b-d3cf-42dd-9757-9b135474261f"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/\n"]}],"source":["for path,dirs,files in os.walk('/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/'):\n","  if files:\n","    print(path)"]},{"cell_type":"code","execution_count":43,"metadata":{"id":"V3Mx0BFpOgxK","executionInfo":{"status":"ok","timestamp":1650530962026,"user_tz":-240,"elapsed":19,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["x=np.full(45,0)"]},{"cell_type":"code","execution_count":44,"metadata":{"id":"WNTSkpIjOj2w","executionInfo":{"status":"ok","timestamp":1650530962590,"user_tz":-240,"elapsed":582,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["images = [os.sep.join(['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN', f]) for f in files] "]},{"cell_type":"markdown","metadata":{"id":"vTGEiVvEJADY"},"source":[""]},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":32,"status":"ok","timestamp":1650530962591,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"Ozj2euWTPdpY","outputId":"61536bc9-cc0b-4469-b288-6c8020562894"},"outputs":[{"output_type":"stream","name":"stdout","text":["['/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI286-Guys-0859-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI287-Guys-0863-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI288-Guys-0879-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI289-Guys-0864-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI290-IOP-0874-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI291-IOP-0882-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI292-IOP-0877-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI293-IOP-0876-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI294-IOP-0868-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI295-HH-1814-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI296-HH-1970-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI297-Guys-0886-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI298-Guys-0861-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI299-Guys-0893-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI300-Guys-0880-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI302-HH-1883-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI303-IOP-0968-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI304-Guys-0862-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI305-IOP-0871-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI306-IOP-0867-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI307-IOP-0872-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI308-Guys-0884-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI309-IOP-0897-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI310-IOP-0890-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI311-Guys-0885-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI312-Guys-0887-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI313-HH-2241-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI314-IOP-0889-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI315-IOP-0888-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI316-HH-1862-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI317-Guys-0896-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI318-Guys-0895-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI319-Guys-0901-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI320-Guys-0902-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI321-Guys-0903-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI322-IOP-0891-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI324-Guys-0922-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI325-Guys-0911-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI326-Guys-0907-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI327-HH-1999-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI328-HH-2295-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI329-HH-1908-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI330-Guys-0881-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI332-IOP-1134-T1.nii.gz', '/content/drive/MyDrive/MCI MODEL-1 DATA/Test/CN/IXI333-IOP-0926-T1.nii.gz']\n"]}],"source":["print(images)"]},{"cell_type":"code","execution_count":46,"metadata":{"id":"l-fmwiL9Pmdt","executionInfo":{"status":"ok","timestamp":1650530962592,"user_tz":-240,"elapsed":17,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files_sMCI= [{\"img\": img, \"label\": label} for img, label in zip(images, x)]"]},{"cell_type":"code","execution_count":47,"metadata":{"id":"OU_zrGhaPwJF","executionInfo":{"status":"ok","timestamp":1650530962592,"user_tz":-240,"elapsed":15,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["test_files.extend(test_files_sMCI)"]},{"cell_type":"code","execution_count":48,"metadata":{"id":"BSkM4T7KP_9_","executionInfo":{"status":"ok","timestamp":1650530962593,"user_tz":-240,"elapsed":15,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["# create a test data loader\n","test_ds = monai.data.Dataset(data=test_files, transform=train_transforms)\n","test_loader = DataLoader(test_ds, batch_size=1, shuffle=True, num_workers=1, pin_memory=torch.cuda.is_available())"]},{"cell_type":"code","execution_count":49,"metadata":{"id":"0jRFNQcxJUOf","executionInfo":{"status":"ok","timestamp":1650530971749,"user_tz":-240,"elapsed":9170,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["  from monai.networks.nets.efficientnet import EfficientNetBN\n","  device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","  model=EfficientNetBN(\"efficientnet-b2\",spatial_dims=3, in_channels=1, num_classes=2).to(device)\n","  #model = monai.networks.nets.DenseNet264(spatial_dims=3, in_channels=1, out_channels=2).to(device)\n","  loss_function = torch.nn.CrossEntropyLoss()\n","  optimizer = torch.optim.Adam(model.parameters(), 1e-4)\n","  auc_metric = ROCAUCMetric()"]},{"cell_type":"code","execution_count":50,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1650530971749,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"},"user_tz":-240},"id":"rfTuqU6DJbqG","outputId":"07585fa7-c921-4bee-930c-6b7a9fd37d81"},"outputs":[{"output_type":"stream","name":"stdout","text":["<bound method Module.parameters of EfficientNetBN(\n","  (_conv_stem): Conv3d(1, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), bias=False)\n","  (_conv_stem_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","  (_bn0): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_blocks): Sequential(\n","    (0): Sequential(\n","      (0): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=32, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(32, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(32, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (1): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=16, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(16, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(4, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(16, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (1): Sequential(\n","      (2): MBConvBlock(\n","        (_expand_conv): Conv3d(16, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=96, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(96, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(4, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(96, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (3): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (4): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (2): Sequential(\n","      (5): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (6): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (7): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (3): Sequential(\n","      (8): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 88, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(88, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (9): MBConvBlock(\n","        (_expand_conv): Conv3d(88, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(528, 528, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=528, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(528, 22, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(22, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(528, 88, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(88, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (10): MBConvBlock(\n","        (_expand_conv): Conv3d(88, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(528, 528, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=528, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(528, 22, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(22, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(528, 88, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(88, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (11): MBConvBlock(\n","        (_expand_conv): Conv3d(88, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(528, 528, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=528, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(528, 22, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(22, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(528, 88, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(88, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (4): Sequential(\n","      (12): MBConvBlock(\n","        (_expand_conv): Conv3d(88, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(528, 528, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=528, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(528, 22, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(22, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(528, 120, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(120, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (13): MBConvBlock(\n","        (_expand_conv): Conv3d(120, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(720, 720, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=720, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(720, 30, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(30, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(720, 120, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(120, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (14): MBConvBlock(\n","        (_expand_conv): Conv3d(120, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(720, 720, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=720, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(720, 30, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(30, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(720, 120, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(120, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (15): MBConvBlock(\n","        (_expand_conv): Conv3d(120, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(720, 720, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=720, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(720, 30, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(30, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(720, 120, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(120, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (5): Sequential(\n","      (16): MBConvBlock(\n","        (_expand_conv): Conv3d(120, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(720, 720, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=720, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(720, 30, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(30, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(720, 208, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(208, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (17): MBConvBlock(\n","        (_expand_conv): Conv3d(208, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1248, 1248, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1248, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1248, 52, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(52, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1248, 208, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(208, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (18): MBConvBlock(\n","        (_expand_conv): Conv3d(208, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1248, 1248, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1248, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1248, 52, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(52, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1248, 208, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(208, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (19): MBConvBlock(\n","        (_expand_conv): Conv3d(208, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1248, 1248, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1248, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1248, 52, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(52, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1248, 208, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(208, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (20): MBConvBlock(\n","        (_expand_conv): Conv3d(208, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1248, 1248, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1248, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1248, 52, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(52, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1248, 208, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(208, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (6): Sequential(\n","      (21): MBConvBlock(\n","        (_expand_conv): Conv3d(208, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1248, 1248, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=1248, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1248, 52, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(52, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1248, 352, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(352, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (22): MBConvBlock(\n","        (_expand_conv): Conv3d(352, 2112, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(2112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(2112, 2112, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=2112, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(2112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(2112, 88, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(88, 2112, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(2112, 352, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(352, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","  )\n","  (_conv_head): Conv3d(352, 1408, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","  (_conv_head_padding): Identity()\n","  (_bn1): BatchNorm3d(1408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_avg_pooling): AdaptiveAvgPool3d(output_size=1)\n","  (_dropout): Dropout(p=0.3, inplace=False)\n","  (_fc): Linear(in_features=1408, out_features=2, bias=True)\n","  (_swish): MemoryEfficientSwish()\n",")>\n"]}],"source":["print(model.parameters)"]},{"cell_type":"code","execution_count":51,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ve31g7LaVSGl","outputId":"a29045c7-baf2-47ee-9edb-19bca2584067","executionInfo":{"status":"ok","timestamp":1650538123157,"user_tz":-240,"elapsed":7151410,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["----------\n","epoch 1 average loss: 2.7307\n","----------\n","epoch 2 average loss: 1.8969\n","saved new best metric model\n","current epoch: 2 current accuracy: 0.5000 current AUC: 0.6998 best accuracy: 0.5000 at epoch 2\n","----------\n","epoch 3 average loss: 1.3264\n","----------\n","epoch 4 average loss: 0.8129\n","current epoch: 4 current accuracy: 0.5000 current AUC: 0.0775 best accuracy: 0.5000 at epoch 2\n","----------\n","epoch 5 average loss: 0.6863\n","----------\n","epoch 6 average loss: 0.6264\n","current epoch: 6 current accuracy: 0.4125 current AUC: 0.4228 best accuracy: 0.5000 at epoch 2\n","----------\n","epoch 7 average loss: 0.4746\n","----------\n","epoch 8 average loss: 0.2838\n","saved new best metric model\n","current epoch: 8 current accuracy: 0.7375 current AUC: 0.8762 best accuracy: 0.7375 at epoch 8\n","----------\n","epoch 9 average loss: 0.1937\n","----------\n","epoch 10 average loss: 0.2013\n","saved new best metric model\n","current epoch: 10 current accuracy: 0.9625 current AUC: 1.0000 best accuracy: 0.9625 at epoch 10\n","----------\n","epoch 11 average loss: 0.1050\n","----------\n","epoch 12 average loss: 0.2532\n","current epoch: 12 current accuracy: 0.6125 current AUC: 0.4348 best accuracy: 0.9625 at epoch 10\n","----------\n","epoch 13 average loss: 0.1963\n","----------\n","epoch 14 average loss: 0.2257\n","saved new best metric model\n","current epoch: 14 current accuracy: 0.9875 current AUC: 0.9838 best accuracy: 0.9875 at epoch 14\n","----------\n","epoch 15 average loss: 0.0990\n","----------\n","epoch 16 average loss: 0.1454\n","current epoch: 16 current accuracy: 0.8000 current AUC: 0.9494 best accuracy: 0.9875 at epoch 14\n","----------\n","epoch 17 average loss: 0.1144\n","----------\n","epoch 18 average loss: 0.0240\n","current epoch: 18 current accuracy: 0.9875 current AUC: 1.0000 best accuracy: 0.9875 at epoch 14\n","----------\n","epoch 19 average loss: 0.0059\n","----------\n","epoch 20 average loss: 0.0701\n","saved new best metric model\n","current epoch: 20 current accuracy: 1.0000 current AUC: 1.0000 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 21 average loss: 0.0029\n","----------\n","epoch 22 average loss: 0.0387\n","current epoch: 22 current accuracy: 1.0000 current AUC: 1.0000 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 23 average loss: 0.0782\n","----------\n","epoch 24 average loss: 0.0476\n","current epoch: 24 current accuracy: 0.9250 current AUC: 0.9931 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 25 average loss: 0.2942\n","----------\n","epoch 26 average loss: 0.1849\n","current epoch: 26 current accuracy: 0.9375 current AUC: 0.9912 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 27 average loss: 0.1637\n","----------\n","epoch 28 average loss: 0.0984\n","current epoch: 28 current accuracy: 1.0000 current AUC: 1.0000 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 29 average loss: 0.0601\n","----------\n","epoch 30 average loss: 0.0078\n","current epoch: 30 current accuracy: 0.9875 current AUC: 1.0000 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 31 average loss: 0.0334\n","----------\n","epoch 32 average loss: 0.0069\n","current epoch: 32 current accuracy: 0.9875 current AUC: 1.0000 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 33 average loss: 0.0650\n","----------\n","epoch 34 average loss: 0.0160\n","current epoch: 34 current accuracy: 0.9875 current AUC: 1.0000 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 35 average loss: 0.0020\n","----------\n","epoch 36 average loss: 0.0286\n","current epoch: 36 current accuracy: 0.9625 current AUC: 0.9544 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 37 average loss: 0.2087\n","----------\n","epoch 38 average loss: 0.0607\n","current epoch: 38 current accuracy: 1.0000 current AUC: 1.0000 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 39 average loss: 0.0213\n","----------\n","epoch 40 average loss: 0.0021\n","current epoch: 40 current accuracy: 0.9875 current AUC: 1.0000 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 41 average loss: 0.0030\n","----------\n","epoch 42 average loss: 0.0036\n","current epoch: 42 current accuracy: 0.9375 current AUC: 0.9981 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 43 average loss: 0.0130\n","----------\n","epoch 44 average loss: 0.0014\n","current epoch: 44 current accuracy: 0.9625 current AUC: 1.0000 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 45 average loss: 0.0020\n","----------\n","epoch 46 average loss: 0.0011\n","current epoch: 46 current accuracy: 0.9625 current AUC: 1.0000 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 47 average loss: 0.0167\n","----------\n","epoch 48 average loss: 0.2292\n","current epoch: 48 current accuracy: 0.5750 current AUC: 0.8495 best accuracy: 1.0000 at epoch 20\n","----------\n","epoch 49 average loss: 0.1972\n","----------\n","epoch 50 average loss: 0.2100\n","current epoch: 50 current accuracy: 0.9625 current AUC: 0.9969 best accuracy: 1.0000 at epoch 20\n","train completed, best_metric: 1.0000 at epoch: 20\n","              precision    recall  f1-score   support\n","\n","        SMCI     1.0000    1.0000    1.0000        40\n","          AD     1.0000    1.0000    1.0000        40\n","\n","    accuracy                         1.0000        80\n","   macro avg     1.0000    1.0000    1.0000        80\n","weighted avg     1.0000    1.0000    1.0000        80\n","\n"]}],"source":["# start a typical PyTorch training\n","val_interval = 2\n","best_metric = -1\n","best_metric_epoch = -1\n","writer = SummaryWriter()\n","for epoch in range(50):\n","    print(\"-\" * 10)\n","    #print(f\"epoch {epoch + 1}/{5}\")\n","    model.train()\n","    epoch_loss = 0\n","    step = 0\n","    for batch_data in train_loader:\n","        step += 1\n","        inputs, labels = batch_data[\"img\"].to(device), batch_data[\"label\"].to(device)\n","        optimizer.zero_grad()\n","        outputs = model(inputs.unsqueeze(1))\n","        loss = loss_function(outputs, labels)\n","        loss.backward()\n","        optimizer.step()\n","        epoch_loss += loss.item()\n","        epoch_len = len(train_ds) // train_loader.batch_size\n","        #print(f\"{step}/{epoch_len}, train_loss: {loss.item():.4f}\")\n","        writer.add_scalar(\"train_loss\", loss.item(), epoch_len * epoch + step)\n","    epoch_loss /= step\n","    print(f\"epoch {epoch + 1} average loss: {epoch_loss:.4f}\")\n","    #epoch_loss_values.append(epoch_loss)\n","    \n","    if (epoch + 1) % val_interval == 0:\n","        model.eval()\n","        with torch.no_grad():\n","            y_pred = torch.tensor([], dtype=torch.float32, device=device)\n","            y = torch.tensor([], dtype=torch.long, device=device)\n","            for val_data in valid_loader:\n","                val_images, val_labels = val_data[\"img\"].to(device), val_data[\"label\"].to(device)\n","                y_pred = torch.cat([y_pred, model(val_images.unsqueeze(1))], dim=0)\n","                y = torch.cat([y, val_labels], dim=0)\n","\n","            acc_value = torch.eq(y_pred.argmax(dim=1), y)\n","            acc_metric = acc_value.sum().item() / len(acc_value)\n","            y_onehot = [post_label(i) for i in decollate_batch(y)]\n","            y_pred_act = [post_pred(i) for i in decollate_batch(y_pred)]\n","            auc_metric(y_pred_act, y_onehot)\n","            auc_result = auc_metric.aggregate()\n","            auc_metric.reset()\n","            del y_pred_act, y_onehot\n","            if acc_metric > best_metric:\n","                A=y\n","                B=y_pred.argmax(dim=1)\n","                best_metric = acc_metric\n","                best_metric_epoch = epoch + 1\n","                torch.save(model.state_dict(), \"/content/drive/MyDrive/F5ENB2ADvsCNbest_metric_model_classification3d_dict.pth\")\n","                print(\"saved new best metric model\")\n","            print(\n","                \"current epoch: {} current accuracy: {:.4f} current AUC: {:.4f} best accuracy: {:.4f} at epoch {}\".format(\n","                    epoch + 1, acc_metric, auc_result, best_metric, best_metric_epoch\n","                )\n","            )\n","            writer.add_scalar(\"val_accuracy\", acc_metric, epoch + 1)\n","print(f\"train completed, best_metric: {best_metric:.4f} at epoch: {best_metric_epoch}\")\n","target_names = [\"SMCI\",\"AD\"]\n","print(classification_report(A.cpu(),B.cpu() ,target_names=target_names,digits=4))\n","writer.close()"]},{"cell_type":"code","execution_count":52,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mpDXFptC5nzb","outputId":"c3f4241a-3b30-448a-adca-db2d53626501","executionInfo":{"status":"ok","timestamp":1650538123158,"user_tz":-240,"elapsed":64,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","          CN     1.0000    1.0000    1.0000        40\n","          AD     1.0000    1.0000    1.0000        40\n","\n","    accuracy                         1.0000        80\n","   macro avg     1.0000    1.0000    1.0000        80\n","weighted avg     1.0000    1.0000    1.0000        80\n","\n"]}],"source":["target_names = [\"CN\",\"AD\"]\n","print(classification_report(A.cpu(),B.cpu() ,target_names=target_names,digits=4))\n","writer.close()"]},{"cell_type":"code","execution_count":53,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"3ZhBVE_wAU9P","outputId":"32c95da5-ccce-45ed-bc92-b3deaadf7365","executionInfo":{"status":"ok","timestamp":1650538123159,"user_tz":-240,"elapsed":36,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["fpr, tpr, _ = roc_curve(A.cpu(), B.cpu())\n","roc_auc = roc_auc_score(A.cpu(), B.cpu())\n","\n","plt.figure(1)\n","plt.plot([0, 1], [0, 1])\n","plt.plot(fpr, tpr, label=\"(Densenet area = {:.3f})\".format(roc_auc))\n","plt.xlabel(\"False positive rate\")\n","plt.ylabel(\"True positive rate\")\n","plt.title(\"ROC curve\")\n","plt.legend(loc=\"best\")\n","plt.show()"]},{"cell_type":"code","execution_count":54,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"19uw8D1vA4cn","outputId":"fc56998c-380f-4a90-9e46-72ebea111e4c","executionInfo":{"status":"ok","timestamp":1650538123941,"user_tz":-240,"elapsed":811,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["cmat = confusion_matrix(A.cpu(),B.cpu())\n","\n","ax = sns.heatmap(cmat, annot=True, cmap='Blues')\n","\n","ax.set_title('Confusion Matrix \\n\\n');\n","ax.set_xlabel('\\nPredicted Values')\n","ax.set_ylabel('Actual Values ');\n","\n","## Ticket labels - List must be in alphabetical order\n","ax.xaxis.set_ticklabels(['False','True'])\n","ax.yaxis.set_ticklabels(['False','True'])\n","\n","## Display the visualization of the Confusion Matrix.\n","plt.show()\n"]},{"cell_type":"code","execution_count":55,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1LD5Doaqqonh","outputId":"712a6c33-fa08-4e35-f259-6b21b10f9dbc","executionInfo":{"status":"ok","timestamp":1650538123942,"user_tz":-240,"elapsed":35,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Thu Apr 21 07:56:19 2022       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 460.32.03    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   70C    P0    51W / 250W |  11525MiB / 16280MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","+-----------------------------------------------------------------------------+\n"]}],"source":["!nvidia-smi "]},{"cell_type":"code","execution_count":56,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pn5KWnRv7nhh","outputId":"0322476b-2cd2-4dc1-f0a1-3866f91715b3","executionInfo":{"status":"ok","timestamp":1650538123943,"user_tz":-240,"elapsed":16,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["EfficientNetBN(\n","  (_conv_stem): Conv3d(1, 32, kernel_size=(3, 3, 3), stride=(2, 2, 2), bias=False)\n","  (_conv_stem_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","  (_bn0): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_blocks): Sequential(\n","    (0): Sequential(\n","      (0): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=32, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(32, 8, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(8, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(32, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (1): MBConvBlock(\n","        (_expand_conv): Identity()\n","        (_expand_conv_padding): Identity()\n","        (_bn0): Identity()\n","        (_depthwise_conv): Conv3d(16, 16, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=16, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(16, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(4, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(16, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (1): Sequential(\n","      (2): MBConvBlock(\n","        (_expand_conv): Conv3d(16, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(96, 96, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=96, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(0, 1, 0, 1, 0, 1), value=0.0)\n","        (_bn1): BatchNorm3d(96, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(96, 4, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(4, 96, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(96, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (3): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (4): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 24, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(24, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (2): Sequential(\n","      (5): MBConvBlock(\n","        (_expand_conv): Conv3d(24, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(144, 144, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=144, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(144, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(144, 6, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(6, 144, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(144, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (6): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (7): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 48, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(48, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (3): Sequential(\n","      (8): MBConvBlock(\n","        (_expand_conv): Conv3d(48, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(288, 288, kernel_size=(3, 3, 3), stride=(2, 2, 2), groups=288, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(288, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(288, 12, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(12, 288, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(288, 88, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(88, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (9): MBConvBlock(\n","        (_expand_conv): Conv3d(88, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(528, 528, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=528, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(528, 22, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(22, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(528, 88, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(88, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (10): MBConvBlock(\n","        (_expand_conv): Conv3d(88, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(528, 528, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=528, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(528, 22, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(22, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(528, 88, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(88, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (11): MBConvBlock(\n","        (_expand_conv): Conv3d(88, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(528, 528, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=528, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(528, 22, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(22, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(528, 88, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(88, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (4): Sequential(\n","      (12): MBConvBlock(\n","        (_expand_conv): Conv3d(88, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(528, 528, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=528, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(528, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(528, 22, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(22, 528, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(528, 120, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(120, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (13): MBConvBlock(\n","        (_expand_conv): Conv3d(120, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(720, 720, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=720, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(720, 30, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(30, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(720, 120, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(120, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (14): MBConvBlock(\n","        (_expand_conv): Conv3d(120, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(720, 720, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=720, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(720, 30, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(30, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(720, 120, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(120, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (15): MBConvBlock(\n","        (_expand_conv): Conv3d(120, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(720, 720, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=720, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(720, 30, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(30, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(720, 120, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(120, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (5): Sequential(\n","      (16): MBConvBlock(\n","        (_expand_conv): Conv3d(120, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(720, 720, kernel_size=(5, 5, 5), stride=(2, 2, 2), groups=720, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(720, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(720, 30, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(30, 720, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(720, 208, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(208, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (17): MBConvBlock(\n","        (_expand_conv): Conv3d(208, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1248, 1248, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1248, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1248, 52, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(52, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1248, 208, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(208, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (18): MBConvBlock(\n","        (_expand_conv): Conv3d(208, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1248, 1248, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1248, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1248, 52, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(52, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1248, 208, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(208, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (19): MBConvBlock(\n","        (_expand_conv): Conv3d(208, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1248, 1248, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1248, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1248, 52, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(52, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1248, 208, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(208, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (20): MBConvBlock(\n","        (_expand_conv): Conv3d(208, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1248, 1248, kernel_size=(5, 5, 5), stride=(1, 1, 1), groups=1248, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(2, 2, 2, 2, 2, 2), value=0.0)\n","        (_bn1): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1248, 52, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(52, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1248, 208, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(208, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","    (6): Sequential(\n","      (21): MBConvBlock(\n","        (_expand_conv): Conv3d(208, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(1248, 1248, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=1248, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(1248, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(1248, 52, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(52, 1248, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(1248, 352, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(352, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","      (22): MBConvBlock(\n","        (_expand_conv): Conv3d(352, 2112, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_expand_conv_padding): Identity()\n","        (_bn0): BatchNorm3d(2112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_depthwise_conv): Conv3d(2112, 2112, kernel_size=(3, 3, 3), stride=(1, 1, 1), groups=2112, bias=False)\n","        (_depthwise_conv_padding): ConstantPad3d(padding=(1, 1, 1, 1, 1, 1), value=0.0)\n","        (_bn1): BatchNorm3d(2112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_se_adaptpool): AdaptiveAvgPool3d(output_size=1)\n","        (_se_reduce): Conv3d(2112, 88, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_reduce_padding): Identity()\n","        (_se_expand): Conv3d(88, 2112, kernel_size=(1, 1, 1), stride=(1, 1, 1))\n","        (_se_expand_padding): Identity()\n","        (_project_conv): Conv3d(2112, 352, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","        (_project_conv_padding): Identity()\n","        (_bn2): BatchNorm3d(352, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","        (_swish): MemoryEfficientSwish()\n","      )\n","    )\n","  )\n","  (_conv_head): Conv3d(352, 1408, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)\n","  (_conv_head_padding): Identity()\n","  (_bn1): BatchNorm3d(1408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)\n","  (_avg_pooling): AdaptiveAvgPool3d(output_size=1)\n","  (_dropout): Dropout(p=0.3, inplace=False)\n","  (_fc): Linear(in_features=1408, out_features=2, bias=True)\n","  (_swish): MemoryEfficientSwish()\n",")"]},"metadata":{},"execution_count":56}],"source":["model.load_state_dict(torch.load('/content/drive/MyDrive/F5ENB2ADvsCNbest_metric_model_classification3d_dict.pth'))\n","model.eval()"]},{"cell_type":"code","execution_count":57,"metadata":{"id":"KW5rFKe3eOHg","executionInfo":{"status":"ok","timestamp":1650538189886,"user_tz":-240,"elapsed":65950,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[],"source":["y_true = list()\n","y_pred = list()\n","\n","with torch.no_grad():\n","    for test_data in test_loader:\n","        test_images, test_labels = test_data[\"img\"].to(device), test_data[\"label\"].to(device)\n","        pred = model(test_images.unsqueeze(1)).argmax(dim=1)\n","        y_true.append(test_labels.item())\n","        y_pred.append(pred.item())"]},{"cell_type":"code","execution_count":58,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TQxjNsahy1xB","outputId":"370e4f6a-9ea6-44f2-fd61-17789f93f9ea","executionInfo":{"status":"ok","timestamp":1650538189888,"user_tz":-240,"elapsed":62,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","          CN     1.0000    0.6444    0.7838        45\n","          AD     0.7377    1.0000    0.8491        45\n","\n","    accuracy                         0.8222        90\n","   macro avg     0.8689    0.8222    0.8164        90\n","weighted avg     0.8689    0.8222    0.8164        90\n","\n"]}],"source":["from sklearn.metrics import classification_report\n","target_names = [\"CN\",\"AD\"]\n","print(classification_report(y_true, y_pred,target_names=target_names,digits=4))"]},{"cell_type":"code","execution_count":59,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"Aa9zS5cBy8VF","outputId":"9d519e77-3f30-43c9-ebb7-95b7990b2cda","executionInfo":{"status":"ok","timestamp":1650538189888,"user_tz":-240,"elapsed":55,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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119/PRMmTODIkSO0bNmSzp07A87ujNWrV1OgQAHq1KnDE088QWxsLLt37yYiIgJwduUADBgwgI8++oiQkBCWLl3KY489dnb3xd69e1m4cCEbN26kV69e9OvXj1mzZrFlyxaWLVuGqtKrVy8WLFjA2LFjiYiIYM2aNelmnzBhAqVKlSIhIYEWLVrQt29fSpcuzYkTJ2jVqhVvvPEGGzZs4NVXX2XRokXky5ePxx57jEmTJnHffffx8ssvU6pUKVJSUujUqRPh4eE0atTonPd47bXXmDRp0gXvfd111/Huu++ec9/u3bupWrXq2eUqVaqwe/fuC5779ttv061bN5599llSU1NZvHjxBWM+/fRTevToccH90dHRrF69mlatWp29r1mzZixatIi+ffum+33ylv8VgtnDIX9R9jZ5nMGfLefPzQdoFuQ0iatVzprEGR+4xF/uvnDw4EFKlLh463Nnb4Fj1qxZTJ8+nddffx1wTn/duXMnAJ06daJ4cWcLOTQ0lB07dlC/fn22bdvGE088wQ033EDXrl2Jj49n8eLF3HrrrWdf99SpU2dv33zzzeTJk4fQ0FD2799/9n1nzZpF06ZNAYiPj2fLli0EBQVdNPu7777LDz/8ADj70bds2ULp0qUJCAg4+6E4Z84cVq5cSYsWLQDnmEm5cs5Zf5MnT2b8+PEkJyezd+9eIiMjLygEAwcOZODAgRfNcbk+/PBD3nrrLfr27cvkyZN56KGHmD179tnH582bx6effsrChQvPeV58fDx9+/bl7bffplix/02dW65cOfbs2XPVuXxaCESkO/AOEAB8oqpjz3u8APAF0ByIA25X1WifBYpeCJt/Y1XIk9z7YQQKDL8plHvbWJM4k7sUKlToklc1r169mnr16gFOUZg6dSp16tQ5Z8zSpUspUKDA2eWAgACSk5MpWbIka9euZebMmXz00UdMnjyZt99+mxIlSmT4V3za1zlThFSV559/nkceeeScsdHR0Rnmnj9/PrNnz+bvv/+mcOHCdOjQ4ey6FixYkICAgLOvff/99/PKK6+c8/zt27fz+uuvs3z5ckqWLEn//v3T/V5dzhZB5cqVmT9//tnlmJgYOnTocMFzP//887MHfG+99VYefvjhs4+Fh4fz8MMP89tvv1G69P9mMUxKSqJv377cfffd3HLLLee8XmJiIoUKFUrv23RZ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\n"},"metadata":{"needs_background":"light"}}],"source":["fpr, tpr, _ = roc_curve(y_true, y_pred)\n","roc_auc = roc_auc_score(y_true, y_pred)\n","\n","plt.figure(1)\n","plt.plot([0, 1], [0, 1])\n","plt.plot(fpr, tpr, label=\"(Densenet area = {:.3f})\".format(roc_auc))\n","plt.xlabel(\"False positive rate\")\n","plt.ylabel(\"True positive rate\")\n","plt.title(\"ROC curve\")\n","plt.legend(loc=\"best\")\n","plt.show()"]},{"cell_type":"code","execution_count":60,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"_Abw0aPbosFy","outputId":"d58ec740-8aeb-4a2a-9aae-cbf4b81920af","executionInfo":{"status":"ok","timestamp":1650538189889,"user_tz":-240,"elapsed":48,"user":{"displayName":"Deevyankar Agarwal","userId":"14882055139397387561"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["cmat = confusion_matrix(y_true, y_pred)\n","\n","import seaborn as sns\n","\n","ax = sns.heatmap(cmat, annot=True, cmap='Blues')\n","\n","ax.set_title('Confusion Matrix CN-45[Label 0],AD-45[Label 1] \\n\\n');\n","ax.set_xlabel('\\nPredicted Values')\n","ax.set_ylabel('Actual Values ');\n","\n","## Ticket labels - List must be in alphabetical order\n","ax.xaxis.set_ticklabels(['False','True'])\n","ax.yaxis.set_ticklabels(['False','True'])\n","\n","## Display the visualization of the Confusion Matrix.\n","plt.show()\n"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":[],"machine_shape":"hm","name":"ENB2 Fold-5   AD vs CN","provenance":[{"file_id":"1eJcrgnBkiQlNfzLbGXZGjoVMmAnEAdQz","timestamp":1650530732080},{"file_id":"1iOWG61vZJGxUQ4i3WEerIbgvQz32YtfT","timestamp":1650512955783},{"file_id":"1IdODnK8uWStdX5vnV28ydP4ze4xrpIr2","timestamp":1650512563840},{"file_id":"1MyQGeBdvqYUwCi8iJ5UtFOoUW6y_IEhA","timestamp":1650477757217},{"file_id":"1WrzYE0tdhtad4YDIJynv9erz4GxiVBY_","timestamp":1650462036772},{"file_id":"15mTk3elNiQJBYvG03FDvYQk2ytDec9NM","timestamp":1650458439069},{"file_id":"1IhQ9HqIcPaurX0fHHwZzjNxj6hDQWAhp","timestamp":1650376343625},{"file_id":"1wUU8oGY0A8oMGwZEpJiyjpDsIzVYuh4E","timestamp":1650280826743},{"file_id":"1jDGtnqGS8Aczg-zyZNGpF3QVKuynO6nf","timestamp":1650214828929},{"file_id":"1Uz9WP-CrrnkXZEy_tARR5eySNxhYP1UD","timestamp":1650167306214},{"file_id":"1yl08D9WJda9cSY1v3qJEwoqmjVzMGDVK","timestamp":1648382303992},{"file_id":"1W_VhzdsW0ev4YXUdlgWGQVc8FDui_-ti","timestamp":1648355843901},{"file_id":"1WwLS7IvoVpwP2K0cG9HF3BCfim5lWeE-","timestamp":1648347425085},{"file_id":"1aeCVSDGh-GOkorZ5Bl2btjFC2p_kK_k8","timestamp":1648314735073},{"file_id":"1BTjj-YH44tZrTF7rG6y4vREOqyiL3u5W","timestamp":1648302511310},{"file_id":"1jG_r7VUlaeHdfoqDiC5T--PwdnOGDpX7","timestamp":1648292499522},{"file_id":"15j8pYQmvG_UNAnP8JuGzfD8ex_6hxRns","timestamp":1648283104327},{"file_id":"1NE32ZVaen7rQzttzj3osZe7_nXN9QMOy","timestamp":1648201474639},{"file_id":"1TgopIX2tPaVjnXLqi3W4-d6UhVK8nPEJ","timestamp":1648127135930},{"file_id":"1-T7dnfNb8Ib2zGQgpjLivEO2VwMdetwr","timestamp":1648121625144},{"file_id":"1r1lUfWnsJxZnUUPhf_ThH0HE9YscvYcQ","timestamp":1648111248098},{"file_id":"1HYazkOl83bLXhAFo_z0e9UhhR7KIhCdV","timestamp":1648061718205},{"file_id":"10mbf3ronNevgSGamc8CjNo5VuCqaUpgz","timestamp":1648055036787},{"file_id":"1luKbRAAUC-f03yc4j610EoiAHppb68BS","timestamp":1648031793067},{"file_id":"1zP4rEG5G6l4zAqoJ_IZtldeR-Rf9vIAn","timestamp":1644428204089},{"file_id":"11yTaxC3PAGGBVoJ2ggBXxzwKfysLiMF3","timestamp":1644392976089},{"file_id":"1RWGGIVivPPJdbKNKUT_E241L8JQ5spxx","timestamp":1643956276368}],"mount_file_id":"1hmaAp9JdsiCYMZjywkprF1fMmbqhfi-B","authorship_tag":"ABX9TyNbotJ0lr41AD36gLc57FT+"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}